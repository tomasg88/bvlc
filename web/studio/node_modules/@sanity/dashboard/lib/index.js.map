{"version":3,"file":"index.js","sources":["../src/components/DashboardWidgetContainer.tsx","../src/versionedClient.ts","../src/containers/DashboardContext.tsx","../src/containers/WidgetContainer.tsx","../src/widgets/projectInfo/ProjectInfo.tsx","../src/widgets/projectInfo/index.ts","../src/widgets/projectUsers/ProjectUsers.tsx","../src/widgets/projectUsers/index.ts","../src/widgets/sanityTutorials/Tutorial.tsx","../src/widgets/sanityTutorials/dataAdapter.ts","../src/widgets/sanityTutorials/SanityTutorials.tsx","../src/widgets/sanityTutorials/index.ts","../src/components/DashboardLayout.tsx","../src/components/WidgetGroup.tsx","../src/containers/Dashboard.tsx","../src/plugin.tsx"],"sourcesContent":["import React, {forwardRef} from 'react'\nimport {Card, Box, Heading} from '@sanity/ui'\nimport styled from 'styled-components'\n\nconst Root = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n  height: 100%;\n  box-sizing: border-box;\n  position: relative;\n`\n\nconst Header = styled(Card)`\n  position: sticky;\n  top: 0;\n  z-index: 2;\n  border-top-left-radius: inherit;\n  border-top-right-radius: inherit;\n`\n\nconst Footer = styled(Card)`\n  position: sticky;\n  overflow: hidden;\n  bottom: 0;\n  z-index: 2;\n  border-bottom-right-radius: inherit;\n  border-bottom-left-radius: inherit;\n  margin-top: auto;\n`\n\nconst Content = styled(Box)`\n  position: relative;\n  z-index: 1;\n  height: stretch;\n  min-height: 21.5em;\n\n  @media (min-width: ${({theme}) => theme.sanity.media[0]}px) {\n    overflow-y: auto;\n    outline: none;\n  }\n`\n\ninterface DashboardWidgetProps {\n  header?: string\n  children: React.ReactNode\n  footer?: React.ReactNode\n}\n\nexport const DashboardWidgetContainer = forwardRef(function DashboardWidgetContainer(\n  props: DashboardWidgetProps,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const {header, children, footer} = props\n\n  return (\n    <Root radius={3} display=\"flex\" ref={ref}>\n      {header && (\n        <Header borderBottom paddingX={3} paddingY={4}>\n          <Heading size={1} textOverflow=\"ellipsis\">\n            {header}\n          </Heading>\n        </Header>\n      )}\n      {children && <Content>{children}</Content>}\n      {footer && <Footer borderTop>{footer}</Footer>}\n    </Root>\n  )\n})\n","import {useClient} from 'sanity'\n\nexport function useVersionedClient() {\n  return useClient({apiVersion: '1'})\n}\n","import {createContext, useContext} from 'react'\nimport {DashboardConfig} from '../types'\n\nexport const DashboardContext = createContext<DashboardConfig>({widgets: []})\n\nexport function useDashboardConfig(): DashboardConfig {\n  return useContext(DashboardContext)\n}\n","import React, {createElement, useMemo} from 'react'\nimport {useDashboardConfig} from './DashboardContext'\nimport {Card} from '@sanity/ui'\nimport {DashboardWidget} from '../types'\n\nexport function WidgetContainer(props: DashboardWidget) {\n  const config = useDashboardConfig()\n  const layout = useMemo(\n    () => ({\n      ...(props.layout || {}),\n      ...(config.layout || {}),\n    }),\n    [props.layout, config.layout]\n  )\n\n  return (\n    <Card shadow={1} data-width={layout.width} data-height={layout.height}>\n      {createElement(props.component, {})}\n    </Card>\n  )\n}\n","import React, {useEffect, useMemo, useState} from 'react'\nimport {Box, Card, Stack, Heading, Grid, Label, Text, Code, Button} from '@sanity/ui'\nimport {useVersionedClient} from '../../versionedClient'\nimport {Subscription} from 'rxjs'\nimport {WidgetContainer} from '../../containers/WidgetContainer'\nimport {DashboardWidgetContainer} from '../../components/DashboardWidgetContainer'\nimport {DashboardWidget} from '../../types'\n\nexport interface ProjectInfoProps {\n  __experimental_before?: DashboardWidget[]\n  data: ProjectData[]\n}\n\ninterface App {\n  title: string\n  rows?: App[]\n  value?: string | {error: string}\n}\n\ninterface ProjectData {\n  title: string\n  category?: string\n}\n\nfunction isUrl(url?: string) {\n  return url && /^https?:\\/\\//.test(`${url}`)\n}\n\nfunction getGraphQlUrl(projectId: string, dataset: string) {\n  return `https://${projectId}.api.sanity.io/v1/graphql/${dataset}/default`\n}\n\nfunction getGroqUrl(projectId: string, dataset: string) {\n  return `https://${projectId}.api.sanity.io/v1/groq/${dataset}`\n}\n\nfunction getManageUrl(projectId: string) {\n  return `https://manage.sanity.io/projects/${projectId}`\n}\n\nconst NO_EXPERIMENTAL: DashboardWidget[] = []\nconst NO_DATA: ProjectData[] = []\n\nexport function ProjectInfo(props: ProjectInfoProps) {\n  const {__experimental_before = NO_EXPERIMENTAL, data = NO_DATA} = props\n  const [studioHost, setStudioHost] = useState<string | {error: string} | undefined>()\n  const [graphqlApi, setGraphQlApi] = useState<string | {error: string} | undefined>()\n  const versionedClient = useVersionedClient()\n  const {projectId = 'unknown', dataset = 'unknown'} = versionedClient.config()\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = []\n\n    subscriptions.push(\n      versionedClient.observable\n        .request<{studioHost: string}>({uri: `/projects/${projectId}`})\n        .subscribe({\n          next: (result) => {\n            const {studioHost: host} = result\n            setStudioHost(host ? `https://${host}.sanity.studio` : undefined)\n          },\n          error: (error) => {\n            console.error('Error while looking for studioHost', error)\n            setStudioHost({\n              error: 'Something went wrong while looking up studioHost. See console.',\n            })\n          },\n        })\n    )\n\n    // ping assumed graphql endpoint\n    subscriptions.push(\n      versionedClient.observable\n        .request({\n          method: 'HEAD',\n          uri: `/graphql/${dataset}/default`,\n        })\n        .subscribe({\n          next: () => setGraphQlApi(getGraphQlUrl(projectId, dataset)),\n          error: (error) => {\n            if (error.statusCode === 404) {\n              setGraphQlApi(undefined)\n            } else {\n              console.error('Error while looking for graphqlApi', error)\n              setGraphQlApi({\n                error: 'Something went wrong while looking up graphqlApi. See console.',\n              })\n            }\n          },\n        })\n    )\n\n    return () => {\n      subscriptions.forEach((s) => s.unsubscribe())\n    }\n  }, [dataset, projectId, versionedClient, setGraphQlApi, setStudioHost])\n\n  const assembleTableRows = useMemo(() => {\n    let result: App[] = [\n      {\n        title: 'Sanity project',\n        rows: [\n          {title: 'Project ID', value: projectId},\n          {title: 'Dataset', value: dataset},\n        ],\n      },\n    ]\n\n    // Handle any apps\n    const apps: App[] = [\n      studioHost ? {title: 'Studio', value: studioHost} : null,\n      ...data.filter((item) => item.category === 'apps'),\n    ].filter((a): a is App => !!a)\n    if (apps.length > 0) {\n      result = result.concat([{title: 'Apps', rows: apps}])\n    }\n\n    // Handle APIs\n    result = result.concat(\n      [\n        {\n          title: 'APIs',\n          rows: [\n            {title: 'GROQ', value: getGroqUrl(projectId, dataset)},\n            {\n              title: 'GraphQL',\n              value: (typeof graphqlApi === 'object' ? 'Error' : graphqlApi) ?? 'Not deployed',\n            },\n          ],\n        },\n      ],\n      data.filter((item) => item.category === 'apis')\n    )\n\n    // Handle whatever else there might be\n    const otherStuff: Record<string, ProjectData[]> = {}\n    data.forEach((item) => {\n      if (item.category && item.category !== 'apps' && item.category !== 'apis') {\n        if (!otherStuff[item.category]) {\n          otherStuff[item.category] = []\n        }\n        otherStuff[item.category].push(item)\n      }\n    })\n    Object.keys(otherStuff).forEach((category) => {\n      result.push({title: category, rows: otherStuff[category]})\n    })\n\n    return result\n  }, [graphqlApi, studioHost, projectId, dataset, data])\n\n  return (\n    <>\n      {__experimental_before.map((widgetConfig, idx) => (\n        <WidgetContainer key={idx} {...widgetConfig} />\n      ))}\n      <Box height=\"fill\" marginTop={__experimental_before?.length > 0 ? 4 : 0}>\n        <DashboardWidgetContainer\n          footer={\n            <Button\n              style={{width: '100%'}}\n              paddingX={2}\n              paddingY={4}\n              mode=\"bleed\"\n              tone=\"primary\"\n              text=\"Manage project\"\n              as=\"a\"\n              href={getManageUrl(projectId)}\n            />\n          }\n        >\n          <Card\n            paddingY={4}\n            radius={2}\n            role=\"table\"\n            aria-label=\"Project info\"\n            aria-describedby=\"project_info_table\"\n          >\n            <Stack space={4}>\n              <Box paddingX={3} as=\"header\">\n                <Heading size={1} as=\"h2\" id=\"project_info_table\">\n                  Project info\n                </Heading>\n              </Box>\n              {assembleTableRows.map((item) => {\n                if (!item || !item.rows) {\n                  return null\n                }\n\n                return (\n                  <Stack key={item.title} space={3}>\n                    <Card borderBottom padding={3}>\n                      <Label size={0} muted role=\"columnheader\">\n                        {item.title}\n                      </Label>\n                    </Card>\n                    <Stack space={4} paddingX={3} role=\"rowgroup\">\n                      {item.rows.map((row) => {\n                        return (\n                          <Grid key={row.title} columns={2} role=\"row\">\n                            <Text weight=\"medium\" role=\"rowheader\">\n                              {row.title}\n                            </Text>\n                            {typeof row.value === 'object' && (\n                              <Text size={1}>{row.value?.error}</Text>\n                            )}\n                            {typeof row.value === 'string' && (\n                              <>\n                                {isUrl(row.value) ? (\n                                  <Text size={1} role=\"cell\" style={{wordBreak: 'break-word'}}>\n                                    <a href={row.value}>{row.value}</a>\n                                  </Text>\n                                ) : (\n                                  <Code size={1} role=\"cell\" style={{wordBreak: 'break-word'}}>\n                                    {row.value}\n                                  </Code>\n                                )}\n                              </>\n                            )}\n                          </Grid>\n                        )\n                      })}\n                    </Stack>\n                  </Stack>\n                )\n              })}\n            </Stack>\n          </Card>\n        </DashboardWidgetContainer>\n      </Box>\n    </>\n  )\n}\n","import {ProjectInfo} from './ProjectInfo'\nimport {LayoutConfig, DashboardWidget} from '../../types'\n\nexport function projectInfoWidget(config?: {layout?: LayoutConfig}): DashboardWidget {\n  return {\n    name: 'project-info',\n    component: ProjectInfo,\n    layout: config?.layout ?? {width: 'medium'},\n  }\n}\n","import React, {useCallback, useEffect, useState} from 'react'\nimport {from} from 'rxjs'\nimport {map, switchMap} from 'rxjs/operators'\nimport {Stack, Spinner, Card, Box, Text, Button} from '@sanity/ui'\nimport {RobotIcon} from '@sanity/icons'\nimport styled from 'styled-components'\nimport {DefaultPreview, useUserStore} from 'sanity'\nimport {useVersionedClient} from '../../versionedClient'\nimport {User} from 'sanity'\nimport {DashboardWidgetContainer} from '../../components/DashboardWidgetContainer'\n\nconst AvatarWrapper = styled(Card)`\n  box-sizing: border-box;\n  border-radius: 50%;\n  border-color: transparent;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    width: 100%;\n    height: auto;\n  }\n`\n\nfunction getInviteUrl(projectId: string) {\n  return `https://manage.sanity.io/projects/${projectId}/team/invite`\n}\n\ninterface Member {\n  id: string\n  role: string\n  isRobot: boolean\n}\n\ninterface Project {\n  id: string\n  members: Member[]\n}\n\nexport function ProjectUsers() {\n  const [project, setProject] = useState<Project | undefined>()\n  const [users, setUsers] = useState<User[] | undefined>()\n  const [error, setError] = useState<Error | undefined>()\n\n  const userStore = useUserStore()\n  const versionedClient = useVersionedClient()\n\n  const fetchData = useCallback(() => {\n    const {projectId} = versionedClient.config()\n    const subscription = versionedClient.observable\n      .request<Project>({\n        uri: `/projects/${projectId}`,\n      })\n      .pipe(\n        switchMap((_project) =>\n          from(userStore.getUsers(_project.members.map((mem) => mem.id))).pipe(\n            map((_users) => ({project: _project, users: _users}))\n          )\n        )\n      )\n      .subscribe({\n        next: ({users: _users, project: _project}) => {\n          setProject(_project)\n          setUsers(\n            (Array.isArray(_users) ? _users : [_users]).sort((userA, userB) =>\n              sortUsersByRobotStatus(userA, userB, _project)\n            )\n          )\n        },\n        error: (e: Error) => setError(e),\n      })\n\n    return () => subscription.unsubscribe()\n  }, [userStore, versionedClient])\n\n  useEffect(() => fetchData(), [fetchData])\n\n  const handleRetryFetch = useCallback(() => fetchData(), [fetchData])\n\n  const isLoading = !users || !project\n\n  if (error) {\n    return (\n      <DashboardWidgetContainer header=\"Project users\">\n        <Box padding={4}>\n          <Text>\n            Something went wrong while fetching data. You could{' '}\n            <a onClick={handleRetryFetch} title=\"Retry users fetch\" style={{cursor: 'pointer'}}>\n              retry\n            </a>\n            ..?\n          </Text>\n        </Box>\n      </DashboardWidgetContainer>\n    )\n  }\n\n  return (\n    <DashboardWidgetContainer\n      header=\"Project users\"\n      footer={\n        <Button\n          style={{width: '100%'}}\n          paddingX={2}\n          paddingY={4}\n          mode=\"bleed\"\n          tone=\"primary\"\n          text=\"Invite members\"\n          as=\"a\"\n          loading={isLoading}\n          href={isLoading ? undefined : getInviteUrl(project.id)}\n        />\n      }\n    >\n      {isLoading && (\n        <Box paddingY={5} paddingX={2}>\n          <Stack space={4}>\n            <Text align=\"center\" muted size={1}>\n              <Spinner />\n            </Text>\n            <Text align=\"center\" size={1} muted>\n              Loading items...\n            </Text>\n          </Stack>\n        </Box>\n      )}\n\n      {!isLoading && (\n        <Stack space={3} padding={3}>\n          {users?.map((user) => {\n            const membership = project.members.find((member) => member.id === user.id)\n            const media = membership?.isRobot ? (\n              <Text size={3}>\n                <RobotIcon />\n              </Text>\n            ) : (\n              <AvatarWrapper tone=\"transparent\">\n                {user?.imageUrl && <img src={user.imageUrl} alt={user?.displayName} />}\n              </AvatarWrapper>\n            )\n            return (\n              <Box key={user.id}>\n                <DefaultPreview\n                  title={user.displayName}\n                  subtitle={membership?.role}\n                  media={media}\n                />\n              </Box>\n            )\n          })}\n        </Stack>\n      )}\n    </DashboardWidgetContainer>\n  )\n}\n\nfunction sortUsersByRobotStatus(userA: User, userB: User, project: Project) {\n  const {members} = project\n  const membershipA = members.find((member) => member.id === userA?.id)\n  const membershipB = members.find((member) => member.id === userB?.id)\n  if (membershipA?.isRobot) {\n    return 1\n  }\n  if (membershipB?.isRobot) {\n    return -1\n  }\n  return 0\n}\n","import {ProjectUsers} from './ProjectUsers'\nimport {LayoutConfig, DashboardWidget} from '../../types'\n\nexport function projectUsersWidget(config?: {layout?: LayoutConfig}): DashboardWidget {\n  return {\n    name: 'project-info',\n    component: ProjectUsers,\n    layout: config?.layout,\n  }\n}\n","import React from 'react'\nimport {Card, Box, Heading, Flex, Text, Stack} from '@sanity/ui'\nimport {PlayIcon} from '@sanity/icons'\nimport styled from 'styled-components'\n\nconst PlayIconBox = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 2.75em;\n    height: 2.75em;\n    border-radius: 50%;\n    background: ${({theme}) => theme.sanity.color.card.enabled.bg};\n    opacity: 0.75;\n  }\n`\n\nconst Root = styled(Flex)`\n  &:hover {\n    ${PlayIconBox} {\n      &:before {\n        opacity: 1;\n      }\n    }\n  }\n`\n\nconst PosterCard = styled(Card)`\n  width: 100%;\n  padding-bottom: calc(9 / 16 * 100%);\n  position: relative;\n`\n\nconst Poster = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  display: block;\n\n  &:not([src]) {\n    display: none;\n  }\n`\n\nexport interface TutorialProps {\n  title: string\n  posterURL?: string\n  href: string\n  showPlayIcon?: boolean\n  presenterName?: string\n  presenterSubtitle?: string\n}\n\nexport function Tutorial(props: TutorialProps) {\n  const {title, posterURL, showPlayIcon, href, presenterName, presenterSubtitle} = props\n\n  return (\n    <Root flex={1}>\n      <Card\n        sizing=\"border\"\n        flex={1}\n        padding={2}\n        radius={2}\n        as=\"a\"\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{position: 'relative'}}\n      >\n        <Flex direction=\"column\" style={{height: '100%'}}>\n          {posterURL && (\n            <PosterCard marginBottom={1}>\n              <Poster src={posterURL} />\n              {showPlayIcon && (\n                <PlayIconBox display=\"flex\">\n                  <Text align=\"center\">\n                    <PlayIcon />\n                  </Text>\n                </PlayIconBox>\n              )}\n            </PosterCard>\n          )}\n          <Flex direction=\"column\" justify=\"space-between\" paddingY={2} flex={1}>\n            <Heading as=\"h3\" size={1}>\n              {title}\n            </Heading>\n            <Box marginTop={4}>\n              <Stack space={2} flex={1}>\n                <Text size={1}>{presenterName}</Text>\n                <Text size={0} style={{opacity: 0.7}}>\n                  {presenterSubtitle}\n                </Text>\n              </Stack>\n            </Box>\n          </Flex>\n        </Flex>\n      </Card>\n    </Root>\n  )\n}\n","import {useMemo} from 'react'\nimport {useVersionedClient} from '../../versionedClient'\nimport imageUrlBuilder from '@sanity/image-url'\n\nconst tutorialsProjectConfig = {\n  projectId: '3do82whm',\n  dataset: 'next',\n}\n\nexport interface Guide {\n  _type?: string\n  slug?: {current: string}\n  presenter?: {\n    name?: string\n  }\n}\n\nexport interface FeedItem {\n  _id: string\n  title?: string\n  poster?: string\n  category?: string\n  guideOrTutorial?: Guide\n  externalLink?: string\n  presenter?: {\n    name?: string\n  }\n  hasVideo?: boolean\n}\n\nexport function useDataAdapter() {\n  const versionedClient = useVersionedClient()\n  return useMemo(\n    () => ({\n      getFeed: (templateRepoId: string) => {\n        const uri = templateRepoId\n          ? `/addons/dashboard?templateRepoId=${templateRepoId}`\n          : '/addons/dashboard'\n        return versionedClient.observable.request<{items: FeedItem[]}>({\n          uri,\n          withCredentials: false,\n        })\n      },\n      urlBuilder: imageUrlBuilder(tutorialsProjectConfig),\n    }),\n    [versionedClient]\n  )\n}\n","import React, {useEffect, useState} from 'react'\nimport {Flex} from '@sanity/ui'\nimport {Tutorial} from './Tutorial'\nimport {FeedItem, Guide, useDataAdapter} from './dataAdapter'\nimport {DashboardWidgetContainer} from '../../components/DashboardWidgetContainer'\n\nfunction createUrl(slug: {current: string}, type?: string) {\n  if (type === 'tutorial') {\n    return `https://www.sanity.io/docs/tutorials/${slug.current}`\n  } else if (type === 'guide') {\n    return `https://www.sanity.io/docs/guides/${slug.current}`\n  }\n  return false\n}\n\nexport interface SanityTutorialsProps {\n  templateRepoId: string\n}\n\nexport function SanityTutorials(props: SanityTutorialsProps) {\n  const {templateRepoId} = props\n  const [feedItems, setFeedItems] = useState<FeedItem[]>([])\n\n  const {getFeed, urlBuilder} = useDataAdapter()\n\n  useEffect(() => {\n    const subscription = getFeed(templateRepoId).subscribe((response) => {\n      setFeedItems(response.items)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [setFeedItems, getFeed, templateRepoId])\n\n  const title = 'Learn about Sanity'\n\n  return (\n    <DashboardWidgetContainer header={title}>\n      <Flex as=\"ul\" overflow=\"auto\" align=\"stretch\" paddingY={2}>\n        {feedItems?.map((feedItem, index) => {\n          if (!feedItem.title || (!feedItem.guideOrTutorial && !feedItem.externalLink)) {\n            return null\n          }\n          const presenter = feedItem.presenter || feedItem.guideOrTutorial?.presenter || {}\n          const subtitle = feedItem.category\n          const {guideOrTutorial = {} as Guide} = feedItem\n          const href =\n            (guideOrTutorial.slug\n              ? createUrl(guideOrTutorial.slug, guideOrTutorial._type)\n              : feedItem.externalLink) || feedItem.externalLink\n\n          return (\n            <Flex\n              as=\"li\"\n              key={feedItem._id}\n              paddingRight={index < feedItems?.length - 1 ? 1 : 3}\n              paddingLeft={index === 0 ? 3 : 0}\n              align=\"stretch\"\n              style={{minWidth: 272, width: '30%'}}\n            >\n              <Tutorial\n                title={feedItem.title}\n                href={href ?? ''}\n                presenterName={presenter.name}\n                presenterSubtitle={subtitle}\n                showPlayIcon={feedItem.hasVideo}\n                posterURL={\n                  feedItem.poster ? urlBuilder.image(feedItem.poster).height(360).url() : undefined\n                }\n              />\n            </Flex>\n          )\n        })}\n      </Flex>\n    </DashboardWidgetContainer>\n  )\n}\n","import {SanityTutorials} from './SanityTutorials'\nimport {LayoutConfig, DashboardWidget} from '../../types'\n\nexport function sanityTutorialsWidget(config?: {layout?: LayoutConfig}): DashboardWidget {\n  return {\n    name: 'sanity-tutorials',\n    component: SanityTutorials,\n    layout: config?.layout ?? {width: 'full'},\n  }\n}\n","import React, {PropsWithChildren} from 'react'\nimport {Container} from '@sanity/ui'\n\nexport function DashboardLayout(props: PropsWithChildren<{}>) {\n  return (\n    <Container width={4} padding={4} sizing=\"border\" style={{height: '100%', overflowY: 'auto'}}>\n      {props.children}\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled, {css} from 'styled-components'\nimport {Box, Card, Grid, Text} from '@sanity/ui'\nimport {WidgetContainer} from '../containers/WidgetContainer'\nimport {DashboardConfig, LayoutConfig, DashboardWidget} from '../types'\n\nconst media = {\n  small: (...args: Parameters<typeof css>) =>\n    css`\n      @media (min-width: ${({theme}) => theme.sanity.media[0]}px) {\n        ${css(...args)}\n      }\n    `,\n  medium: (...args: Parameters<typeof css>) =>\n    css`\n      @media (min-width: ${({theme}) => theme.sanity.media[2]}px) {\n        ${css(...args)}\n      }\n    `,\n}\n\nconst Root = styled(Grid)`\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n\n  & > div {\n    overflow: hidden;\n  }\n\n  & > div[data-width='medium'] {\n    ${media.small`\n      grid-column: span 2;\n    `}\n  }\n\n  & > div[data-width='large'] {\n    ${media.small`\n      grid-column: span 2;\n    `}\n\n    ${media.medium`\n      grid-column: span 3;\n    `}\n  }\n\n  & > div[data-width='full'] {\n    ${media.small`\n      grid-column: 1 / -1;\n    `}\n  }\n\n  & > div[data-height='medium'] {\n    ${media.small`\n      grid-row: span 2;\n    `}\n  }\n\n  & > div[data-height='large'] {\n    ${media.small`\n      grid-row: span 2;\n    `}\n\n    ${media.medium`\n      grid-row: span 3;\n    `}\n  }\n\n  & > div[data-height='full'] {\n    ${media.medium`\n      grid-row: 1 / -1;\n    `}\n  }\n`\n\nexport interface WidgetGroupProps {\n  config: Partial<DashboardConfig>\n}\n\nconst NO_WIDGETS: DashboardWidget[] = []\nconst NO_LAYOUT: LayoutConfig = {}\n\nexport function WidgetGroup(props: WidgetGroupProps) {\n  const {\n    config: {layout = NO_LAYOUT, widgets = NO_WIDGETS},\n  } = props\n  return (\n    <Root\n      autoFlow=\"row dense\"\n      data-width={layout.width || 'auto'}\n      data-height={layout.height || 'auto'}\n      gap={4}\n    >\n      {widgets.length ? null : (\n        <Card padding={4} shadow={1} tone=\"primary\">\n          <Text align=\"center\">Add some widgets to populate this space.</Text>\n        </Card>\n      )}\n      {widgets.map((widgetConfig, index) => {\n        if (widgetConfig.type === '__experimental_group') {\n          return <WidgetGroup key={index} config={widgetConfig} />\n        }\n        if (widgetConfig.component) {\n          return <WidgetContainer key={index} {...widgetConfig} />\n        }\n        return <Box key={index}>{widgetConfig.name} is missing widget component</Box>\n      })}\n    </Root>\n  )\n}\n","import React from 'react'\nimport {DashboardLayout} from '../components/DashboardLayout'\nimport {WidgetGroup} from '../components/WidgetGroup'\nimport {DashboardContext} from './DashboardContext'\nimport {DashboardConfig} from '../types'\n\nexport function Dashboard({config}: {config: DashboardConfig}) {\n  if (!config) {\n    return null\n  }\n\n  return (\n    <DashboardContext.Provider value={config}>\n      <DashboardLayout>\n        <WidgetGroup config={config} />\n      </DashboardLayout>\n    </DashboardContext.Provider>\n  )\n}\n","import React, {ComponentType, CSSProperties} from 'react'\nimport {Dashboard} from './containers/Dashboard'\nimport {definePlugin} from 'sanity'\nimport {DashboardConfig, DashboardWidget, LayoutConfig} from './types'\n\nconst strokeStyle: CSSProperties = {\n  stroke: 'currentColor',\n  strokeWidth: 1.2,\n}\n\nconst DashboardIcon = () => (\n  <svg\n    data-sanity-icon\n    viewBox=\"0 0 25 25\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"xMidYMid\"\n    width=\"1em\"\n    height=\"1em\"\n  >\n    <path d=\"M19.5 19.5H5.5V5.5H19.5V19.5Z\" style={strokeStyle} />\n    <path d=\"M5.5 12.5H19.5\" style={strokeStyle} />\n    <path d=\"M14.5 19.5V12.5M10.5 12.5V5.5\" style={strokeStyle} />\n  </svg>\n)\n\nexport interface DashboardPluginConfig {\n  /**\n   * Dashboard tool title\n   */\n  title?: string\n  /**\n   * Dashboard tool name (used in url path)\n   */\n  name?: string\n  /**\n   * Dashboard tool icon\n   */\n  icon?: ComponentType\n  widgets?: DashboardWidget[]\n\n  /**\n   * Will be used for widgets that do not define a layout directly.\n   */\n  defaultLayout?: LayoutConfig\n}\n\nexport const dashboardTool = definePlugin<DashboardPluginConfig>((config = {}) => {\n  const pluginConfig: DashboardConfig = {\n    layout: config.defaultLayout ?? {},\n    widgets: config.widgets ?? [],\n  }\n\n  const title = config.title ?? 'Dashboard'\n  const name = config.name ?? 'dashboard'\n  const icon = config.icon ?? DashboardIcon\n\n  return {\n    name: 'dashboard',\n    tools: (prev, context) => {\n      return [\n        ...prev,\n        {\n          title,\n          name,\n          icon,\n          component: () => <Dashboard config={pluginConfig} />,\n        },\n      ]\n    },\n  }\n})\n"],"names":["_a","_b","_c","_d","Root","styled","Card","__template","Header","Footer","Content","default","Box","_ref","theme","sanity","media","DashboardWidgetContainer","forwardRef","props","ref","header","children","footer","radius","display","jsx","borderBottom","paddingX","paddingY","Heading","size","textOverflow","borderTop","useVersionedClient","useClient","apiVersion","DashboardContext","createContext","widgets","useDashboardConfig","useContext","WidgetContainer","config","layout","useMemo","shadow","width","height","createElement","component","isUrl","url","test","concat","getGraphQlUrl","projectId","dataset","getGroqUrl","getManageUrl","NO_EXPERIMENTAL","NO_DATA","ProjectInfo","__experimental_before","data","studioHost","setStudioHost","useState","graphqlApi","setGraphQlApi","versionedClient","useEffect","subscriptions","push","observable","request","uri","subscribe","next","result","host","error","console","method","statusCode","forEach","s","unsubscribe","assembleTableRows","title","rows","value","apps","filter","item","category","a","length","otherStuff","Object","keys","jsxs","Fragment","map","widgetConfig","idx","marginTop","Button","style","mode","tone","text","as","href","role","Stack","space","id","padding","Label","muted","row","Grid","columns","Text","weight","wordBreak","Code","projectInfoWidget","name","AvatarWrapper","getInviteUrl","ProjectUsers","project","setProject","users","setUsers","setError","userStore","useUserStore","fetchData","useCallback","subscription","pipe","switchMap","_project","from","getUsers","members","mem","_users","_ref2","Array","isArray","sort","userA","userB","sortUsersByRobotStatus","e","handleRetryFetch","isLoading","onClick","cursor","loading","align","Spinner","user","membership","find","member","isRobot","RobotIcon","imageUrl","src","alt","displayName","DefaultPreview","subtitle","membershipA","membershipB","projectUsersWidget","PlayIconBox","_ref3","color","card","enabled","bg","Flex","PosterCard","Poster","img","Tutorial","posterURL","showPlayIcon","presenterName","presenterSubtitle","flex","sizing","target","rel","position","direction","marginBottom","PlayIcon","justify","opacity","tutorialsProjectConfig","useDataAdapter","getFeed","templateRepoId","withCredentials","urlBuilder","imageUrlBuilder","createUrl","slug","type","current","SanityTutorials","feedItems","setFeedItems","response","items","overflow","feedItem","index","guideOrTutorial","externalLink","presenter","_type","paddingRight","paddingLeft","minWidth","hasVideo","poster","image","_id","sanityTutorialsWidget","DashboardLayout","Container","overflowY","_e","_f","_g","_h","_i","_j","_k","small","css","_ref4","arguments","medium","_ref5","NO_WIDGETS","NO_LAYOUT","WidgetGroup","autoFlow","gap","Dashboard","_ref6","Provider","strokeStyle","stroke","strokeWidth","DashboardIcon","viewBox","fill","xmlns","preserveAspectRatio","d","dashboardTool","definePlugin","undefined","pluginConfig","defaultLayout","icon","tools","prev","context"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;AAIA,MAAMC,MAAO,GAAAC,eAAAA,CAAAA,OAAA,CAAOC,EAAI,CAAAA,IAAA,CAAA,CAAXN,IAAY,KAAAA,IAAA,GAAAO,YAAA,CAAA,CAAA,iJAAA,CAAA,CAAA,CAAA,CAAA;AASzB,MAAMC,MAAS,GAAAH,eAAAA,CAAAA,OAAA,CAAOC,EAAI,CAAAA,IAAA,CAAA,CAAXL,IAAY,KAAAA,IAAA,GAAAM,YAAA,CAAA,CAAA,4HAAA,CAAA,CAAA,CAAA,CAAA;AAQ3B,MAAME,MAAS,GAAAJ,eAAAA,CAAAA,OAAA,CAAOC,EAAI,CAAAA,IAAA,CAAA,CAAXJ,IAAY,KAAAA,IAAA,GAAAK,YAAA,CAAA,CAAA,+KAAA,CAAA,CAAA,CAAA,CAAA;AAU3B,MAAMG,OAAU,GAAAL,eAAA,CAAAM,OAAA,CAAOC,MAAG,CAAA,CAAVT,gBAAWI,YAM8B,CAAA,CAAA,4GAAA,EAAA,yDAAA,CAAA,CAAA,CAAA,EAAlCM,IAAA;EAAA,IAAC;IAACC;GAAK,GAAAD,IAAA;EAAA,OAAMC,KAAM,CAAAC,MAAA,CAAOC,MAAM,CAAC,CAAA;AAAA,EAAA;AAYjD,MAAMC,wBAA2B,GAAAC,KAAAA,CAAAA,UAAA,CAAW,SAASD,yBAAAA,CAC1DE,OACAC,GACA,EAAA;EACA,MAAM;IAACC,MAAA;IAAQC,QAAU;IAAAC;EAAA,CAAU,GAAAJ,KAAA;EAEnC,sCACGf,MAAK,EAAA;IAAAoB,MAAA,EAAQ,CAAG;IAAAC,OAAA,EAAQ;IAAOL,GAC7B;IAAAE,QAAA,EAAA,CAAAD,MAAA,IACEK,eAAAA,UAAAA,CAAAA,GAAA,CAAAlB,MAAA,EAAA;MAAOmB,YAAY,EAAA,IAAA;MAACC,UAAU,CAAG;MAAAC,QAAA,EAAU,CAC1C;MAAAP,QAAA,EAAAI,eAAAA,UAAAA,CAAAA,GAAA,CAACI;QAAQC,IAAM,EAAA,CAAA;QAAGC,YAAa,EAAA,UAAA;QAC5BV;MACH,CAAA;KACF,CAAA,EAEDA,QAAA,mBAAaI,UAAA,CAAAA,GAAA,CAAAhB,OAAA,EAAA;MAASY;IAAS,CAAA,CAAA,EAC/BC,MAAU,IAAA,eAAAG,UAAA,CAAAA,GAAA,CAACjB,MAAO,EAAA;MAAAwB,SAAA,EAAS;MAAEX,QAAO,EAAAC;KAAA,CAAA;EACvC,CAAA,CAAA;AAEJ,CAAC,CAAA;AClEM,SAASW,kBAAqBA,CAAA,EAAA;EACnC,OAAOC,gBAAU,CAAA;IAACC,UAAY,EAAA;EAAI,CAAA,CAAA;AACpC;ACDO,MAAMC,mBAAmBC,KAAAA,CAAAA,aAA+B,CAAA;EAACC,OAAS,EAAA;AAAG,CAAA,CAAA;AAErE,SAASC,kBAAsCA,CAAA,EAAA;EACpD,OAAOC,KAAAA,CAAAA,WAAWJ,gBAAgB,CAAA;AACpC;ACFO,SAASK,gBAAgBvB,KAAwB,EAAA;EACtD,MAAMwB,SAASH,kBAAmB,EAAA;EAClC,MAAMI,MAAS,GAAAC,KAAA,CAAAA,OAAA,CACb,OAAO;IACL,IAAI1B,KAAM,CAAAyB,MAAA,IAAU,CAAC,CAAA;IACrB,IAAID,MAAO,CAAAC,MAAA,IAAU,CAAC,CAAA;EAAA,CACxB,CAAA,EACA,CAACzB,KAAA,CAAMyB,MAAQ,EAAAD,MAAA,CAAOC,MAAM,CAAA,CAC9B;EAEA,OACGlB,eAAAA,UAAAA,CAAAA,GAAA,CAAApB,EAAAA,CAAAA,IAAA,EAAA;IAAKwC,MAAQ,EAAA,CAAA;IAAG,cAAYF,MAAO,CAAAG,KAAA;IAAO,aAAa,EAAAH,MAAA,CAAOI;IAC5D1B,QAAc,EAAA2B,KAAA,CAAAA,aAAA,CAAA9B,KAAA,CAAM+B,SAAW,EAAA,CAAA,CAAE;EACpC,CAAA,CAAA;AAEJ;ACIA,SAASC,MAAMC,GAAc,EAAA;EAC3B,OAAOA,GAAO,IAAA,cAAA,CAAeC,IAAK,CAAA,EAAA,CAAGC,MAAK,CAAAF,GAAA,CAAA,CAAA;AAC5C;AAEA,SAASG,aAAAA,CAAcC,WAAmBC,OAAiB,EAAA;EAClD,OAAA,UAAA,CAAWH,MAAS,CAAAE,SAAA,EAAA,4BAAA,CAAA,CAA6BF,MAAO,CAAAG,OAAA,EAAA,UAAA,CAAA;AACjE;AAEA,SAASC,UAAAA,CAAWF,WAAmBC,OAAiB,EAAA;EAC/C,OAAA,UAAA,CAAWH,kBAAS,yBAA0B,CAAA,CAAAA,MAAA,CAAAG,OAAA,CAAA;AACvD;AAEA,SAASE,aAAaH,SAAmB,EAAA;EACvC,OAAO,oCAAqC,CAAAF,MAAA,CAAAE,SAAA,CAAA;AAC9C;AAEA,MAAMI,kBAAqC,EAAC;AAC5C,MAAMC,UAAyB,EAAC;AAEzB,SAASC,YAAY3C,KAAyB,EAAA;EACnD,MAAM;IAAC4C,qBAAA,GAAwBH,eAAiB;IAAAI,IAAA,GAAOH;GAAW,GAAA1C,KAAA;EAClE,MAAM,CAAC8C,UAAA,EAAYC,aAAa,CAAA,GAAIC,KAA+C,CAAAA,QAAA,CAAA,CAAA;EACnF,MAAM,CAACC,UAAA,EAAYC,aAAa,CAAA,GAAIF,KAA+C,CAAAA,QAAA,CAAA,CAAA;EACnF,MAAMG,kBAAkBpC,kBAAmB,EAAA;EAC3C,MAAM;IAACsB,SAAY,GAAA,SAAA;IAAWC,UAAU;GAAS,GAAIa,gBAAgB3B,MAAO,EAAA;EAE5E4B,KAAAA,CAAAA,SAAA,CAAU,MAAM;IACd,MAAMC,gBAAgC,EAAC;IAEzBA,aAAA,CAAAC,IAAA,CACZH,eAAA,CAAgBI,WACbC,OAA8B,CAAA;MAACC,KAAK,YAAa,CAAAtB,MAAA,CAAAE,SAAA;KAAY,CAAA,CAC7DqB,SAAU,CAAA;MACTC,IAAA,EAAOC,MAAW,IAAA;QACV,MAAA;UAACd,UAAY,EAAAe;QAAQ,CAAA,GAAAD,MAAA;QAC3Bb,aAAA,CAAcc,IAAO,GAAA,UAAA,CAAW1B,MAAI,CAAA0B,IAAA,EAAA,gBAAA,CAAA,GAAmB,KAAS,CAAA,CAAA;MAClE,CAAA;MACAC,KAAA,EAAQA,KAAU,IAAA;QACRC,OAAA,CAAAD,KAAA,CAAM,sCAAsCA,KAAK,CAAA;QAC3Cf,aAAA,CAAA;UACZe,KAAO,EAAA;QAAA,CACR,CAAA;MACH;IAAA,CACD,CAAA,CACL;IAGcT,aAAA,CAAAC,IAAA,CACZH,eAAA,CAAgBI,WACbC,OAAQ,CAAA;MACPQ,MAAQ,EAAA,MAAA;MACRP,GAAA,EAAK,YAAYtB,MAAO,CAAAG,OAAA,EAAA,UAAA;IACzB,CAAA,EACAoB,SAAU,CAAA;MACTC,MAAMA,CAAA,KAAMT,aAAA,CAAcd,aAAc,CAAAC,SAAA,EAAWC,OAAO,CAAC,CAAA;MAC3DwB,KAAA,EAAQA,KAAU,IAAA;QACZ,IAAAA,KAAA,CAAMG,eAAe,GAAK,EAAA;UAC5Bf,aAAA,CAAc,KAAS,CAAA,CAAA;QAAA,CAClB,MAAA;UACGa,OAAA,CAAAD,KAAA,CAAM,sCAAsCA,KAAK,CAAA;UAC3CZ,aAAA,CAAA;YACZY,KAAO,EAAA;UAAA,CACR,CAAA;QACH;MACF;IAAA,CACD,CAAA,CACL;IAEA,OAAO,MAAM;MACXT,aAAA,CAAca,OAAQ,CAACC,CAAM,IAAAA,CAAA,CAAEC,YAAa,CAAA,CAAA;IAAA,CAC9C;EAAA,GACC,CAAC9B,OAAA,EAASD,WAAWc,eAAiB,EAAAD,aAAA,EAAeH,aAAa,CAAC,CAAA;EAEhE,MAAAsB,iBAAA,GAAoB3C,KAAAA,CAAAA,QAAQ,MAAM;IAjG1C,IAAA7C,EAAA;IAkGI,IAAI+E,MAAgB,GAAA,CAClB;MACEU,KAAO,EAAA,gBAAA;MACPC,IAAM,EAAA,CACJ;QAACD,KAAA,EAAO,YAAc;QAAAE,KAAA,EAAOnC;MAAS,CAAA,EACtC;QAACiC,KAAA,EAAO,SAAW;QAAAE,KAAA,EAAOlC;MAAO,CAAA;IAErC,CAAA,CACF;IAGA,MAAMmC,IAAc,GAAA,CAClB3B,aAAa;MAACwB,KAAA,EAAO,QAAU;MAAAE,KAAA,EAAO1B;IAAc,CAAA,GAAA,IAAA,EACpD,GAAGD,IAAK,CAAA6B,MAAA,CAAQC,IAAS,IAAAA,IAAA,CAAKC,aAAa,MAAM,CAAA,EACjDF,MAAO,CAACG,CAAgB,IAAA,CAAC,CAACA,CAAC,CAAA;IACzB,IAAAJ,IAAA,CAAKK,SAAS,CAAG,EAAA;MACVlB,MAAA,GAAAA,MAAA,CAAOzB,OAAO,CAAC;QAACmC,OAAO,MAAQ;QAAAC,IAAA,EAAME;MAAK,CAAA,CAAC,CAAA;IACtD;IAGAb,MAAA,GAASA,MAAO,CAAAzB,MAAA,CACd,CACE;MACEmC,KAAO,EAAA,MAAA;MACPC,IAAM,EAAA,CACJ;QAACD,KAAO,EAAA,MAAA;QAAQE,OAAOjC,UAAW,CAAAF,SAAA,EAAWC,OAAO;MAAC,CAAA,EACrD;QACEgC,KAAO,EAAA,SAAA;QACPE,QAAQ3F,EAAO,GAAA,OAAAoE,UAAA,KAAe,QAAW,GAAA,OAAA,GAAUA,eAA3C,IAA0D,GAAApE,EAAA,GAAA;MACpE,CAAA;IAEJ,CAAA,CACF,EACAgE,KAAK6B,MAAO,CAACC,IAAS,IAAAA,IAAA,CAAKC,aAAa,MAAM,CAAA,CAChD;IAGA,MAAMG,aAA4C,CAAA,CAAC;IAC9ClC,IAAA,CAAAqB,OAAA,CAASS,IAAS,IAAA;MACrB,IAAIA,KAAKC,QAAY,IAAAD,IAAA,CAAKC,aAAa,MAAU,IAAAD,IAAA,CAAKC,aAAa,MAAQ,EAAA;QACzE,IAAI,CAACG,UAAA,CAAWJ,IAAK,CAAAC,QAAQ,CAAG,EAAA;UACnBG,UAAA,CAAAJ,IAAA,CAAKC,QAAQ,CAAA,GAAI,EAAC;QAC/B;QACAG,UAAA,CAAWJ,IAAK,CAAAC,QAAQ,CAAE,CAAAtB,IAAA,CAAKqB,IAAI,CAAA;MACrC;IAAA,CACD,CAAA;IACDK,MAAA,CAAOC,IAAK,CAAAF,UAAU,CAAE,CAAAb,OAAA,CAASU,QAAa,IAAA;MACrChB,MAAA,CAAAN,IAAA,CAAK;QAACgB,KAAO,EAAAM,QAAA;QAAUL,MAAMQ,UAAW,CAAAH,QAAQ;OAAE,CAAA;IAAA,CAC1D,CAAA;IAEM,OAAAhB,MAAA;EAAA,GACN,CAACX,UAAA,EAAYH,YAAYT,SAAW,EAAAC,OAAA,EAASO,IAAI,CAAC,CAAA;EAErD,sBAEKqC,UAAA,CAAAA,IAAA,CAAAC,mBAAA,EAAA;IAAAhF,QAAA,EAAA,CAAsByC,qBAAA,CAAAwC,GAAA,CAAI,CAACC,YAAc,EAAAC,GAAA,mCACvC/D,eAA2B,EAAA;MAAA,GAAG8D;KAAT,EAAAC,GAAuB,CAC9C,CAAA,EAAA,eACD/E,UAAA,CAAAA,GAAA,CAACd;MAAIoC,MAAO,EAAA,MAAA;MAAO0D,YAAW3C,qBAAuB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,qBAAA,CAAAkC,MAAA,IAAS,CAAI,GAAA,CAAA,GAAI,CACpE;MAAA3E,QAAA,iBAAAI,UAAA,CAAAA,GAAA,CAACT,wBAAA,EAAA;QACCM,MACE,iBAAAG,UAAA,CAAAA,GAAA,CAACiF,EAAA,CAAAA,MAAA,EAAA;UACCC,KAAA,EAAO;YAAC7D,KAAA,EAAO;UAAM,CAAA;UACrBnB,QAAU,EAAA,CAAA;UACVC,QAAU,EAAA,CAAA;UACVgF,IAAK,EAAA,OAAA;UACLC,IAAK,EAAA,SAAA;UACLC,IAAK,EAAA,gBAAA;UACLC,EAAG,EAAA,GAAA;UACHC,IAAA,EAAMtD,aAAaH,SAAS;QAAA,CAC9B,CAAA;QAGFlC,QAAA,iBAAAI,UAAA,CAAAA,GAAA,CAACpB,EAAA,CAAAA,IAAA,EAAA;UACCuB,QAAU,EAAA,CAAA;UACVL,MAAQ,EAAA,CAAA;UACR0F,IAAK,EAAA,OAAA;UACL,YAAW,EAAA,cAAA;UACX,kBAAiB,EAAA,oBAAA;UAEjB5F,QAAA,EAAA,eAAA+E,UAAA,CAAAA,IAAA,CAACc,EAAM,CAAAA,KAAA,EAAA;YAAAC,KAAA,EAAO,CACZ;YAAA9F,QAAA,EAAA,CAAA,eAAAI,cAAA,CAACd,EAAAA,CAAAA,GAAI,EAAA;cAAAgB,QAAA,EAAU,CAAG;cAAAoF,EAAA,EAAG;cACnB1F,QAAC,EAAAI,eAAAA,UAAAA,CAAAA,GAAA,CAAAI,EAAA,CAAAA,OAAA,EAAA;gBAAQC,IAAM,EAAA,CAAA;gBAAGiF,EAAG,EAAA,IAAA;gBAAKK,EAAG,EAAA,oBAAA;gBAAqB/F;cAElD,CAAA;aACF,CAAA,EACCkE,iBAAA,CAAkBe,GAAI,CAACT,IAAS,IAAA;cAC/B,IAAI,CAACA,IAAA,IAAQ,CAACA,IAAA,CAAKJ,IAAM,EAAA;gBAChB,OAAA,IAAA;cACT;cAGE,OAAA,eAAAW,UAAA,CAAAA,IAAA,CAACc,EAAuB,CAAAA,KAAA,EAAA;gBAAAC,KAAA,EAAO,CAC7B;gBAAA9F,QAAA,EAAA,CAAA,eAAAI,cAAA,CAACpB,EAAAA,CAAAA,IAAK,EAAA;kBAAAqB,YAAA,EAAY,IAAC;kBAAA2F,OAAA,EAAS;kBAC1BhG,QAAC,iBAAAI,UAAA,CAAAA,GAAA,CAAA6F,QAAA,EAAA;oBAAMxF,IAAM,EAAA,CAAA;oBAAGyF,OAAK,IAAC;oBAAAN,IAAA,EAAK,cACxB;oBAAA5F,QAAA,EAAAwE,IAAA,CAAKL;kBACR,CAAA;iBACF,CAAA,EACC/D,eAAAA,UAAAA,CAAAA,GAAA,CAAAyF,EAAAA,CAAAA,KAAA,EAAA;kBAAMC,KAAO,EAAA,CAAA;kBAAGxF,QAAU,EAAA,CAAA;kBAAGsF,IAAK,EAAA,UAAA;kBAChC5F,QAAK,EAAAwE,IAAA,CAAAJ,IAAA,CAAKa,GAAI,CAACkB,GAAQ,IAAA;oBArM9C,IAAAzH,EAAA;oBAsMwB,OACGqG,eAAAA,UAAAA,CAAAA,IAAA,CAAAqB,EAAAA,CAAAA,IAAA,EAAA;sBAAqBC,OAAS,EAAA,CAAA;sBAAGT,MAAK,KACrC;sBAAA5F,QAAA,EAAA,CAAA,eAAAI,cAAA,CAACkG,EAAAA,CAAAA;wBAAKC,MAAO,EAAA,QAAA;wBAASX,IAAK,EAAA,WAAA;wBACxB5F,cAAImE;uBACP,CAAA,EACC,OAAOgC,GAAI,CAAA9B,KAAA,KAAU,QACpB,IAAA,eAAAjE,UAAA,CAAAA,GAAA,CAACkG,OAAK,EAAA;wBAAA7F,IAAA,EAAM,CAAI;wBAAAT,QAAA,EAAA,CAAAtB,EAAA,GAAAyH,GAAA,CAAI9B,KAAJ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA3F,EAAA,CAAWiF;uBAAM,CAAA,EAElC,OAAOwC,GAAI,CAAA9B,KAAA,KAAU,2BAEjBjE,cAAA,CAAA4E,UAAAA,CAAAA,QAAA,EAAA;wBAAAhF,QAAA,EAAA6B,KAAA,CAAMsE,IAAI9B,KAAK,CAAA,iCACbiC,EAAK,CAAAA,IAAA,EAAA;0BAAA7F,IAAA,EAAM;0BAAGmF,IAAK,EAAA,MAAA;0BAAON,OAAO;4BAACkB,SAAA,EAAW;2BAC5C;0BAAAxG,QAAA,EAAAI,eAAAA,UAAAA,CAAAA,GAAA,CAAC,GAAE,EAAA;4BAAAuF,IAAA,EAAMQ,IAAI9B,KAAQ;4BAAArE,QAAA,EAAAmG,GAAA,CAAI9B;0BAAM,CAAA;yBACjC,CAAA,GAAA,8BAECoC,EAAAA,CAAAA,IAAK,EAAA;0BAAAhG,IAAA,EAAM;0BAAGmF,IAAK,EAAA,MAAA;0BAAON,OAAO;4BAACkB,SAAA,EAAW;0BAC3C,CAAA;0BAAAxG,QAAA,EAAAmG,GAAA,CAAI9B;yBACP;sBAEJ,CAAA,CAAA;qBAAA,EAlBO8B,IAAIhC,KAoBf,CAAA;kBAEH,CAAA;iBACH,CAAA;eAAA,EAhCUK,KAAKL,KAiCjB,CAAA;YAAA,CAEH,CAAA;WACH;QAAA,CACF;MAAA,CAAA;KAEJ,CAAA;EACF,CAAA,CAAA;AAEJ;ACrOO,SAASuC,kBAAkBrF,MAAmD,EAAA;EAHrF,IAAA3C,EAAA;EAIS,OAAA;IACLiI,IAAM,EAAA,cAAA;IACN/E,SAAW,EAAAY,WAAA;IACXlB,SAAQ5C,EAAQ,GAAA2C,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAAC,MAAA,KAAR,IAAkB,GAAA5C,EAAA,GAAA;MAAC+C,OAAO;IAAQ;EAAA,CAC5C;AACF;;;;;;ACTA,IAAA/C,IAAA;AAWA,MAAMkI,aAAgB,GAAA7H,eAAAA,CAAAA,OAAA,CAAOC,EAAI,CAAAA,IAAA,CAAA,CAAXN,IAAY,KAAAA,IAAA,GAAAO,YAAA,CAAA,CAAA,mMAAA,CAAA,CAAA,CAAA,CAAA;AAclC,SAAS4H,aAAa3E,SAAmB,EAAA;EACvC,OAAO,qCAAqCF,MAAS,CAAAE,SAAA,EAAA,cAAA,CAAA;AACvD;AAaO,SAAS4E,YAAeA,CAAA,EAAA;EAC7B,MAAM,CAACC,OAAA,EAASC,UAAU,CAAA,GAAInE,KAA8B,CAAAA,QAAA,CAAA,CAAA;EAC5D,MAAM,CAACoE,KAAA,EAAOC,QAAQ,CAAA,GAAIrE,KAA6B,CAAAA,QAAA,CAAA,CAAA;EACvD,MAAM,CAACc,KAAA,EAAOwD,QAAQ,CAAA,GAAItE,KAA4B,CAAAA,QAAA,CAAA,CAAA;EAEtD,MAAMuE,YAAYC,MAAAA,CAAAA,YAAa,EAAA;EAC/B,MAAMrE,kBAAkBpC,kBAAmB,EAAA;EAErC,MAAA0G,SAAA,GAAYC,KAAAA,CAAAA,YAAY,MAAM;IAClC,MAAM;MAACrF;IAAA,CAAa,GAAAc,eAAA,CAAgB3B,MAAO,CAAA,CAAA;IACrC,MAAAmG,YAAA,GAAexE,eAAgB,CAAAI,UAAA,CAClCC,OAAiB,CAAA;MAChBC,KAAK,YAAa,CAAAtB,MAAA,CAAAE,SAAA;IACnB,CAAA,CACA,CAAAuF,IAAA,CACCC,SAAA,CAAAA,SAAA,CAAWC,QAAA,IACTC,IAAK,CAAAA,IAAA,CAAAR,SAAA,CAAUS,SAASF,QAAS,CAAAG,OAAA,CAAQ7C,GAAI,CAAC8C,GAAQ,IAAAA,GAAA,CAAIhC,EAAE,CAAC,CAAC,CAAE,CAAA0B,IAAA,CAC9DxC,SAAA,CAAAA,GAAA,CAAK+C,MAAY,KAAA;MAACjB,SAASY,QAAU;MAAAV,KAAA,EAAOe;KAAQ,CAAA,CACtD,CACF,GAEDzE,SAAU,CAAA;MACTC,MAAMyE,KAAA,IAAwC;QAAA,IAAvC;UAAChB,OAAOe,MAAQ;UAAAjB,OAAA,EAASY;SAAc,GAAAM,KAAA;QAC5CjB,UAAA,CAAWW,QAAQ,CAAA;QACnBT,QAAA,CAAA,CACGgB,MAAMC,OAAQ,CAAAH,MAAM,IAAIA,MAAS,GAAA,CAACA,MAAM,CAAG,EAAAI,IAAA,CAAK,CAACC,KAAO,EAAAC,KAAA,KACvDC,sBAAuB,CAAAF,KAAA,EAAOC,OAAOX,QAAQ,CAC/C,CAAA,CACF;MACF,CAAA;MACAhE,KAAO,EAAC6E,CAAa,IAAArB,QAAA,CAASqB,CAAC;IAAA,CAChC,CAAA;IAEI,OAAA,MAAMhB,aAAavD,WAAY,EAAA;EAAA,CACrC,EAAA,CAACmD,SAAW,EAAApE,eAAe,CAAC,CAAA;EAE/BC,KAAAA,CAAAA,SAAA,CAAU,MAAMqE,SAAA,CAAA,CAAa,EAAA,CAACA,SAAS,CAAC,CAAA;EAExC,MAAMmB,mBAAmBlB,KAAAA,CAAAA,WAAY,CAAA,MAAMD,WAAa,EAAA,CAACA,SAAS,CAAC,CAAA;EAE7D,MAAAoB,SAAA,GAAY,CAACzB,KAAA,IAAS,CAACF,OAAA;EAE7B,IAAIpD,KAAO,EAAA;IAEP,OAAAvD,eAAAA,UAAAA,CAAAA,GAAA,CAACT;MAAyBI,MAAO,EAAA,eAAA;MAC/BC,wCAACV,EAAI,CAAAA,GAAA,EAAA;QAAA0G,OAAA,EAAS,CACZ;QAAAhG,QAAA,EAAA+E,eAAAA,UAAAA,CAAAA,IAAA,CAACuB,EAAAA,CAAAA,IAAK,EAAA;UAAAtG,QAAA,EAAA,CAAA,qDAAA,EACgD,GAAA,EACpDI,eAAAA,UAAAA,CAAAA,GAAA,CAAC,GAAE,EAAA;YAAAuI,OAAA,EAASF,gBAAkB;YAAAtE,KAAA,EAAM,mBAAoB;YAAAmB,KAAA,EAAO;cAACsD,MAAA,EAAQ;YAAS,CAAA;YAAG5I,QAEpF,EAAA;UAAA,CAAA,CAAA,EAAI,KAAA;SAEN;OACF;IACF,CAAA,CAAA;EAEJ;EAGE,sBAAA+E,UAAA,CAAAA,IAAA,CAACpF,wBAAA,EAAA;IACCI,MAAO,EAAA,eAAA;IACPE,MACE,iBAAAG,UAAA,CAAAA,GAAA,CAACiF,EAAA,CAAAA,MAAA,EAAA;MACCC,KAAA,EAAO;QAAC7D,KAAA,EAAO;MAAM,CAAA;MACrBnB,QAAU,EAAA,CAAA;MACVC,QAAU,EAAA,CAAA;MACVgF,IAAK,EAAA,OAAA;MACLC,IAAK,EAAA,SAAA;MACLC,IAAK,EAAA,gBAAA;MACLC,EAAG,EAAA,GAAA;MACHmD,OAAS,EAAAH,SAAA;MACT/C,IAAM,EAAA+C,SAAA,GAAY,KAAY,CAAA,GAAA7B,YAAA,CAAaE,QAAQhB,EAAE;IAAA,CACvD,CAAA;IAGD/F,QAAA,EAAA,CACC0I,SAAA,IAAAtI,eAAAA,UAAAA,CAAAA,GAAA,CAACd,EAAAA,CAAAA;MAAIiB,QAAU,EAAA,CAAA;MAAGD,UAAU,CAC1B;MAAAN,QAAA,EAAA,eAAA+E,UAAA,CAAAA,IAAA,CAACc,EAAM,CAAAA,KAAA,EAAA;QAAAC,KAAA,EAAO,CACZ;QAAA9F,QAAA,EAAA,CAACI,eAAAA,UAAAA,CAAAA,GAAA,CAAAkG,EAAAA,CAAAA,IAAA,EAAA;UAAKwC,OAAM,QAAS;UAAA5C,KAAA,EAAK;UAACzF,IAAM,EAAA,CAAA;UAC/BT,QAAC,EAAAI,eAAAA,UAAAA,CAAAA,GAAA,CAAA2I,EAAAA,CAAAA,OAAA,EAAA,CAAA,CAAQ;QACX,CAAA,CAAA,EACA3I,eAAAA,UAAAA,CAAAA,GAAA,CAACkG;UAAKwC,KAAM,EAAA,QAAA;UAASrI,MAAM,CAAG;UAAAyF,KAAA,EAAK;UAAClG,QAEpC,EAAA;QAAA,CAAA,CAAA;MAAA,CACF;IACF,CAAA,CAAA,EAGD,CAAC0I,SACA,IAAAtI,eAAAA,UAAAA,CAAAA,GAAA,CAACyF,EAAAA,CAAAA,KAAM,EAAA;MAAAC,KAAA,EAAO,CAAG;MAAAE,OAAA,EAAS,CACvB;MAAAhG,QAAA,EAAAiH,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAOhC,GAAI,CAAC+D,IAAS,IAAA;QACd,MAAAC,UAAA,GAAalC,QAAQe,OAAQ,CAAAoB,IAAA,CAAMC,MAAW,IAAAA,MAAA,CAAOpD,EAAO,KAAAiD,IAAA,CAAKjD,EAAE,CAAA;QACnE,MAAArG,KAAA,GAAA,CAAQuJ,UAAY,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,UAAA,CAAAG,OAAA,mBACvBhJ,UAAA,CAAAA,GAAA,CAAAkG,OAAA,EAAA;UAAK7F,MAAM,CACV;UAAAT,QAAA,iBAAAI,UAAA,CAAAA,GAAA,CAACiJ,eAAU,EAAA,CAAA,CAAA;QAAA,CACb,CAEA,GAAAjJ,eAAAA,UAAAA,CAAAA,GAAA,CAACwG;UAAcpB,IAAK,EAAA,aAAA;UACjBxF,QAAM,EAAA,CAAAgJ,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAAM,QAAA,KAAA,eAAalJ,cAAA,CAAA,KAAA,EAAA;YAAImJ,GAAK,EAAAP,IAAA,CAAKM,QAAU;YAAAE,GAAA,EAAKR,IAAM,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAAS;WAAa;QACtE,CAAA,CAAA;QAEF,OAAA,8BACGnK,EAAAA,CAAAA,GACC,EAAA;UAAAU,QAAA,iBAAAI,UAAA,CAAAA,GAAA,CAACsJ,MAAA,CAAAA,cAAA,EAAA;YACCvF,OAAO6E,IAAK,CAAAS,WAAA;YACZE,UAAUV,UAAY,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,UAAA,CAAArD,IAAA;YACtBlG;UAAA,CAAA;SACF,EALQsJ,KAAKjD,EAMf,CAAA;MAGN,CAAA;KAAA,CAAA;EAAA,CAAA,CAEJ;AAEJ;AAEA,SAASwC,sBAAAA,CAAuBF,KAAa,EAAAC,KAAA,EAAavB,OAAkB,EAAA;EACpE,MAAA;IAACe;EAAW,CAAA,GAAAf,OAAA;EACZ,MAAA6C,WAAA,GAAc9B,QAAQoB,IAAK,CAACC,UAAWA,MAAO,CAAApD,EAAA,MAAOsC,+BAAOtC,EAAE,CAAA,CAAA;EAC9D,MAAA8D,WAAA,GAAc/B,QAAQoB,IAAK,CAACC,UAAWA,MAAO,CAAApD,EAAA,MAAOuC,+BAAOvC,EAAE,CAAA,CAAA;EACpE,IAAI6D,2CAAaR,OAAS,EAAA;IACjB,OAAA,CAAA;EACT;EACA,IAAIS,2CAAaT,OAAS,EAAA;IACjB,OAAA,CAAA,CAAA;EACT;EACO,OAAA,CAAA;AACT;ACrKO,SAASU,mBAAmBzI,MAAmD,EAAA;EAC7E,OAAA;IACLsF,IAAM,EAAA,cAAA;IACN/E,SAAW,EAAAkF,YAAA;IACXxF,QAAQD,MAAQ,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAAC;EAAA,CAClB;AACF;;;;;;ACTA,IAAA5C,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;AAKA,MAAMkL,WAAc,GAAAhL,eAAAA,CAAAA,OAAA,CAAOO,EAAAA,CAAAA,GAAG,CAAA,CAAVZ,gBAAWO,YAekC,CAAA,CAAA,8SAAA,EAAA,8BAAA,CAAA,CAAA,CAAA,EAA/C+K,KAAA;EAAA,IAAC;IAACxK;EAAW,CAAA,GAAAwK,KAAA;EAAA,OAAAxK,KAAA,CAAMC,MAAO,CAAAwK,KAAA,CAAMC,KAAKC,OAAQ,CAAAC,EAAA;AAAA,EAAA;AAK/D,MAAMtL,SAAOC,eAAO,CAAAM,OAAA,CAAAgL,OAAI,CAAX,CAAA1L,IAAA,KAAAA,IAAA,GAAYM,qCAER,kEAAX,CAAA,CAAA,CAAA,EAAA8K,WAAA,CAAA;AAQN,MAAMO,UAAa,GAAAvL,eAAAA,CAAAA,OAAA,CAAOC,EAAI,CAAAA,IAAA,CAAA,CAAXJ,IAAY,KAAAA,IAAA,GAAAK,YAAA,CAAA,CAAA,mFAAA,CAAA,CAAA,CAAA,CAAA;AAM/B,MAAMsL,MAAA,GAASxL,eAAAA,CAAAA,OAAO,CAAAyL,GAAA,CAAP3L,IAAU,KAAAA,IAAA,GAAAI,YAAA,CAAA,CAAA,yKAAA,CAAA,CAAA,CAAA,CAAA;AAuBlB,SAASwL,SAAS5K,KAAsB,EAAA;EAC7C,MAAM;IAACsE,KAAO;IAAAuG,SAAA;IAAWC;IAAchF,IAAM;IAAAiF,aAAA;IAAeC;EAAqB,CAAA,GAAAhL,KAAA;EAG/E,OAAAO,eAAAA,UAAAA,CAAAA,GAAA,CAACtB,MAAK,EAAA;IAAAgM,IAAA,EAAM,CACV;IAAA9K,QAAA,EAAA,eAAAI,UAAA,CAAAA,GAAA,CAACpB,EAAA,CAAAA,IAAA,EAAA;MACC+L,MAAO,EAAA,QAAA;MACPD,IAAM,EAAA,CAAA;MACN9E,OAAS,EAAA,CAAA;MACT9F,MAAQ,EAAA,CAAA;MACRwF,EAAG,EAAA,GAAA;MACHC,IAAA;MACAqF,MAAO,EAAA,QAAA;MACPC,GAAI,EAAA,qBAAA;MACJ3F,KAAA,EAAO;QAAC4F,QAAA,EAAU;MAAU,CAAA;MAE5BlL,QAAA,iBAAA+E,UAAA,CAAAA,IAAA,CAACsF;QAAKc,SAAU,EAAA,QAAA;QAAS7F,OAAO;UAAC5D,MAAA,EAAQ;QACtC,CAAA;QAAA1B,QAAA,EAAA,CACC0K,SAAA,IAAA,eAAA3F,UAAA,CAAAA,IAAA,CAACuF,UAAW,EAAA;UAAAc,YAAA,EAAc,CACxB;UAAApL,QAAA,EAAA,CAACI,eAAAA,UAAAA,CAAAA,GAAA,CAAAmK,MAAA,EAAA;YAAOhB,KAAKmB;UAAW,CAAA,CAAA,EACvBC,YACC,IAAA,eAAAvK,UAAA,CAAAA,GAAA,CAAC2J,WAAY,EAAA;YAAA5J,OAAA,EAAQ,MACnB;YAAAH,QAAA,EAAA,eAAAI,cAAA,CAACkG,EAAAA,CAAAA,IAAK,EAAA;cAAAwC,KAAA,EAAM,QACV;cAAA9I,QAAA,EAAAI,eAAAA,UAAAA,CAAAA,GAAA,CAACiL,KAAAA,CAAAA,QAAS,EAAA,CAAA,CAAA;YACZ,CAAA;WACF,CAAA;SAEJ,CAAA,EAEFtG,eAAAA,UAAAA,CAAAA,IAAA,CAACsF;UAAKc,SAAU,EAAA,QAAA;UAASG,SAAQ,eAAgB;UAAA/K,QAAA,EAAU,CAAG;UAAAuK,IAAA,EAAM,CAClE;UAAA9K,QAAA,EAAA,CAAA,eAAAI,cAAA,CAACI,EAAAA,CAAAA,OAAQ,EAAA;YAAAkF,EAAA,EAAG,IAAK;YAAAjF,IAAA,EAAM;YACpBT,QACH,EAAAmE;WAAA,CAAA,EACA/D,eAAAA,UAAAA,CAAAA,GAAA,CAACd,EAAAA,CAAAA;YAAI8F,SAAW,EAAA,CAAA;YACdpF,yCAAC6F,EAAM,CAAAA,KAAA,EAAA;cAAAC,KAAA,EAAO,CAAG;cAAAgF,IAAA,EAAM,CACrB;cAAA9K,QAAA,EAAA,CAAA,eAACI,UAAA,CAAAA,GAAA,CAAAkG,EAAA,CAAAA,IAAA,EAAA;gBAAK7F,IAAM,EAAA,CAAA;gBAAIT,QAAc,EAAA4K;eAAA,CAAA,EAC9BxK,eAAAA,UAAAA,CAAAA,GAAA,CAACkG;gBAAK7F,IAAM,EAAA,CAAA;gBAAG6E,OAAO;kBAACiG,OAAA,EAAS;gBAAG,CAAA;gBAChCvL,QACH,EAAA6K;cAAA,CAAA,CAAA;YAAA,CACF;UACF,CAAA,CAAA;SACF,CAAA;OACF;IAAA,CAEJ;EAAA,CAAA,CAAA;AAEJ;AC1GA,MAAMW,sBAAyB,GAAA;EAC7BtJ,SAAW,EAAA,UAAA;EACXC,OAAS,EAAA;AACX,CAAA;AAuBO,SAASsJ,cAAiBA,CAAA,EAAA;EAC/B,MAAMzI,kBAAkBpC,kBAAmB,EAAA;EACpC,OAAAW,KAAA,CAAAA,OAAA,CACL,OAAO;IACLmK,OAAA,EAAUC,cAA2B,IAAA;MAC7B,MAAArI,GAAA,GAAMqI,cACR,GAAA,mCAAA,CAAoC3J,MACpC,CAAA2J,cAAA,CAAA,GAAA,mBAAA;MACG,OAAA3I,eAAA,CAAgBI,WAAWC,OAA6B,CAAA;QAC7DC,GAAA;QACAsI,eAAiB,EAAA;MAAA,CAClB,CAAA;IACH,CAAA;IACAC,UAAA,EAAYC,iCAAgBN,sBAAsB;EAAA,CACpD,CAAA,EACA,CAACxI,eAAe,CAAA,CAClB;AACF;ACzCA,SAAS+I,SAAAA,CAAUC,MAAyBC,IAAe,EAAA;EACzD,IAAIA,SAAS,UAAY,EAAA;IACvB,OAAO,wCAAwCjK,MAAK,CAAAgK,IAAA,CAAAE,OAAA,CAAA;EAAA,CACtD,MAAA,IAAWD,SAAS,OAAS,EAAA;IAC3B,OAAO,qCAAqCjK,MAAK,CAAAgK,IAAA,CAAAE,OAAA,CAAA;EACnD;EACO,OAAA,KAAA;AACT;AAMO,SAASC,gBAAgBtM,KAA6B,EAAA;EACrD,MAAA;IAAC8L;EAAkB,CAAA,GAAA9L,KAAA;EACzB,MAAM,CAACuM,SAAW,EAAAC,YAAY,CAAI,GAAAxJ,KAAA,CAAAA,QAAA,CAAqB,EAAE,CAAA;EAEzD,MAAM;IAAC6I,OAAA;IAASG;EAAU,CAAA,GAAIJ,cAAe,CAAA,CAAA;EAE7CxI,KAAAA,CAAAA,SAAA,CAAU,MAAM;IACd,MAAMuE,eAAekE,OAAQ,CAAAC,cAAc,CAAE,CAAApI,SAAA,CAAW+I,QAAa,IAAA;MACnED,YAAA,CAAaC,SAASC,KAAK,CAAA;IAAA,CAC5B,CAAA;IACD,OAAO,MAAM;MACX/E,YAAA,CAAavD,WAAY,CAAA,CAAA;IAAA,CAC3B;EACC,CAAA,EAAA,CAACoI,YAAc,EAAAX,OAAA,EAASC,cAAc,CAAC,CAAA;EAE1C,MAAMxH,KAAQ,GAAA,oBAAA;EAEd,OAAA,8BACGxE,wBAAyB,EAAA;IAAAI,MAAA,EAAQoE;IAChCnE,QAAC,iBAAAI,UAAA,CAAAA,GAAA,CAAAiK,EAAA,CAAAA,IAAA,EAAA;MAAK3E,IAAG,IAAK;MAAA8G,QAAA,EAAS,MAAO;MAAA1D,KAAA,EAAM;MAAUvI,QAAU,EAAA,CAAA;MACrDP,iDAAWiF,GAAI,CAAA,CAACwH,UAAUC,KAAU,KAAA;QAvC7C,IAAAhO,EAAA;QAwCc,IAAA,CAAC+N,SAAStI,KAAU,IAAA,CAACsI,SAASE,eAAmB,IAAA,CAACF,SAASG,YAAe,EAAA;UACrE,OAAA,IAAA;QACT;QACA,MAAMC,YAAYJ,QAAS,CAAAI,SAAA,KAAA,CAAanO,cAASiO,eAAT,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAjO,EAAA,CAA0BmO,cAAa,CAAA,CAAC;QAChF,MAAMlD,WAAW8C,QAAS,CAAAhI,QAAA;QAC1B,MAAM;UAACkI,eAAA,GAAkB;QAAe,CAAA,GAAAF,QAAA;QAClC,MAAA9G,IAAA,GAAA,CACHgH,eAAgB,CAAAX,IAAA,GACbD,SAAU,CAAAY,eAAA,CAAgBX,IAAM,EAAAW,eAAA,CAAgBG,KAAK,CAAA,GACrDL,QAAS,CAAAG,YAAA,KAAiBH,QAAS,CAAAG,YAAA;QAGvC,sBAAAxM,UAAA,CAAAA,GAAA,CAACiK,EAAA,CAAAA,IAAA,EAAA;UACC3E,EAAG,EAAA,IAAA;UAEHqH,YAAc,EAAAL,KAAA,GAAA,CAAQN,SAAW,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAAzH,MAAA,IAAS,IAAI,CAAI,GAAA,CAAA;UAClDqI,WAAA,EAAaN,KAAU,KAAA,CAAA,GAAI,CAAI,GAAA,CAAA;UAC/B5D,KAAM,EAAA,SAAA;UACNxD,KAAO,EAAA;YAAC2H,QAAU,EAAA,GAAA;YAAKxL,OAAO;UAAK,CAAA;UAEnCzB,QAAA,iBAAAI,UAAA,CAAAA,GAAA,CAACqK,QAAA,EAAA;YACCtG,OAAOsI,QAAS,CAAAtI,KAAA;YAChBwB,MAAMA,IAAQ,IAAA,IAAA,GAAAA,IAAA,GAAA,EAAA;YACdiF,eAAeiC,SAAU,CAAAlG,IAAA;YACzBkE,iBAAmB,EAAAlB,QAAA;YACnBgB,cAAc8B,QAAS,CAAAS,QAAA;YACvBxC,SACE,EAAA+B,QAAA,CAASU,MAAS,GAAAtB,UAAA,CAAWuB,KAAM,CAAAX,QAAA,CAASU,MAAM,CAAA,CAAEzL,MAAO,CAAA,GAAG,CAAE,CAAAI,GAAA,CAAA,CAAQ,GAAA,KAAA;UAAA,CAE5E;QAAA,CAAA,EAfK2K,QAAS,CAAAY,GAAA,CAgBhB;MAAA;KAGN;EACF,CAAA,CAAA;AAEJ;ACzEO,SAASC,sBAAsBjM,MAAmD,EAAA;EAHzF,IAAA3C,EAAA;EAIS,OAAA;IACLiI,IAAM,EAAA,kBAAA;IACN/E,SAAW,EAAAuK,eAAA;IACX7K,SAAQ5C,EAAQ,GAAA2C,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAAC,MAAA,KAAR,IAAkB,GAAA5C,EAAA,GAAA;MAAC+C,OAAO;IAAM;EAAA,CAC1C;AACF;ACNO,SAAS8L,gBAAgB1N,KAA8B,EAAA;EAC5D,qCACG2N,EAAU,CAAAA,SAAA,EAAA;IAAA/L,KAAA,EAAO,CAAG;IAAAuE,OAAA,EAAS;IAAG+E,MAAO,EAAA,QAAA;IAASzF,KAAO,EAAA;MAAC5D,QAAQ,MAAQ;MAAA+L,SAAA,EAAW;IAAM,CAAA;IACvFzN,gBAAMA;EACT,CAAA,CAAA;AAEJ;;;;;;ACTA,IAAAtB,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAA6O,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;AAMA,MAAMtO,KAAQ,GAAA;EACZuO,OAAO,SAAAA,CAAA;IAAA,OACLC,uBAAGjP,UACsD,CAAA,CAAA,6BAAA,EAAA,iBAAA,EACvC,sBADKkP,KAAA;MAAA,IAAC;QAAC3O;OAAK,GAAA2O,KAAA;MAAA,OAAM3O,MAAMC,MAAO,CAAAC,KAAA,CAAM,CAAC,CAClD;IAAA,GAAAwO,MAAAA,CAAAA,GAAA,CAAI,GAAAE,SAAO,CAAA,CAAA;EAAA;EAGnBC,QAAQ,SAAAA,CAAA;IAAA,OACNH,uBAAGjP,UACsD,CAAA,CAAA,6BAAA,EAAA,iBAAA,EACvC,sBADKqP,KAAA;MAAA,IAAC;QAAC9O;OAAK,GAAA8O,KAAA;MAAA,OAAM9O,MAAMC,MAAO,CAAAC,KAAA,CAAM,CAAC,CAClD;IAAA,GAAAwO,MAAAA,CAAAA,GAAA,CAAI,GAAAE,SAAO,CAAA,CAAA;EAAA;AAGrB,CAAA;AAEA,MAAMtP,IAAA,GAAOC,eAAAA,CAAAA,QAAOqH,EAAAA,CAAAA,IAAI,CAAA,CAAX4H,YAAY/O,UAUpB,CAAA,CAAA,uJAAA,EAAA,gDAAA,EAMA,YAIA,+CAMA,EAAA,kDAAA,EAMA,mDAMA,UAIA,EAAA,gDAAA,EAMA,cAxCCS,KAAM,CAAAuO,KAAA,CAANrP,YAAWK,UAMX,CAAA,CAAA,oCAAA,CAAA,CAAA,CAAA,CAAA,EAAAS,KAAA,CAAMuO,MAANpP,EAAW,KAAAA,EAAA,GAAAI,UAAA,CAAA,CAAA,oCAAA,CAAA,CAAA,CAAA,CAAA,EAIXS,MAAM2O,MAAN,CAAAX,EAAA,KAAAA,EAAA,GAAYzO,sDAMZS,KAAM,CAAAuO,KAAA,CAANN,YAAW1O,UAMX,CAAA,CAAA,oCAAA,CAAA,CAAA,CAAA,CAAA,EAAAS,KAAA,CAAMuO,MAANL,EAAW,KAAAA,EAAA,GAAA3O,UAAA,CAAA,CAAA,iCAAA,CAAA,CAAA,CAAA,CAAA,EAMXS,MAAMuO,KAAN,CAAAJ,EAAA,KAAAA,EAAA,GAAW5O,mDAIXS,KAAM,CAAA2O,MAAA,CAANP,YAAY7O,UAMZ,CAAA,CAAA,iCAAA,CAAA,CAAA,CAAA,CAAA,EAAAS,KAAA,CAAM2O,OAANN,EAAY,KAAAA,EAAA,GAAA9O,UAAA,CAAA,CAAA,iCAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAUlB,MAAMsP,aAAgC,EAAC;AACvC,MAAMC,YAA0B,CAAA,CAAC;AAE1B,SAASC,YAAY5O,KAAyB,EAAA;EAC7C,MAAA;IACJwB,MAAQ,EAAA;MAACC,MAAS,GAAAkN,SAAA;MAAWvN,UAAUsN;IAAU;EAC/C,CAAA,GAAA1O,KAAA;EAEF,sBAAAkF,UAAA,CAAAA,IAAA,CAACjG,IAAA,EAAA;IACC4P,QAAS,EAAA,WAAA;IACT,YAAA,EAAYpN,OAAOG,KAAS,IAAA,MAAA;IAC5B,aAAA,EAAaH,OAAOI,MAAU,IAAA,MAAA;IAC9BiN,GAAK,EAAA,CAAA;IAEJ3O,QAAA,EAAA,CAAAiB,OAAA,CAAQ0D,MAAS,GAAA,IAAA,GAAA,eACfvE,cAAA,CAAApB,EAAAA,CAAAA,IAAA,EAAA;MAAKgH,SAAS,CAAG;MAAAxE,MAAA,EAAQ,CAAG;MAAAgE,IAAA,EAAK;MAChCxF,QAAC,EAAA,eAAAI,cAAA,CAAAkG,EAAAA,CAAAA,IAAA,EAAA;QAAKwC,KAAM,EAAA,QAAA;QAAS9I;MAAwC,CAAA;KAC/D,CAAA,EAEDiB,OAAQ,CAAAgE,GAAA,CAAI,CAACC,YAAA,EAAcwH,KAAU,KAAA;MAChC,IAAAxH,YAAA,CAAa+G,SAAS,sBAAwB,EAAA;QAChD,OAAQ7L,eAAAA,UAAAA,CAAAA,GAAA,CAAAqO,WAAA,EAAA;UAAwBpN,MAAQ,EAAA6D;QAAA,CAAA,EAAfwH,KAA6B,CAAA;MACxD;MACA,IAAIxH,aAAatD,SAAW,EAAA;QAC1B,OAAQxB,eAAAA,UAAAA,CAAAA,GAAA,CAAAgB,eAAA,EAAA;UAA6B,GAAG8D;QAAA,CAAA,EAAXwH,KAAyB,CAAA;MACxD;MACA,sCAAQpN,MAAiB,EAAA;QAAAU,QAAA,EAAA,CAAakF,YAAA,CAAAyB,IAAA,EAAK,8BAAA;MAAA,CAAA,EAA1B+F,KAAsD,CAAA;IAAA,CACxE,CAAA;EAAA,CAAA,CACH;AAEJ;ACrGgB,SAAAkC,SAAAA,CAAAC,KAAA,EAA+C;EAAA,IAArC;IAACxN;GAAoC,GAAAwN,KAAA;EAC7D,IAAI,CAACxN,MAAQ,EAAA;IACJ,OAAA,IAAA;EACT;EAEA,OACGjB,eAAAA,UAAAA,CAAAA,GAAA,CAAAW,gBAAA,CAAiB+N,QAAjB,EAAA;IAA0BzK,KAAO,EAAAhD,MAAA;IAChCrB,QAAC,iBAAAI,UAAA,CAAAA,GAAA,CAAAmN,eAAA,EAAA;MACCvN,QAAC,EAAAI,eAAAA,UAAAA,CAAAA,GAAA,CAAAqO,WAAA,EAAA;QAAYpN;OAAgB;IAAA,CAC/B;EACF,CAAA,CAAA;AAEJ;ACbA,MAAM0N,WAA6B,GAAA;EACjCC,MAAQ,EAAA,cAAA;EACRC,WAAa,EAAA;AACf,CAAA;AAEA,MAAMC,gBAAgBA,CAAA,KAAA,eACpBnK,UAAA,CAAAA,IAAA,CAAC,KAAA,EAAA;EACC,kBAAgB,EAAA,IAAA;EAChBoK,OAAQ,EAAA,WAAA;EACRC,IAAK,EAAA,MAAA;EACLC,KAAM,EAAA,4BAAA;EACNC,mBAAoB,EAAA,UAAA;EACpB7N,KAAM,EAAA,KAAA;EACNC,MAAO,EAAA,KAAA;EAEP1B,QAAA,EAAA,CAAA,eAAAI,UAAA,CAAAA,GAAA,CAAC,MAAK,EAAA;IAAAmP,CAAA,EAAE,+BAAgC;IAAAjK,KAAA,EAAOyJ;GAAa,CAAA,EAAA,eAC3D3O,UAAA,CAAAA,GAAA,CAAA,MAAA,EAAA;IAAKmP,CAAE,EAAA,gBAAA;IAAiBjK,OAAOyJ;GAAa,CAAA,EAAA,eAC5C3O,UAAA,CAAAA,GAAA,CAAA,MAAA,EAAA;IAAKmP,CAAE,EAAA,+BAAA;IAAgCjK,OAAOyJ;GAAa,CAAA;AAAA,CAC9D,CAAA;AAwBK,MAAMS,aAAgB,GAAAC,MAAA,CAAAA,YAAA,CAAoC,YAAiB;EAAA,IAAhBpO,MAAA,GAAA+M,SAAA,CAAAzJ,MAAA,QAAAyJ,SAAA,QAAAsB,SAAA,GAAAtB,SAAA,MAAS,EAAO;EA/ClF,IAAA1P,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAA6O,EAAA;EAgDE,MAAMiC,YAAgC,GAAA;IACpCrO,MAAQ,EAAA,CAAA5C,EAAA,GAAA2C,MAAA,CAAOuO,aAAP,KAAA,IAAA,GAAAlR,EAAA,GAAwB,CAAC,CAAA;IACjCuC,OAAS,EAAA,CAAAtC,EAAA,GAAA0C,MAAA,CAAOJ,OAAP,KAAA,IAAA,GAAAtC,EAAA,GAAkB;EAAC,CAC9B;EAEM,MAAAwF,KAAA,GAAA,CAAQvF,EAAO,GAAAyC,MAAA,CAAA8C,KAAA,KAAP,IAAgB,GAAAvF,EAAA,GAAA,WAAA;EACxB,MAAA+H,IAAA,GAAA,CAAO9H,EAAO,GAAAwC,MAAA,CAAAsF,IAAA,KAAP,IAAe,GAAA9H,EAAA,GAAA,WAAA;EACtB,MAAAgR,IAAA,GAAA,CAAOnC,EAAO,GAAArM,MAAA,CAAAwO,IAAA,KAAP,IAAe,GAAAnC,EAAA,GAAAwB,aAAA;EAErB,OAAA;IACLvI,IAAM,EAAA,WAAA;IACNmJ,KAAA,EAAOA,CAACC,IAAA,EAAMC,OAAY,KAAA;MACjB,OAAA,CACL,GAAGD,IAAA,EACH;QACE5L,KAAA;QACAwC,IAAA;QACAkJ,IAAA;QACAjO,SAAW,EAAAA,CAAA,KAAOxB,eAAAA,UAAAA,CAAAA,GAAA,CAAAwO,SAAA,EAAA;UAAUvN,QAAQsO;QAAc,CAAA;MACpD,CAAA,CACF;IACF;EAAA,CACF;AACF,CAAC,CAAA;;;;;"}