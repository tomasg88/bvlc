{
  "version": 3,
  "sources": ["../../../get-youtube-id/index.js"],
  "sourcesContent": ["\n(function (root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    root.getYouTubeID = factory();\n  }\n}(this, function (exports) {\n\n  return function (url, opts) {\n    if (opts == undefined) {\n      opts = {fuzzy: true};\n    }\n\n    if (/youtu\\.?be/.test(url)) {\n\n      // Look first for known patterns\n      var i;\n      var patterns = [\n        /youtu\\.be\\/([^#\\&\\?]{11})/,  // youtu.be/<id>\n        /\\?v=([^#\\&\\?]{11})/,         // ?v=<id>\n        /\\&v=([^#\\&\\?]{11})/,         // &v=<id>\n        /embed\\/([^#\\&\\?]{11})/,      // embed/<id>\n        /\\/v\\/([^#\\&\\?]{11})/         // /v/<id>\n      ];\n\n      // If any pattern matches, return the ID\n      for (i = 0; i < patterns.length; ++i) {\n        if (patterns[i].test(url)) {\n          return patterns[i].exec(url)[1];\n        }\n      }\n\n      if (opts.fuzzy) {\n        // If that fails, break it apart by certain characters and look \n        // for the 11 character key\n        var tokens = url.split(/[\\/\\&\\?=#\\.\\s]/g);\n        for (i = 0; i < tokens.length; ++i) {\n          if (/^[^#\\&\\?]{11}$/.test(tokens[i])) {\n            return tokens[i];\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n}));\n"],
  "mappings": ";;;;;AAAA;AAAA;AACA,KAAC,SAAU,MAAM,SAAS;AACxB,UAAI,OAAO,YAAY,UAAU;AAC/B,eAAO,UAAU,QAAQ;AAAA,MAC3B,WAAW,OAAO,WAAW,cAAc,OAAO,KAAK;AACrD,eAAO,OAAO;AAAA,MAChB,OAAO;AACL,aAAK,eAAe,QAAQ;AAAA,MAC9B;AAAA,IACF,GAAE,SAAM,SAAUA,UAAS;AAEzB,aAAO,SAAU,KAAK,MAAM;AAC1B,YAAI,QAAQ,QAAW;AACrB,iBAAO,EAAC,OAAO,KAAI;AAAA,QACrB;AAEA,YAAI,aAAa,KAAK,GAAG,GAAG;AAG1B,cAAI;AACJ,cAAI,WAAW;AAAA,YACb;AAAA;AAAA,YACA;AAAA;AAAA,YACA;AAAA;AAAA,YACA;AAAA;AAAA,YACA;AAAA;AAAA,UACF;AAGA,eAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACpC,gBAAI,SAAS,CAAC,EAAE,KAAK,GAAG,GAAG;AACzB,qBAAO,SAAS,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC;AAAA,YAChC;AAAA,UACF;AAEA,cAAI,KAAK,OAAO;AAGd,gBAAI,SAAS,IAAI,MAAM,iBAAiB;AACxC,iBAAK,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AAClC,kBAAI,iBAAiB,KAAK,OAAO,CAAC,CAAC,GAAG;AACpC,uBAAO,OAAO,CAAC;AAAA,cACjB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IAEF,CAAC;AAAA;AAAA;",
  "names": ["exports"]
}
