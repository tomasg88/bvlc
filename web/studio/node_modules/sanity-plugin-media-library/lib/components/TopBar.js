"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TopBar = void 0;
var Icon_1 = require("./Icon");
var SearchBar_1 = require("./SearchBar");
var Select_1 = require("./Select");
var react_1 = __importDefault(require("react"));
var styled_components_1 = __importDefault(require("styled-components"));
var StyledContainer = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  align-items: center;\n  border-bottom: solid 1px ", ";\n  display: flex;\n  justify-content: space-between;\n  padding: 40px;\n"], ["\n  align-items: center;\n  border-bottom: solid 1px ", ";\n  display: flex;\n  justify-content: space-between;\n  padding: 40px;\n"])), function (_a) {
    var theme = _a.theme;
    return theme.topBarBorderColor;
});
var StyledItemsContainer = styled_components_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: flex;\n\n  & > :not(:last-child) {\n    margin: 0 20px 0 0;\n  }\n"], ["\n  display: flex;\n\n  & > :not(:last-child) {\n    margin: 0 20px 0 0;\n  }\n"])));
var StyledListGridButton = styled_components_1.default.button(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  height: 20px;\n  outline: 0;\n  padding: 0;\n  width: 20px;\n\n  & svg {\n    fill: ", ";\n    height: 20px;\n    width: 20px;\n  }\n"], ["\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  height: 20px;\n  outline: 0;\n  padding: 0;\n  width: 20px;\n\n  & svg {\n    fill: ", ";\n    height: 20px;\n    width: 20px;\n  }\n"])), function (_a) {
    var isActive = _a.isActive, theme = _a.theme;
    return (isActive ? theme.topBarButtonActiveColor : theme.topBarButtonInactiveColor);
});
var TopBar = function (_a) {
    var onSortChange = _a.onSortChange, searchQuery = _a.searchQuery, setSearchQuery = _a.setSearchQuery, setViewType = _a.setViewType, viewType = _a.viewType;
    return (react_1.default.createElement(StyledContainer, null,
        react_1.default.createElement(StyledItemsContainer, null,
            react_1.default.createElement(StyledListGridButton, { onClick: function () { return setViewType('grid'); }, isActive: viewType === 'grid' },
                react_1.default.createElement(Icon_1.Icon, { type: "grid" })),
            react_1.default.createElement(StyledListGridButton, { onClick: function () { return setViewType('list'); }, isActive: viewType === 'list' },
                react_1.default.createElement(Icon_1.Icon, { type: "list" }))),
        react_1.default.createElement(StyledItemsContainer, null,
            react_1.default.createElement(SearchBar_1.SearchBar, { searchQuery: searchQuery, setSearchQuery: setSearchQuery }),
            react_1.default.createElement(Select_1.Select, { onSortChange: onSortChange, options: [
                    { label: 'Latest First', value: 'date' },
                    { label: 'Filename A - Z', value: 'az' },
                    { label: 'Filename Z - A', value: 'za' },
                ] }))));
};
exports.TopBar = TopBar;
var templateObject_1, templateObject_2, templateObject_3;
