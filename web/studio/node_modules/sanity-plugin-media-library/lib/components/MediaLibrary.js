"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaLibrary = void 0;
var BottomBar_1 = require("./BottomBar");
var MediaGrid_1 = require("./MediaGrid");
var MediaList_1 = require("./MediaList");
var TopBar_1 = require("./TopBar");
var react_1 = __importStar(require("react"));
var styled_components_1 = __importDefault(require("styled-components"));
var StyledContainer = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  background-color: ", ";\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n"], ["\n  background-color: ", ";\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n"])), function (_a) {
    var theme = _a.theme;
    return theme.mediaLibraryBackgroundColor;
});
var StyledFlexGrowContainer = styled_components_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  flex: 1;\n  overflow: hidden;\n  position: relative;\n"], ["\n  flex: 1;\n  overflow: hidden;\n  position: relative;\n"])));
var StyledMediaGridContainer = styled_components_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  -ms-overflow-style: none; /* IE and Edge */\n  height: 100%;\n  left: 0;\n  overflow-y: scroll;\n  position: absolute;\n  scrollbar-width: none; /* Firefox */\n  top: 0;\n  width: 100%;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n"], ["\n  -ms-overflow-style: none; /* IE and Edge */\n  height: 100%;\n  left: 0;\n  overflow-y: scroll;\n  position: absolute;\n  scrollbar-width: none; /* Firefox */\n  top: 0;\n  width: 100%;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n"])));
var MediaLibrary = function (_a) {
    var _b = _a.assets, assets = _b === void 0 ? [] : _b, handleSelect = _a.handleSelect, isAssetSource = _a.isAssetSource, loading = _a.loading, onClose = _a.onClose, onDelete = _a.onDelete, onEdit = _a.onEdit, onSortChange = _a.onSortChange, searchQuery = _a.searchQuery, selectedAssets = _a.selectedAssets, setIsDraggingMediaItem = _a.setIsDraggingMediaItem, setSearchQuery = _a.setSearchQuery, setSelectedAssets = _a.setSelectedAssets;
    var _c = react_1.useState('grid'), viewType = _c[0], setViewType = _c[1];
    function onMediaItemClick(e, asset) {
        var indexInSelectedAssets = selectedAssets.indexOf(asset);
        if (!isAssetSource && e.shiftKey && selectedAssets.length > 0) {
            var startIndex = assets.indexOf(asset);
            var endIndex = assets.indexOf(selectedAssets[0]);
            var indexes = [startIndex, endIndex].sort(function (a, b) { return (a > b ? 1 : -1); });
            var newSelectedAssets = __spreadArrays(assets).slice(indexes[0], indexes[1] + 1);
            return setSelectedAssets(newSelectedAssets);
        }
        if (!isAssetSource && (e.ctrlKey, e.metaKey) && selectedAssets.length > 0) {
            if (indexInSelectedAssets > -1) {
                var newSelectedAssets = __spreadArrays(selectedAssets);
                newSelectedAssets.splice(indexInSelectedAssets, 1);
                return setSelectedAssets(newSelectedAssets);
            }
            else {
                var newSelectedAssets = Array.from(new Set(__spreadArrays(selectedAssets, [asset])));
                return setSelectedAssets(newSelectedAssets);
            }
        }
        if (indexInSelectedAssets > -1) {
            setSelectedAssets([]);
        }
        else {
            setSelectedAssets([asset]);
        }
    }
    function onDragStart(asset) {
        if (!selectedAssets.includes(asset)) {
            setSelectedAssets(__spreadArrays(selectedAssets, [asset]));
        }
    }
    var onDoubleClick = function (asset) {
        return isAssetSource ? (handleSelect ? handleSelect([asset]) : function () { }) : onEdit(asset);
    };
    var ViewElement = viewType === 'grid' ? MediaGrid_1.MediaGrid : MediaList_1.MediaList;
    return (react_1.default.createElement(StyledContainer, null,
        react_1.default.createElement(TopBar_1.TopBar, { onSortChange: onSortChange, searchQuery: searchQuery, setSearchQuery: setSearchQuery, setViewType: setViewType, viewType: viewType }),
        react_1.default.createElement(StyledFlexGrowContainer, null,
            react_1.default.createElement(StyledMediaGridContainer, null,
                react_1.default.createElement(ViewElement, { assets: assets, onDoubleClick: onDoubleClick, onDragStart: onDragStart, onMediaItemClick: onMediaItemClick, selectedAssets: selectedAssets, setIsDraggingMediaItem: setIsDraggingMediaItem }))),
        react_1.default.createElement(BottomBar_1.BottomBar, { handleSelect: handleSelect, isAssetSource: isAssetSource, loading: loading, onCancel: onClose, onDelete: onDelete, onEdit: onEdit, selectedAssets: selectedAssets })));
};
exports.MediaLibrary = MediaLibrary;
var templateObject_1, templateObject_2, templateObject_3;
