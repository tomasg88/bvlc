"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaGrid = void 0;
var DraggableMediaItem_1 = require("./DraggableMediaItem");
var Icon_1 = require("./Icon");
var react_1 = __importDefault(require("react"));
var styled_components_1 = __importDefault(require("styled-components"));
var StyledContainer = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  flex-wrap: wrap;\n  padding: 40px;\n\n  & > * {\n    margin: 0 15px 15px 0;\n  }\n"], ["\n  display: flex;\n  flex-wrap: wrap;\n  padding: 40px;\n\n  & > * {\n    margin: 0 15px 15px 0;\n  }\n"])));
var StyledMediaItem = styled_components_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  align-items: center;\n  background-color: ", ";\n  border-radius: ", ";\n  border: ", ";\n  color: ", ";\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font-family: ", ";\n  font-size: 14px;\n  font-weight: 500;\n  height: 150px;\n  justify-content: center;\n  line-height: 1.2;\n  overflow: hidden;\n  padding: 20px;\n  position: relative;\n  text-align: center;\n  width: 150px;\n\n  & img {\n    height: 100%;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 100%;\n  }\n\n  & svg {\n    fill: ", ";\n    height: 24px;\n    margin: 0 0 8px;\n    width: 24px;\n  }\n"], ["\n  align-items: center;\n  background-color: ", ";\n  border-radius: ", ";\n  border: ", ";\n  color: ", ";\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font-family: ", ";\n  font-size: 14px;\n  font-weight: 500;\n  height: 150px;\n  justify-content: center;\n  line-height: 1.2;\n  overflow: hidden;\n  padding: 20px;\n  position: relative;\n  text-align: center;\n  width: 150px;\n\n  & img {\n    height: 100%;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 100%;\n  }\n\n  & svg {\n    fill: ", ";\n    height: 24px;\n    margin: 0 0 8px;\n    width: 24px;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.mediaItemBackgroundColor;
}, function (_a) {
    var theme = _a.theme;
    return theme.appBorderRadius;
}, function (_a) {
    var selected = _a.selected, theme = _a.theme;
    return (selected ? "solid 4px " + theme.mediaGridSelectedBorderColor : '0');
}, function (_a) {
    var theme = _a.theme;
    return theme.mediaItemTextColor;
}, function (_a) {
    var theme = _a.theme;
    return theme.appFontFamily;
}, function (_a) {
    var theme = _a.theme;
    return theme.mediaItemIconColor;
});
var MediaGrid = function (_a) {
    var _b = _a.assets, assets = _b === void 0 ? [] : _b, onDoubleClick = _a.onDoubleClick, onDragStart = _a.onDragStart, onMediaItemClick = _a.onMediaItemClick, selectedAssets = _a.selectedAssets, setIsDraggingMediaItem = _a.setIsDraggingMediaItem;
    return (react_1.default.createElement(StyledContainer, null, assets.map(function (asset) {
        var Element = asset._type === 'sanity.imageAsset' ? ImageItem : FileItem;
        return (react_1.default.createElement(DraggableMediaItem_1.DraggableMediaItem, { key: asset._id, _type: asset._type, onDragEnd: function () { return setIsDraggingMediaItem(false); }, onDragStart: function () {
                onDragStart(asset);
                setIsDraggingMediaItem(true);
            }, selectedAmount: selectedAssets.length, url: asset.url },
            react_1.default.createElement(Element, __assign({ key: asset._id, onClick: function (e) { return onMediaItemClick(e, asset); }, onDoubleClick: function () { return onDoubleClick(asset); }, selected: selectedAssets.findIndex(function (_a) {
                    var _id = _a._id;
                    return _id === asset._id;
                }) > -1 }, asset))));
    })));
};
exports.MediaGrid = MediaGrid;
var ImageItem = function (_a) {
    var alt = _a.alt, onClick = _a.onClick, onDoubleClick = _a.onDoubleClick, selected = _a.selected, url = _a.url;
    return (react_1.default.createElement(StyledMediaItem, { selected: selected, onClick: function (e) { return onClick(e); }, onDoubleClick: onDoubleClick },
        react_1.default.createElement("img", { alt: alt, src: url + "?w=150&h=150&fit=crop&auto=format&q=80", loading: "lazy" })));
};
var FileItem = function (_a) {
    var title = _a.title, originalFilename = _a.originalFilename, onClick = _a.onClick, onDoubleClick = _a.onDoubleClick, selected = _a.selected;
    return (react_1.default.createElement(StyledMediaItem, { selected: selected, onClick: function (e) { return onClick(e); }, onDoubleClick: onDoubleClick },
        react_1.default.createElement(Icon_1.Icon, { type: "file" }),
        react_1.default.createElement("div", null, title || originalFilename)));
};
var templateObject_1, templateObject_2;
