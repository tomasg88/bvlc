"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchBar = void 0;
var Icon_1 = require("./Icon");
var react_1 = __importDefault(require("react"));
var styled_components_1 = __importDefault(require("styled-components"));
var StyledContainer = styled_components_1.default.label(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  align-items: center;\n  background-color: ", ";\n  border-radius: ", ";\n  display: flex;\n  padding: 8px;\n\n  & svg {\n    fill: ", ";\n    height: 20px;\n    margin-right: 10px;\n    width: 20px;\n  }\n"], ["\n  align-items: center;\n  background-color: ", ";\n  border-radius: ", ";\n  display: flex;\n  padding: 8px;\n\n  & svg {\n    fill: ", ";\n    height: 20px;\n    margin-right: 10px;\n    width: 20px;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.inputBackgroundColor;
}, function (_a) {
    var theme = _a.theme;
    return theme.appBorderRadius;
}, function (_a) {
    var theme = _a.theme;
    return theme.inputIconColor;
});
var StyledInput = styled_components_1.default.input(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  background-color: transparent;\n  border: 0;\n  color: ", ";\n  font-family: ", ";\n  font-size: 14px;\n  line-height: 1.1;\n  outline: 0;\n"], ["\n  background-color: transparent;\n  border: 0;\n  color: ", ";\n  font-family: ", ";\n  font-size: 14px;\n  line-height: 1.1;\n  outline: 0;\n"])), function (_a) {
    var theme = _a.theme;
    return theme.inputTextColor;
}, function (_a) {
    var theme = _a.theme;
    return theme.appFontFamily;
});
var SearchBar = function (_a) {
    var searchQuery = _a.searchQuery, setSearchQuery = _a.setSearchQuery;
    return (react_1.default.createElement(StyledContainer, null,
        react_1.default.createElement(Icon_1.Icon, { type: "search" }),
        react_1.default.createElement(StyledInput, { value: searchQuery, onChange: function (e) { return setSearchQuery(e.target.value); }, placeholder: "Search by filename, title, alt or tag", type: "search" })));
};
exports.SearchBar = SearchBar;
var templateObject_1, templateObject_2;
