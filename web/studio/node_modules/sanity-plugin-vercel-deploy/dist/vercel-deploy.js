"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _nanoid = require("nanoid");

var _axios = _interopRequireDefault(require("axios"));

var _client = _interopRequireDefault(require("part:@sanity/base/client"));

var _deployItem = _interopRequireDefault(require("./deploy-item"));

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

var _default = _interopRequireDefault(require("part:@sanity/components/snackbar/default"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/dialogs/default"));

var _default3 = _interopRequireDefault(require("part:@sanity/components/textfields/default"));

var _anchor = _interopRequireDefault(require("part:@sanity/components/buttons/anchor"));

var _warningIcon = _interopRequireDefault(require("part:@sanity/base/warning-icon"));

var _alert = _interopRequireDefault(require("part:@sanity/components/alerts/alert"));

var _vercelDeploy = _interopRequireDefault(require("./vercel-deploy.css"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var WEBHOOK_TYPE = 'webhook_deploy';
var WEBHOOK_QUERY = "*[_type == \"".concat(WEBHOOK_TYPE, "\"] | order(_createdAt)");

var Deploy = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Deploy, _React$Component);

  var _super = _createSuper(Deploy);

  function Deploy(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Deploy);
    _this = _super.call(this, props);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "componentDidMount", function () {
      // Fetch initial
      _this.fetchAllWebhooks(); // Listen to new stuff


      _this.webhookSubscription = _client["default"].listen(WEBHOOK_QUERY, {}, {
        includeResult: true
      }).subscribe(function (res) {
        var wasCreated = res.mutations.some(function (item) {
          return Object.prototype.hasOwnProperty.call(item, 'create');
        });
        var wasDeleted = res.mutations.some(function (item) {
          return Object.prototype.hasOwnProperty.call(item, 'delete');
        });

        if (wasCreated) {
          _this.setState({
            webhooks: [].concat((0, _toConsumableArray2["default"])(_this.state.webhooks), [res.result])
          });
        }

        if (wasDeleted) {
          var newHooks = _this.state.webhooks.filter(function (hook) {
            return hook._id !== res.documentId;
          });

          _this.setState({
            webhooks: newHooks
          });
        }
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "componentWillUnmount", function () {
      _this.webhookSubscription && _this.webhookSubscription.unsubscribe();
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "fetchAllWebhooks", function () {
      _client["default"].fetch(WEBHOOK_QUERY).then(function (webhooks) {
        _this.setState({
          webhooks: webhooks,
          isLoading: false
        });
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setFormValue", function (key, value) {
      _this.setState((0, _defineProperty2["default"])({}, key, value));
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onSubmit", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
      var vercelTeamId, vercelTeamName, _teamRes$data, teamRes;

      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (_this.state.pendingWebhookURL) {
                _context.next = 3;
                break;
              }

              _this.toggleSnackbar(true, 'error', 'Missing webhook URL', "Please provide a valid webhook URL before continuing");

              return _context.abrupt("return");

            case 3:
              if (!_this.state.pendingVercelTeam) {
                _context.next = 20;
                break;
              }

              _context.prev = 4;
              _context.next = 7;
              return _axios["default"].get("https://api.vercel.com/v1/teams?slug=".concat(_this.state.pendingVercelTeam), {
                headers: {
                  Authorization: "Bearer ".concat(_this.state.pendingVercelToken)
                }
              });

            case 7:
              teamRes = _context.sent;

              if (teamRes !== null && teamRes !== void 0 && (_teamRes$data = teamRes.data) !== null && _teamRes$data !== void 0 && _teamRes$data.id) {
                _context.next = 10;
                break;
              }

              throw 'No team id found';

            case 10:
              console.log(teamRes);
              vercelTeamId = teamRes.data.id;
              vercelTeamName = teamRes.data.name;
              _context.next = 20;
              break;

            case 15:
              _context.prev = 15;
              _context.t0 = _context["catch"](4);
              console.error(_context.t0);

              _this.toggleSnackbar(true, 'error', 'No team found', "Make sure the token you provided is valid and that the team's slug correspond to the one you see in Vercel");

              return _context.abrupt("return");

            case 20:
              _client["default"].create({
                // Explicitly define an _id inside the vercel-deploy path to make sure it's not publicly accessible
                // This will protect users' tokens & project info. Read nmore: https://www.sanity.io/docs/ids
                _id: "vercel-deploy.".concat((0, _nanoid.nanoid)()),
                _type: WEBHOOK_TYPE,
                name: _this.state.pendingWebhookTitle,
                url: _this.state.pendingWebhookURL,
                vercelProject: _this.state.pendingVercelProject,
                vercelTeam: {
                  slug: _this.state.pendingVercelTeam || undefined,
                  name: vercelTeamName || undefined,
                  id: vercelTeamId || undefined
                },
                vercelToken: _this.state.pendingVercelToken
              }).then(function () {
                _this.toggleSnackbar(true, 'success', 'Success!', "Created Deployment: ".concat(_this.state.pendingWebhookTitle));

                _this.setState({
                  pendingWebhookTitle: '',
                  pendingWebhookURL: '',
                  pendingVercelProject: '',
                  pendingVercelTeam: '',
                  pendingVercelToken: '',
                  openDialog: false
                });
              });

            case 21:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[4, 15]]);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "toggleDialog", function (state) {
      _this.setState({
        openDialog: state
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleAction", function (action, event) {
      if (action.key === 'create') {
        _this.onSubmit();
      } else {
        _this.setState({
          openDialog: false
        });
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "toggleSnackbar", function (state, kind, title, message) {
      _this.setState({
        snackbar: {
          active: state,
          kind: kind,
          title: title,
          message: message
        }
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "resetSnackbar", function () {
      _this.setState({
        snackbar: {
          active: false
        }
      });
    });
    _this.state = {
      webhooks: [],
      isLoading: true,
      isUpdating: false,
      isDeploying: false,
      openDialog: false,
      pendingWebhookTitle: '',
      pendingWebhookURL: '',
      pendingVercelProject: '',
      pendingVercelTeam: '',
      pendingVercelToken: '',
      snackbar: {
        active: false,
        kind: '',
        title: '',
        message: ''
      }
    };
    return _this;
  }

  (0, _createClass2["default"])(Deploy, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var webhookList = this.state.webhooks.map(function (hook) {
        return /*#__PURE__*/_react["default"].createElement(_deployItem["default"], {
          key: hook._id,
          name: hook.name,
          url: hook.url,
          id: hook._id,
          vercelProject: hook.vercelProject,
          vercelTeam: hook.vercelTeam,
          vercelToken: hook.vercelToken,
          toggleSnackbar: _this2.toggleSnackbar
        });
      });
      var actions = [{
        key: 'create',
        index: 1,
        title: 'Create',
        color: 'primary'
      }, {
        key: 'cancel',
        index: 2,
        title: 'Cancel',
        color: 'primary',
        kind: 'simple',
        secondary: true
      }];

      var webhookForm = /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, this.state.openDialog && /*#__PURE__*/_react["default"].createElement(_default2["default"], {
        title: "New Deployment",
        color: "default",
        size: "medium",
        padding: "large",
        showCloseButton: true,
        onClose: function onClose() {
          return _this2.toggleDialog(false);
        },
        onAction: this.handleAction,
        actions: this.state.pendingWebhookTitle && this.state.pendingVercelProject && this.state.pendingWebhookURL && this.state.pendingVercelToken ? actions : [actions[1]]
      }, /*#__PURE__*/_react["default"].createElement("form", null, /*#__PURE__*/_react["default"].createElement("div", {
        className: _vercelDeploy["default"].fieldWrapper
      }, /*#__PURE__*/_react["default"].createElement(_default3["default"], {
        label: "Title",
        description: "Give your deploy a name, like 'Production'",
        onChange: function onChange(event) {
          return _this2.setFormValue('pendingWebhookTitle', event.target.value);
        },
        value: this.state.pendingWebhookTitle
      }), /*#__PURE__*/_react["default"].createElement(_default3["default"], {
        label: "Vercel Project Name",
        description: "The exact name of the associated project on Vercel",
        onChange: function onChange(event) {
          return _this2.setFormValue('pendingVercelProject', event.target.value);
        },
        value: this.state.pendingVercelProject
      }), /*#__PURE__*/_react["default"].createElement(_default3["default"], {
        label: "Vercel Team Slug",
        description: "Required for projects under a Vercel Team (use team page URL slug)",
        onChange: function onChange(event) {
          return _this2.setFormValue('pendingVercelTeam', event.target.value);
        },
        value: this.state.pendingVercelTeam
      }), /*#__PURE__*/_react["default"].createElement(_default3["default"], {
        label: "Deploy Hook URL",
        description: "The Vercel deploy hook URL from your project's Git settings",
        type: "url",
        onChange: function onChange(event) {
          return _this2.setFormValue('pendingWebhookURL', event.target.value);
        },
        value: this.state.pendingWebhookURL
      }), /*#__PURE__*/_react["default"].createElement(_default3["default"], {
        label: "Vercel Token",
        description: "A Vercel token from your account settings",
        onChange: function onChange(event) {
          return _this2.setFormValue('pendingVercelToken', event.target.value);
        },
        value: this.state.pendingVercelToken
      }), /*#__PURE__*/_react["default"].createElement(_alert["default"], {
        color: "warning",
        icon: _warningIcon["default"],
        title: "Careful!"
      }, "Once you create this deployment you will not be able to edit it.")))));

      var emptyState = !this.state.webhooks.length && /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        width: "360",
        viewBox: "0 0 260 235",
        className: _vercelDeploy["default"].emptyIcon
      }, /*#__PURE__*/_react["default"].createElement("path", {
        fill: "white",
        fillRule: "evenodd",
        stroke: "black",
        strokeDasharray: "4 4",
        strokeWidth: "2",
        d: "M107.36 2.48l105.7 185.47H2.66L108.35 2.48z",
        clipRule: "evenodd"
      }), /*#__PURE__*/_react["default"].createElement("ellipse", {
        cx: "182.68",
        cy: "156.48",
        fill: "white",
        rx: "74.32",
        ry: "74.52"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        stroke: "black",
        strokeWidth: "2",
        d: "M256.5 156.48c0 40.88-33.05 74.02-73.82 74.02-40.77 0-73.83-33.14-73.83-74.02 0-40.87 33.06-74.01 73.83-74.01 40.77 0 73.82 33.14 73.82 74.01z"
      }), /*#__PURE__*/_react["default"].createElement("mask", {
        id: "a",
        width: "149",
        height: "150",
        x: "108",
        y: "81",
        maskUnits: "userSpaceOnUse"
      }, /*#__PURE__*/_react["default"].createElement("ellipse", {
        cx: "182.68",
        cy: "156.48",
        fill: "#fff",
        rx: "74.32",
        ry: "74.52"
      })), /*#__PURE__*/_react["default"].createElement("g", {
        mask: "url(#a)"
      }, /*#__PURE__*/_react["default"].createElement("path", {
        fill: "black",
        fillRule: "evenodd",
        d: "M108.36 2.48l105.7 185.47H2.66L108.35 2.48z",
        clipRule: "evenodd"
      }))), /*#__PURE__*/_react["default"].createElement("p", {
        className: _vercelDeploy["default"].emptyList
      }, "No deploys created yet.", ' ', /*#__PURE__*/_react["default"].createElement("a", {
        className: _vercelDeploy["default"].emptyHelpLink,
        href: "https://github.com/ndimatteo/sanity-plugin-vercel-deploy/blob/master/README.md",
        target: "_blank",
        rel: "noopener noreferrer"
      }, "Need help?")));

      return /*#__PURE__*/_react["default"].createElement("div", {
        className: _vercelDeploy["default"].appContainer
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: _vercelDeploy["default"].container
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: _vercelDeploy["default"].header
      }, /*#__PURE__*/_react["default"].createElement("h2", {
        className: _vercelDeploy["default"].title
      }, /*#__PURE__*/_react["default"].createElement("svg", {
        fill: "currentColor",
        viewBox: "0 0 512 512",
        height: "1em",
        width: "1em",
        xmlns: "http://www.w3.org/2000/svg",
        className: _vercelDeploy["default"].titleIcon
      }, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M256 48l240 416H16z"
      })), ' ', "Vercel Deployments")), /*#__PURE__*/_react["default"].createElement("div", {
        className: _vercelDeploy["default"].list
      }, this.state.isLoading ? /*#__PURE__*/_react["default"].createElement("div", {
        className: _vercelDeploy["default"].loader
      }, /*#__PURE__*/_react["default"].createElement(_spinner["default"], {
        center: true,
        message: "loading deployments..."
      })) : /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, webhookList, emptyState)), /*#__PURE__*/_react["default"].createElement("div", {
        className: _vercelDeploy["default"].footer
      }, /*#__PURE__*/_react["default"].createElement(_anchor["default"], {
        onClick: function onClick() {
          return _this2.toggleDialog(true);
        },
        bleed: true,
        color: "primary",
        kind: "simple"
      }, "Create New"))), webhookForm, this.state.snackbar.active && /*#__PURE__*/_react["default"].createElement(_default["default"], {
        kind: this.state.snackbar.kind,
        isPersisted: false,
        isCloseable: true,
        timeout: 4000,
        title: this.state.snackbar.title,
        allowDuplicateSnackbarType: true,
        onClose: this.resetSnackbar
      }, this.state.snackbar.message));
    }
  }]);
  return Deploy;
}(_react["default"].Component);

exports["default"] = Deploy;