{"version":3,"sources":["webpack://ReactPolling/webpack/universalModuleDefinition","webpack://ReactPolling/webpack/bootstrap","webpack://ReactPolling/external \"prop-types\"","webpack://ReactPolling/external \"react\"","webpack://ReactPolling/./src/ReactPolling.js","webpack://ReactPolling/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ReactPolling","props","state","isPolling","initConfig","options","url","interval","retryCount","backOffFactor","onSuccess","onFailure","promise","api","Number","this","config","shouldRetry","stopPolling","_ismounted","poll","clearTimeout","setState","startPolling","Error","runPolling","pollingPromise","fetch","_this","setTimeout","then","resp","json","data","ok","Promise","reject","status","continuePolling","error","componentDidMount","render","children","componentWillUnmount","React","Component","propTypes","PropTypes","string","number","func","isRequired","headers","method","body","defaultProps"],"mappings":"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","file":"ReactPolling.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"prop-types\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPolling\"] = factory(require(\"prop-types\"), require(\"react\"));\n\telse\n\t\troot[\"ReactPolling\"] = factory(root[\"prop-types\"], root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n<ReactPolling \n  url={'url to poll'}\n  interval= {3000} // in milliseconds(ms)\n  retryCount={3} // this is optional\n  onSuccess={() => console.log('handle success')}\n  onFailure={() => console.log('handle failure')} // this is optional\n  method={'GET'}\n  headers={headers object} // this is optional\n  body={JSON.stringify(data)} // data to send in a post call. Should be stringified always\n  promise={() => return axios.get('some url')} // to be used when the user wants to not use fetch and instead wants to send their own api calling logic\n  backOffFactor={2} // exponential back off time for polling an api. Default is 1\n  render={({ startPolling, stopPolling, isPolling }) => {\n    if(isPolling) {\n      return (\n        <div>\n          <p>Hello I am polling<p>\n        </div>\n      );\n    } else {\n      return (\n        <div>Hello I stopped polling</div>\n      );\n    }\n  }}\n/>\n*/\n\nexport class ReactPolling extends React.Component {\n  /**\n   * Initial config for setting up the polling service\n   * @param {Object} options\n   * For example:-\n   * options = {\n   *  url: 'api that we need to poll',\n   *  interval: interval for polling\n   *  retryCount: the no of times to retry when the api call fails\n   *  -----------------------------------------\n   *  onSuccess: what should happen on a successful response. This should either return a true to continue polling\n   *  or false to stop polling\n   *  -----------------------------------------\n   *  onFailure: what should happen on a failure response, we can either garbage collect some variables. This is optional\n   *  -----------------------------------------\n   *  method: 'GET',\n   *  headers: {\n   *    Content-Type: 'application/json'\n   *  },\n   *  body: JSON.stringify(data) // in case of a post call\n   *  promise={() => return axios.get('some url')} // to be used when the user wants to not use fetch and instead wants to send their own api calling logic\n   *  backOffFactor={2} // exponential back off time for polling an api. Default is 1\n   * }\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPolling: false\n    };\n    this.initConfig(props);\n  }\n  /**\n   * Function to setup the config object with default config or the config provided by the user\n   * @param {Object} options\n   */\n  initConfig(options) {\n    let { url, interval, retryCount, backOffFactor, onSuccess, onFailure, promise, ...api } = options;\n    interval = Number(interval);\n    retryCount = Number(retryCount);\n    backOffFactor = Number(backOffFactor);\n    this.config = {\n      url,\n      interval,\n      shouldRetry: retryCount ? true : false,\n      retryCount,\n      backOffFactor,\n      onSuccess,\n      onFailure,\n      promise,\n      api\n    };\n  }\n  /**\n   * To be called by the user of this service or when the poll api fails.\n   * It will set the isPolling to false and stop the timer\n   */\n  stopPolling() {\n    if (this._ismounted) {\n      const isPolling = false;\n      if (this.poll) {\n        clearTimeout(this.poll);\n        this.poll = null;\n      }\n      this.setState({\n        isPolling\n      });\n    }\n  }\n  /**\n   * To be called manually by the user of this service.\n   * This will call runPolling and start polling our api\n   */\n  startPolling() {\n    // if no url specified, throw an error\n    if (!this.config.url) {\n      throw new Error('No url provided to poll. Please provide a config object with the url param set');\n    }\n    // reset the interval back to original\n    this.config.interval = this.props.interval;\n    // set isPolling to true\n    this.setState({\n      isPolling: true\n    });\n    // call runPolling, which will start timer and call our api\n    this.runPolling();\n  }\n  /**\n   * start a timer with the interval specified by the user || default interval\n   * we are using setTimeout and not setinterval because a slow back end server might take more time than our interval time and that would lead to\n   * a queue of ajax requests with no response at all.\n   * -----------------------------------------\n   * This function would call the api first time and only on the success response of the api we would poll again after the interval\n   */\n  runPolling() {\n    const { url, interval, backOffFactor, onSuccess, onFailure, promise, api } = this.config;\n\n    const pollingPromise = (promise && promise(url)) || fetch(url, api);\n\n    const _this = this;\n    this.poll = setTimeout(() => {\n      /* onSuccess would be handled by the user of service which would either return true or false\n       * true - This means we need to continue polling\n       * false - This means we need to stop polling\n       */\n      pollingPromise\n        .then(resp => {\n          if (resp && resp.json) {\n            return resp\n              .json()\n              .then(data => {\n                if (resp.ok) {\n                  return data;\n                } else {\n                  return Promise.reject({ status: resp.status, data });\n                }\n              })\n              .catch(data => {\n                if (resp.ok) {\n                  return data;\n                } else {\n                  return Promise.reject({ status: resp.status, data });\n                }\n              });\n          }\n          return resp;\n        })\n        .then(onSuccess)\n        .then(continuePolling => {\n          if (_this.state.isPolling && continuePolling) {\n            _this.config.interval *= backOffFactor;\n            _this.runPolling();\n          } else {\n            _this.stopPolling();\n          }\n        })\n        .catch(error => {\n          if (_this.config.shouldRetry && _this.config.retryCount > 0) {\n            onFailure && onFailure(error);\n            _this.config.retryCount--;\n            _this.config.interval *= backOffFactor;\n            _this.runPolling();\n          } else {\n            onFailure && onFailure(error);\n            _this.stopPolling();\n          }\n        });\n    }, interval);\n  }\n  componentDidMount() {\n    // set _isMounted to true to check if our component is still mounted or the user re-directed to some other page\n    this._ismounted = true;\n    this.startPolling();\n  }\n  render() {\n    if (this.props.render) {\n      return this.props.render({\n        startPolling: this.startPolling.bind(this),\n        stopPolling: this.stopPolling.bind(this),\n        isPolling: this.state.isPolling\n      });\n    }\n    return this.props.children({\n      startPolling: this.startPolling.bind(this),\n      stopPolling: this.stopPolling.bind(this),\n      isPolling: this.state.isPolling\n    });\n  }\n  componentWillUnmount() {\n    this.stopPolling();\n    // set _isMounted to false so that we do no call setState on an unmouted component\n    this._ismounted = false;\n  }\n}\n\n// prop types check for dev environment\nReactPolling.propTypes = {\n  url: PropTypes.string,\n  interval: PropTypes.number,\n  retryCount: PropTypes.number,\n  onSuccess: PropTypes.func.isRequired,\n  onFailure: PropTypes.func,\n  headers: PropTypes.object,\n  method: PropTypes.string,\n  body: PropTypes.object,\n  render: PropTypes.func,\n  promise: PropTypes.func,\n  backOffFactor: PropTypes.number,\n  children: PropTypes.func\n};\n\n// default props\nReactPolling.defaultProps = {\n  interval: 3000,\n  retryCount: 0,\n  backOffFactor: 1,\n  onFailure: () => {},\n  method: 'GET'\n};\n\nexport default ReactPolling;\n","import ReactPolling from './ReactPolling';\nexport default ReactPolling;\n"],"sourceRoot":""}