{"version":3,"file":"index-f3459dbe.js","sources":["../../src/desk/components/RenderActionCollectionState.tsx","../../src/desk/components/RenderBadgeCollectionState.tsx","../../src/desk/components/paneRouter/PaneRouterProvider.tsx","../../src/desk/components/pane/helpers/_calcPaneResize.ts","../../src/desk/components/pane/helpers/_getDOMPath.ts","../../src/desk/components/pane/helpers/_sortElements.ts","../../src/desk/components/pane/paneLayoutController.ts","../../src/desk/components/pane/PaneLayout.tsx","../../src/desk/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/desk/structureResolvers/PaneResolutionError.ts","../../src/desk/structureResolvers/assignId.ts","../../src/desk/structureResolvers/memoBind.ts","../../src/desk/structureResolvers/createPaneResolver.ts","../../src/desk/structureResolvers/resolveIntent.ts","../../src/desk/structureResolvers/createResolvedPaneNodeStream.ts","../../src/desk/structureResolvers/useResolvedPanes.ts","../../src/desk/components/deskTool/intentResolver/utils.ts","../../src/desk/components/deskTool/intentResolver/IntentResolver.tsx","../../src/desk/components/deskTool/StructureError.tsx","../../src/desk/panes/unknown/UnknownPaneType.tsx","../../src/desk/panes/loading/getWaitMessages.ts","../../src/desk/panes/loading/LoadingPane.tsx","../../src/desk/panes/DeskToolPane.tsx","../../src/desk/panes/error/ErrorPane.tsx","../../src/desk/panes/document/DocumentOperationResults.tsx","../../src/desk/useDeskToolSetting.ts","../../src/desk/panes/document/inspectDialog/constants.ts","../../src/desk/panes/document/inspectDialog/helpers.ts","../../src/desk/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/desk/panes/document/inspectDialog/Search.tsx","../../src/desk/panes/document/inspectDialog/InspectDialog.tsx","../../src/desk/panes/document/documentPanel/DeletedDocumentBanner.tsx","../../src/desk/panes/document/documentPanel/ReferenceChangedBanner.tsx","../../src/desk/panes/document/documentPanel/PermissionCheckBanner.tsx","../../src/desk/panes/document/documentPanel/documentViews/useConditionalToast.ts","../../src/desk/panes/document/documentPanel/documentViews/FormView.tsx","../../src/desk/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/desk/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/desk/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/desk/panes/document/documentPanel/DocumentPanel.tsx","../../src/desk/panes/document/statusBar/dialogs/constants.ts","../../src/desk/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/desk/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/desk/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/desk/panes/document/statusBar/ActionStateDialog.tsx","../../src/desk/panes/document/statusBar/ActionMenuButton.tsx","../../src/desk/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/desk/panes/document/statusBar/sparkline/DocumentBadges.tsx","../../src/desk/panes/document/statusBar/sparkline/PublishStatus.tsx","../../src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/AnimatedStatusIcon.tsx","../../src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/ReviewChangesButton.tsx","../../src/desk/panes/document/statusBar/sparkline/DocumentSparkline.tsx","../../src/desk/panes/document/statusBar/DocumentStatusBar.tsx","../../src/desk/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/desk/panes/document/DocumentPane.tsx","../../src/desk/components/deskTool/NoDocumentTypesScreen.tsx","../../src/desk/components/deskTool/DeskTitle.tsx","../../src/desk/components/deskTool/DeskTool.tsx","../../src/desk/components/deskTool/DeskToolBoundary.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: DocumentActionProps\n  children: (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderActionCollectionState = (props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete} = props\n\n  return (\n    <GetHookCollectionState onReset={onActionComplete} hooks={actions} args={actionProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n","import React from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = (props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps, ...rest} = props\n\n  return (\n    <GetHookCollectionState {...rest} hooks={badges} args={badgeProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n","import {omit} from 'lodash'\nimport React, {useCallback, useMemo} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {RouterPaneGroup, RouterPanes, RouterPaneSibling} from '../../types'\nimport {usePaneLayout} from '../pane/usePaneLayout'\nimport {ChildLink} from './ChildLink'\nimport {BackLink} from './BackLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {PaneRouterContextValue} from './types'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: React.ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent, resolvePathFromState} = useRouter()\n  const routerState = useRouterState()\n  const {panes, expand} = usePaneLayout()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes],\n  )\n  const lastPane = useMemo(() => panes?.[panes.length - 2], [panes])\n\n  const groupIndex = index - 1\n\n  const createNextRouterState = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...(routerState || {}), panes: nextPanes}\n\n      return nextRouterState\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex],\n  )\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const nextRouterState = createNextRouterState(modifier)\n      setTimeout(() => navigate(nextRouterState), 0)\n      return nextRouterState\n    },\n    [createNextRouterState, navigate],\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n\n      return resolvePathFromState(nextRouterState)\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex],\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {template: template.id, parentRefPath: pathToString(parentRefPath), type},\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups],\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      BackLink,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings,\n        )\n      },\n\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = true): void => {\n        if (expandLast && lastPane) {\n          expand(lastPane.element)\n        }\n        navigate(\n          {\n            panes: [...routerPaneGroups.slice(0, groupIndex)],\n          },\n          {replace: true},\n        )\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand,\n    ],\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {PaneConfigOpts, PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {PaneConfigOpts, PaneData, PaneResizeCache, PaneResizeData} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {CardProps, useElementRect} from '@sanity/ui'\nimport React, {useMemo, useState, useEffect} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, PaneLayoutState} from './paneLayoutController'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const controller = useMemo(() => createPaneLayoutController(), [])\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import React, {ReactElement, createElement, useCallback} from 'react'\nimport {Box} from '@sanity/ui'\nimport {usePane} from '../../../components'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Resizable} from './Resizable'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(props: DocumentInspectorPanelProps): ReactElement | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useDeskTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const element = createElement(inspector.component, {\n    onClose: handleClose,\n    documentId,\n    documentType,\n  })\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {RouterPaneSiblingContext} from '../types'\n\nexport interface PaneResolutionErrorOptions {\n  message: string\n  context?: RouterPaneSiblingContext\n  helpId?: string\n  cause?: Error\n}\n\n/**\n * An error thrown during pane resolving. This error is meant to be bubbled up\n * through react and handled in an error boundary. It includes a `cause`\n * property which is the original error caught\n */\nexport class PaneResolutionError extends Error {\n  cause: Error | undefined\n  context: RouterPaneSiblingContext | undefined\n  helpId: string | undefined\n\n  constructor({message, context, helpId, cause}: PaneResolutionErrorOptions) {\n    super(message)\n    this.context = context\n    this.helpId = helpId\n    this.cause = cause\n  }\n}\n","import {nanoid} from 'nanoid'\n\n// `WeakMap`s require the first type param to extend `object`\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst randomIdCache = new WeakMap<object, string>()\n\n/**\n * given an object, this function randomly generates an ID and returns it. this\n * result is then saved in a WeakMap so subsequent requests for the same object\n * will receive the same ID\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function assignId(obj: object): string {\n  const cachedValue = randomIdCache.get(obj)\n  if (cachedValue) return cachedValue\n\n  const id = nanoid()\n  randomIdCache.set(obj, id)\n  return id\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n\n// `WeakMap`s require the first type param to extend `object`\nconst bindCache = new WeakMap<object, Map<string, Function>>()\n\n/**\n * An alternative to `obj.method.bind(obj)` that utilizes a weakmap to return\n * the same memory reference for sequent binds.\n */\nexport function memoBind<\n  T extends object,\n  K extends keyof {[P in keyof T]: T[P] extends Function ? T[P] : never},\n>(obj: T, methodKey: K): T[K]\nexport function memoBind(obj: Record<string, unknown>, methodKey: string): Function {\n  const boundMethods = bindCache.get(obj) || new Map<string, Function>()\n  if (boundMethods) {\n    const bound = boundMethods.get(methodKey)\n    if (bound) return bound\n  }\n\n  const method = obj[methodKey]\n\n  if (typeof method !== 'function') {\n    throw new Error(\n      `Expected property \\`${methodKey}\\` to be a function but got ${typeof method} instead.`,\n    )\n  }\n\n  const bound = method.bind(obj)\n  boundMethods.set(methodKey, bound)\n  bindCache.set(obj, boundMethods)\n\n  return bound\n}\n","import {from, isObservable, Observable, of as observableOf, Subscribable} from 'rxjs'\n\nimport {publishReplay, refCount, switchMap} from 'rxjs/operators'\n\nimport {PaneNode, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {PaneResolutionError} from './PaneResolutionError'\nimport {isRecord} from 'sanity'\n\ninterface Serializable {\n  serialize: (...args: never[]) => unknown\n}\n\nconst isPromise = (thing: any): thing is PromiseLike<unknown> => {\n  return !!thing && typeof thing?.then === 'function'\n}\nconst isSerializable = (thing: unknown): thing is Serializable => {\n  if (!isRecord(thing)) return false\n  return typeof thing.serialize === 'function'\n}\n\n/**\n * The signature of the function used to take an `UnresolvedPaneNode` and turn\n * it into an `Observable<PaneNode>`.\n */\nexport type PaneResolver = (\n  unresolvedPane: UnresolvedPaneNode | undefined,\n  context: RouterPaneSiblingContext,\n  flatIndex: number,\n) => Observable<PaneNode>\n\nexport type PaneResolverMiddleware = (paneResolveFn: PaneResolver) => PaneResolver\n\nconst rethrowWithPaneResolutionErrors: PaneResolverMiddleware =\n  (next) => (unresolvedPane, context, flatIndex) => {\n    try {\n      return next(unresolvedPane, context, flatIndex)\n    } catch (e) {\n      // re-throw errors that are already `PaneResolutionError`s\n      if (e instanceof PaneResolutionError) {\n        throw e\n      }\n\n      // anything else, wrap with `PaneResolutionError` and set the underlying\n      // error as a the `cause`\n      throw new PaneResolutionError({\n        message: typeof e?.message === 'string' ? e.message : '',\n        context,\n        cause: e,\n      })\n    }\n  }\n\nconst wrapWithPublishReplay: PaneResolverMiddleware =\n  (next) =>\n  (...args) => {\n    return next(...args).pipe(\n      // need to add publishReplay + refCount to ensure new subscribers always\n      // get an emission. without this, memoized observables may get stuck\n      // waiting for their first emissions resulting in a loading pane\n      publishReplay(1),\n      refCount(),\n    )\n  }\n\nexport function createPaneResolver(middleware: PaneResolverMiddleware): PaneResolver {\n  // note: this API includes a middleware/wrapper function because the function\n  // is recursive. we want to call the wrapped version of the function always\n  // (even inside of nested calls) so the identifier invoked for the recursion\n  // should be the wrapped version\n  const resolvePane = rethrowWithPaneResolutionErrors(\n    wrapWithPublishReplay(\n      middleware((unresolvedPane, context, flatIndex) => {\n        if (!unresolvedPane) {\n          throw new PaneResolutionError({\n            message: 'Pane returned no child',\n            context,\n            helpId: 'structure-item-returned-no-child',\n          })\n        }\n\n        if (isPromise(unresolvedPane) || isObservable(unresolvedPane)) {\n          return from(unresolvedPane).pipe(\n            switchMap((result) => resolvePane(result, context, flatIndex)),\n          )\n        }\n\n        if (isSerializable(unresolvedPane)) {\n          return resolvePane(unresolvedPane.serialize(context), context, flatIndex)\n        }\n\n        if (typeof unresolvedPane === 'function') {\n          return resolvePane(unresolvedPane(context.id, context), context, flatIndex)\n        }\n\n        return observableOf(unresolvedPane)\n      }),\n    ),\n  )\n\n  return resolvePane\n}\n","import {omit} from 'lodash'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {PaneNode, RouterPanes, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {memoBind} from './memoBind'\nimport {createPaneResolver, PaneResolverMiddleware} from './createPaneResolver'\n\ninterface TraverseOptions {\n  unresolvedPane: UnresolvedPaneNode | undefined\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  parent: PaneNode | null\n  path: string[]\n  currentId: string\n  flatIndex: number\n  levelIndex: number\n  structureContext: StructureContext\n}\n\nexport interface ResolveIntentOptions {\n  rootPaneNode?: UnresolvedPaneNode\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  structureContext: StructureContext\n}\n\n/**\n * Resolves an intent request using breadth first search. If a match is not\n * found, the intent will resolve to the fallback editor.\n *\n * A match is found if:\n * 1. the `PaneNode` is of type `document` and the its ID matches the intent ID\n * 2. the `PaneNode` is of type `documentList` and the `schemaTypeName` matches\n * 3. the `PaneNode`'s `canHandleIntent` method returns true\n *\n * If a `PaneNode` of type `list` is found, it will be searched for a match.\n *\n * @see PaneNode\n */\nexport async function resolveIntent(options: ResolveIntentOptions): Promise<RouterPanes> {\n  const resolvedPaneCache = new Map<string, Observable<PaneNode>>()\n\n  // this is a simple version of the memoizer in `createResolvedPaneNodeStream`\n  const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n    const key = unresolvedPane && `${assignId(unresolvedPane)}-${context.path.join('__')}`\n    const cachedResolvedPane = key && resolvedPaneCache.get(key)\n    if (cachedResolvedPane) return cachedResolvedPane\n\n    const result = nextFn(unresolvedPane, context, flatIndex)\n    if (key) resolvedPaneCache.set(key, result)\n    return result\n  }\n\n  const resolvePane = createPaneResolver(memoize)\n\n  const fallbackEditorPanes: RouterPanes = [\n    [\n      {\n        id: `__edit__${options.params.id}`,\n        params: {...omit(options.params, ['id']), type: options.params.type},\n        payload: options.payload,\n      },\n    ],\n  ]\n\n  async function traverse({\n    currentId,\n    flatIndex,\n    intent,\n    params,\n    parent,\n    path,\n    payload,\n    unresolvedPane,\n    levelIndex,\n    structureContext,\n  }: TraverseOptions): Promise<\n    Array<{panes: RouterPanes; depthIndex: number; levelIndex: number}>\n  > {\n    if (!unresolvedPane) return []\n\n    const {id: targetId, type: schemaTypeName, ...otherParams} = params\n    const context: RouterPaneSiblingContext = {\n      id: currentId,\n      splitIndex: 0,\n      parent,\n      path,\n      index: flatIndex,\n      params: {},\n      payload: undefined,\n      structureContext,\n    }\n    const resolvedPane = await firstValueFrom(resolvePane(unresolvedPane, context, flatIndex))\n\n    // if the resolved pane is a document pane and the pane's ID matches then\n    // resolve the intent to the current path\n    if (resolvedPane.type === 'document' && resolvedPane.id === targetId) {\n      return [\n        {\n          panes: [\n            ...path.slice(0, path.length - 1).map((i) => [{id: i}]),\n            [{id: targetId, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `getIntentState.ts`\n    if (\n      // if the resolve pane's `canHandleIntent` returns true, then resolve\n      resolvedPane.canHandleIntent?.(intent, params, {\n        pane: resolvedPane,\n        index: flatIndex,\n      }) ||\n      // if the pane's `canHandleIntent` did not return true, then match against\n      // this default case. we will resolve the intent if:\n      (resolvedPane.type === 'documentList' &&\n        // 1. the schema type matches (this required for the document to render)\n        resolvedPane.schemaTypeName === schemaTypeName &&\n        // 2. the filter is the default filter.\n        //\n        // NOTE: this case is to prevent false positive matches where the user\n        // has configured a more specific filter for a particular type. In that\n        // case, the user can implement their own `canHandleIntent` function\n        resolvedPane.options.filter === '_type == $type')\n    ) {\n      return [\n        {\n          panes: [\n            // map the current path to router panes\n            ...path.map((id) => [{id}]),\n            // then augment with the intents IDs and params\n            [{id: params.id, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    if (resolvedPane.type === 'list' && resolvedPane.child && resolvedPane.items) {\n      return (\n        await Promise.all(\n          resolvedPane.items.map((item, nextLevelIndex) => {\n            if (item.type === 'divider') return Promise.resolve([])\n\n            return traverse({\n              currentId: item._id || item.id,\n              flatIndex: flatIndex + 1,\n              intent,\n              params,\n              parent: resolvedPane,\n              path: [...path, item.id],\n              payload,\n              unresolvedPane:\n                typeof resolvedPane.child === 'function'\n                  ? memoBind(resolvedPane, 'child')\n                  : resolvedPane.child,\n              levelIndex: nextLevelIndex,\n              structureContext,\n            })\n          }),\n        )\n      ).flat()\n    }\n\n    return []\n  }\n\n  const matchingPanes = await traverse({\n    currentId: 'root',\n    flatIndex: 0,\n    levelIndex: 0,\n    intent: options.intent,\n    params: options.params,\n    parent: null,\n    path: [],\n    payload: options.payload,\n    unresolvedPane: options.rootPaneNode,\n    structureContext: options.structureContext,\n  })\n\n  const closestPaneToRoot = matchingPanes.sort((a, b) => {\n    // break ties with the level index\n    if (a.depthIndex === b.depthIndex) return a.levelIndex - b.levelIndex\n    return a.depthIndex - b.depthIndex\n  })[0]\n\n  if (closestPaneToRoot) {\n    return closestPaneToRoot.panes\n  }\n\n  return fallbackEditorPanes\n}\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {isEqual} from 'lodash'\nimport {Observable, NEVER, of as observableOf, concat} from 'rxjs'\nimport {switchMap, map, scan, distinctUntilChanged, pairwise, startWith} from 'rxjs/operators'\nimport {\n  DocumentPaneNode,\n  PaneNode,\n  RouterPaneSiblingContext,\n  RouterPanes,\n  RouterPaneSibling,\n  PaneNodeResolver,\n  UnresolvedPaneNode,\n} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {createPaneResolver, PaneResolver, PaneResolverMiddleware} from './createPaneResolver'\nimport {memoBind} from './memoBind'\nimport {PaneResolutionError} from './PaneResolutionError'\n\n/**\n * the fallback editor child that is implicitly inserted into the structure tree\n * if the id starts with `__edit__`\n */\nconst fallbackEditorChild: PaneNodeResolver = (nodeId, context): DocumentPaneNode => {\n  const id = nodeId.replace(/^__edit__/, '')\n  const {\n    params,\n    payload,\n    structureContext: {resolveDocumentNode},\n  } = context\n  const {type, template} = params\n\n  if (!type) {\n    throw new Error(\n      `Document type for document with ID ${id} was not provided in the router params.`,\n    )\n  }\n\n  let defaultDocumentBuilder = resolveDocumentNode({schemaType: type, documentId: id}).id('editor')\n\n  if (template) {\n    defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(\n      template,\n      payload as {[key: string]: unknown},\n    )\n  }\n\n  return defaultDocumentBuilder.serialize() as DocumentPaneNode\n}\n\n/**\n * takes in a `RouterPaneSiblingContext` and returns a normalized string\n * representation that can be used for comparisons\n */\nfunction hashContext(context: RouterPaneSiblingContext): string {\n  return `contextHash(${JSON.stringify({\n    id: context.id,\n    parentId: parent && assignId(parent),\n    path: context.path,\n    index: context.index,\n    splitIndex: context.splitIndex,\n    serializeOptionsIndex: context.serializeOptions?.index,\n    serializeOptionsPath: context.serializeOptions?.path,\n  })})`\n}\n\n/**\n * takes in `ResolvedPaneMeta` and returns a normalized string representation\n * that can be used for comparisons\n */\nconst hashResolvedPaneMeta = (meta: ResolvedPaneMeta): string => {\n  const normalized = {\n    type: meta.type,\n    id: meta.routerPaneSibling.id,\n    params: meta.routerPaneSibling.params || {},\n    payload: meta.routerPaneSibling.payload || null,\n    flatIndex: meta.flatIndex,\n    groupIndex: meta.groupIndex,\n    siblingIndex: meta.siblingIndex,\n    path: meta.path,\n    paneNode: meta.type === 'resolvedMeta' ? assignId(meta.paneNode) : null,\n  }\n\n  return `metaHash(${JSON.stringify(normalized)})`\n}\n\n/**\n * Represents one flattened \"router pane\", including the source group and\n * sibling indexes.\n *\n * @see RouterPanes\n */\ninterface FlattenedRouterPane {\n  routerPaneSibling: RouterPaneSibling\n  flatIndex: number\n  groupIndex: number\n  siblingIndex: number\n}\n\n/**\n * The state of the accumulator used to store and manage memo cache state\n */\ninterface CacheState {\n  /**\n   * Holds the memoization results keyed by a combination of `assignId` and a\n   * context hash.\n   */\n  resolvedPaneCache: Map<string, Observable<PaneNode>>\n  /**\n   * Acts as a dictionary that stores cache keys by their flat index. This is\n   * used to clean up the cache between different branches in the pane\n   * structure.\n   *\n   * @see createResolvedPaneNodeStream look inside the `scan` where `wrapFn` is\n   * defined\n   */\n  cacheKeysByFlatIndex: Array<Set<string>>\n  /**\n   * The resulting memoized `PaneResolver` function. This function closes over\n   * the `resolvedPaneCache`.\n   */\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n}\n\nexport interface CreateResolvedPaneNodeStreamOptions {\n  /**\n   * an input stream of `RouterPanes`\n   * @see RouterPanes\n   */\n  routerPanesStream: Observable<RouterPanes>\n  /**\n   * any `UnresolvedPaneNode` (could be an observable, promise, pane resolver etc)\n   */\n  rootPaneNode: UnresolvedPaneNode\n  /** used primarily for testing */\n  initialCacheState?: CacheState\n\n  structureContext: StructureContext\n}\n\n/**\n * The result of pane resolving\n */\nexport type ResolvedPaneMeta = {\n  groupIndex: number\n  siblingIndex: number\n  flatIndex: number\n  routerPaneSibling: RouterPaneSibling\n  path: string[]\n} & ({type: 'loading'; paneNode: null} | {type: 'resolvedMeta'; paneNode: PaneNode})\n\ninterface ResolvePaneTreeOptions {\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n  unresolvedPane: UnresolvedPaneNode | undefined\n  parent: PaneNode | null\n  path: string[]\n  structureContext: StructureContext\n}\n\n/**\n * A recursive pane resolving function. Starts at one unresolved pane node and\n * continues until there is no more flattened router panes that can be used as\n * input to the unresolved panes.\n */\nfunction resolvePaneTree({\n  unresolvedPane,\n  flattenedRouterPanes,\n  parent,\n  path,\n  resolvePane,\n  structureContext,\n}: ResolvePaneTreeOptions): Observable<ResolvedPaneMeta[]> {\n  const [current, ...rest] = flattenedRouterPanes\n  const next = rest[0] as FlattenedRouterPane | undefined\n\n  const context: RouterPaneSiblingContext = {\n    id: current.routerPaneSibling.id,\n    splitIndex: current.siblingIndex,\n    parent,\n    path: [...path, current.routerPaneSibling.id],\n    index: current.flatIndex,\n    params: current.routerPaneSibling.params || {},\n    payload: current.routerPaneSibling.payload,\n    structureContext,\n  }\n\n  try {\n    return resolvePane(unresolvedPane, context, current.flatIndex).pipe(\n      // this switch map receives a resolved pane\n      switchMap((paneNode) => {\n        // we can create a `resolvedMeta` type using it\n        const resolvedPaneMeta: ResolvedPaneMeta = {\n          type: 'resolvedMeta',\n          ...current,\n          paneNode: paneNode,\n          path: context.path,\n        }\n\n        // for the other unresolved panes, we can create \"loading panes\"\n        const loadingPanes = rest.map((i, restIndex) => {\n          const loadingPanePath = [\n            ...context.path,\n            ...rest.slice(restIndex).map((_, currentIndex) => `[${i.flatIndex + currentIndex}]`),\n          ]\n\n          const loadingPane: ResolvedPaneMeta = {\n            type: 'loading',\n            path: loadingPanePath,\n            paneNode: null,\n            ...i,\n          }\n\n          return loadingPane\n        })\n\n        if (!rest.length) {\n          return observableOf([resolvedPaneMeta])\n        }\n\n        let nextStream\n\n        if (\n          // the fallback editor case\n          next?.routerPaneSibling.id.startsWith('__edit__')\n        ) {\n          nextStream = resolvePaneTree({\n            unresolvedPane: fallbackEditorChild,\n            flattenedRouterPanes: rest,\n            parent,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        } else if (current.groupIndex === next?.groupIndex) {\n          // if the next flattened router pane has the same group index as the\n          // current flattened router pane, then the next flattened router pane\n          // belongs to the same group (i.e. it is a split pane)\n          nextStream = resolvePaneTree({\n            unresolvedPane,\n            flattenedRouterPanes: rest,\n            parent,\n            path,\n            resolvePane,\n            structureContext,\n          })\n        } else {\n          // normal children resolving\n          nextStream = resolvePaneTree({\n            unresolvedPane:\n              typeof paneNode.child === 'function'\n                ? (memoBind(paneNode, 'child') as PaneNodeResolver)\n                : paneNode.child,\n            flattenedRouterPanes: rest,\n            parent: paneNode,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        }\n\n        return concat(\n          // we emit the loading panes first in a concat (this emits immediately)\n          observableOf([resolvedPaneMeta, ...loadingPanes]),\n          // then whenever the next stream is done, the results will be combined.\n          nextStream.pipe(map((nextResolvedPanes) => [resolvedPaneMeta, ...nextResolvedPanes])),\n        )\n      }),\n    )\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      if (e.context) {\n        console.warn(\n          `Pane resolution error at index ${e.context.index}${\n            e.context.splitIndex > 0 ? ` for split pane index ${e.context.splitIndex}` : ''\n          }: ${e.message}${e.helpId ? ` - see ${generateHelpUrl(e.helpId)}` : ''}`,\n          e,\n        )\n      }\n\n      if (e.helpId === 'structure-item-returned-no-child') {\n        // returning an observable of an empty array will remove loading panes\n        // note: this one intentionally does not throw\n        return observableOf([])\n      }\n    }\n\n    throw e\n  }\n}\n\n/**\n * Takes in a stream of `RouterPanes` and an unresolved root pane and returns\n * a stream of `ResolvedPaneMeta`\n */\nexport function createResolvedPaneNodeStream({\n  routerPanesStream,\n  rootPaneNode,\n  initialCacheState = {\n    cacheKeysByFlatIndex: [],\n    flattenedRouterPanes: [],\n    resolvedPaneCache: new Map(),\n    resolvePane: () => NEVER,\n  },\n  structureContext,\n}: CreateResolvedPaneNodeStreamOptions): Observable<ResolvedPaneMeta[]> {\n  const resolvedPanes$ = routerPanesStream.pipe(\n    // add in implicit \"root\" router pane\n    map((rawRouterPanes) => [[{id: 'root'}], ...rawRouterPanes]),\n    // create flattened router panes\n    map((routerPanes) => {\n      const flattenedRouterPanes: FlattenedRouterPane[] = routerPanes\n        .flatMap((routerPaneGroup, groupIndex) =>\n          routerPaneGroup.map((routerPaneSibling, siblingIndex) => ({\n            routerPaneSibling,\n            groupIndex,\n            siblingIndex,\n          })),\n        )\n        // add in the flat index\n        .map((i, index) => ({...i, flatIndex: index}))\n\n      return flattenedRouterPanes\n    }),\n    // calculate a \"diffIndex\" used for clearing the memo cache\n    startWith([] as FlattenedRouterPane[]),\n    pairwise(),\n    map(([prev, curr]) => {\n      for (let i = 0; i < curr.length; i++) {\n        const prevValue = prev[i]\n        const currValue = curr[i]\n\n        if (!isEqual(prevValue, currValue)) {\n          return {\n            flattenedRouterPanes: curr,\n            diffIndex: i,\n          }\n        }\n      }\n\n      return {\n        flattenedRouterPanes: curr,\n        diffIndex: curr.length,\n      }\n    }),\n    // create the memoized `resolvePane` function and manage the memo cache\n    scan((acc, next) => {\n      const {cacheKeysByFlatIndex, resolvedPaneCache} = acc\n      const {flattenedRouterPanes, diffIndex} = next\n\n      // use the `cacheKeysByFlatIndex` like a dictionary to find cache keys to\n      // and cache keys to delete\n      const beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1)\n      const afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1)\n\n      const keysToKeep = new Set(beforeDiffIndex.flatMap((keySet) => Array.from(keySet)))\n      const keysToDelete = afterDiffIndex\n        .flatMap((keySet) => Array.from(keySet))\n        .filter((key) => !keysToKeep.has(key))\n\n      for (const key of keysToDelete) {\n        resolvedPaneCache.delete(key)\n      }\n\n      // create a memoizing pane resolver middleware that utilizes the cache\n      // maintained above. this keeps the cache from growing indefinitely\n      const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n        const key = unresolvedPane && `${assignId(unresolvedPane)}-${hashContext(context)}`\n        const cachedResolvedPane = key && resolvedPaneCache.get(key)\n        if (cachedResolvedPane) return cachedResolvedPane\n\n        const result = nextFn(unresolvedPane, context, flatIndex)\n        if (!key) return result\n\n        const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || new Set()\n        cacheKeySet.add(key)\n        cacheKeysByFlatIndex[flatIndex] = cacheKeySet\n        resolvedPaneCache.set(key, result)\n        return result\n      }\n\n      return {\n        flattenedRouterPanes,\n        cacheKeysByFlatIndex,\n        resolvedPaneCache,\n        resolvePane: createPaneResolver(memoize),\n      }\n    }, initialCacheState),\n    // run the memoized, recursive resolving\n    switchMap(({flattenedRouterPanes, resolvePane}) =>\n      resolvePaneTree({\n        unresolvedPane: rootPaneNode,\n        flattenedRouterPanes,\n        parent: null,\n        path: [],\n        resolvePane,\n        structureContext,\n      }),\n    ),\n  )\n\n  // after we've created a stream of `ResolvedPaneMeta[]`, we need to clean up\n  // the results to remove unwanted loading panes and prevent unnecessary\n  // emissions\n  return resolvedPanes$.pipe(\n    // this diffs the previous emission with the current one. if there is a new\n    // loading pane at the same position where a previous pane already had a\n    // resolved value (looking at the IDs to compare), then return the previous\n    // pane instead of the loading pane\n    scan(\n      (prev, next) =>\n        next.map((nextPane, index) => {\n          const prevPane = prev[index] as ResolvedPaneMeta | undefined\n          if (!prevPane) return nextPane\n          if (nextPane.type !== 'loading') return nextPane\n\n          if (prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id) {\n            return prevPane\n          }\n          return nextPane\n        }),\n      [] as ResolvedPaneMeta[],\n    ),\n    // this prevents duplicate emissions\n    distinctUntilChanged((prev, next) => {\n      if (prev.length !== next.length) return false\n\n      for (let i = 0; i < next.length; i++) {\n        const prevValue = prev[i]\n        const nextValue = next[i]\n        if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) {\n          return false\n        }\n      }\n\n      return true\n    }),\n  )\n}\n","import {useEffect, useMemo, useState} from 'react'\nimport {ReplaySubject} from 'rxjs'\nimport {map} from 'rxjs/operators'\nimport {LOADING_PANE} from '../constants'\nimport {RouterPanes, PaneNode, RouterPaneGroup} from '../types'\nimport {useDeskTool} from '../useDeskTool'\nimport {createResolvedPaneNodeStream} from './createResolvedPaneNodeStream'\nimport {RouterState, useRouter} from 'sanity/router'\n\ninterface PaneData {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  key: string\n  pane: PaneNode | typeof LOADING_PANE\n  params: Record<string, string | undefined>\n  path: string\n  payload: unknown\n  selected: boolean\n  siblingIndex: number\n}\n\nexport interface Panes {\n  paneDataItems: PaneData[]\n  routerPanes: RouterPanes\n  resolvedPanes: (PaneNode | typeof LOADING_PANE)[]\n}\n\nfunction useRouterPanesStream() {\n  const routerStateSubject = useMemo(() => new ReplaySubject<RouterState>(1), [])\n  const routerPanes$ = useMemo(\n    () =>\n      routerStateSubject\n        .asObservable()\n        .pipe(map((_routerState) => (_routerState?.panes || []) as RouterPanes)),\n    [routerStateSubject],\n  )\n  const {state: routerState} = useRouter()\n  useEffect(() => {\n    routerStateSubject.next(routerState)\n  }, [routerState, routerStateSubject])\n\n  return routerPanes$\n}\n\nexport function useResolvedPanes(): Panes {\n  // used to propagate errors from async effect. throwing inside of the render\n  // will bubble the error to react where it can be picked up by standard error\n  // boundaries\n  const [error, setError] = useState<unknown>()\n  if (error) throw error\n\n  const {structureContext, rootPaneNode} = useDeskTool()\n\n  const [data, setData] = useState<Panes>({\n    paneDataItems: [],\n    resolvedPanes: [],\n    routerPanes: [],\n  })\n\n  const routerPanesStream = useRouterPanesStream()\n\n  useEffect(() => {\n    const resolvedPanes$ = createResolvedPaneNodeStream({\n      rootPaneNode,\n      routerPanesStream,\n      structureContext,\n    }).pipe(\n      map((resolvedPanes) => {\n        const routerPanes = resolvedPanes.reduce<RouterPanes>((acc, next) => {\n          const currentGroup = acc[next.groupIndex] || []\n          currentGroup[next.siblingIndex] = next.routerPaneSibling\n          acc[next.groupIndex] = currentGroup\n          return acc\n        }, [])\n\n        const groupsLen = routerPanes.length\n\n        const paneDataItems = resolvedPanes.map((pane) => {\n          const {groupIndex, flatIndex, siblingIndex, routerPaneSibling, path} = pane\n          const itemId = routerPaneSibling.id\n          const nextGroup = routerPanes[groupIndex + 1] as RouterPaneGroup | undefined\n\n          const paneDataItem: PaneData = {\n            active: groupIndex === groupsLen - 2,\n            childItemId: nextGroup?.[0].id ?? null,\n            index: flatIndex,\n            itemId: routerPaneSibling.id,\n            groupIndex,\n            key: `${\n              pane.type === 'loading' ? 'unknown' : pane.paneNode.id\n            }-${itemId}-${siblingIndex}`,\n            pane: pane.type === 'loading' ? LOADING_PANE : pane.paneNode,\n            params: routerPaneSibling.params || {},\n            path: path.join(';'),\n            payload: routerPaneSibling.payload,\n            selected: flatIndex === resolvedPanes.length - 1,\n            siblingIndex,\n          }\n\n          return paneDataItem\n        })\n\n        return {\n          paneDataItems,\n          routerPanes,\n          resolvedPanes: paneDataItems.map((pane) => pane.pane),\n        }\n      }),\n    )\n\n    const subscription = resolvedPanes$.subscribe({\n      next: (result) => setData(result),\n      error: (e) => setError(e),\n    })\n\n    return () => subscription.unsubscribe()\n  }, [rootPaneNode, routerPanesStream, structureContext])\n\n  return data\n}\n","import {uuid} from '@sanity/uuid'\nimport {first} from 'rxjs/operators'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {PaneResolutionError} from '../../../structureResolvers'\nimport {getPublishedId, DocumentStore} from 'sanity'\n\nexport function removeDraftPrefix(documentId: string): string {\n  const publishedId = getPublishedId(documentId)\n\n  if (publishedId !== documentId) {\n    console.warn(\n      'Removed unexpected draft id in document link: All links to documents should have the ' +\n        '`drafts.`-prefix removed and something appears to have made an intent link to `%s`',\n      documentId,\n    )\n  }\n\n  return publishedId\n}\n\nexport async function ensureDocumentIdAndType(\n  documentStore: DocumentStore,\n  id: string | undefined,\n  type: string | undefined,\n): Promise<{id: string; type: string}> {\n  if (id && type) return {id, type}\n  if (!id && type) return {id: uuid(), type}\n  if (id && !type) {\n    const resolvedType = await firstValueFrom(\n      documentStore.resolveTypeForDocument(id) as Observable<string>,\n    )\n\n    return {id, type: resolvedType}\n  }\n\n  throw new PaneResolutionError({\n    message: 'Neither document `id` or `type` was provided when trying to resolve intent.',\n  })\n}\n","import {memo, useCallback, useEffect, useState} from 'react'\nimport {resolveIntent} from '../../../structureResolvers'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {ensureDocumentIdAndType} from './utils'\nimport {useRouter, useRouterState} from 'sanity/router'\nimport {isRecord, useDocumentStore} from 'sanity'\n\nconst EMPTY_RECORD: Record<string, unknown> = {}\n\n/**\n * A component that receives an intent from props and redirects to the resolved\n * intent location (while showing a loading spinner during the process)\n */\nexport const IntentResolver = memo(function IntentResolver() {\n  const {navigate} = useRouter()\n  const maybeIntent = useRouterState(\n    useCallback((routerState) => {\n      const intentName = typeof routerState.intent === 'string' ? routerState.intent : undefined\n      return intentName\n        ? {\n            intent: intentName,\n            params: isRecord(routerState.params) ? routerState.params : EMPTY_RECORD,\n            payload: routerState.payload,\n          }\n        : undefined\n    }, []),\n  )\n  const {rootPaneNode, structureContext} = useDeskTool()\n  const documentStore = useDocumentStore()\n  const [error, setError] = useState<unknown>(null)\n\n  // this re-throws errors so that parent ErrorBoundary's can handle them properly\n  if (error) throw error\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (maybeIntent) {\n      const {intent, params, payload} = maybeIntent\n\n      let cancelled = false\n      // eslint-disable-next-line no-inner-declarations\n      async function effect() {\n        const {id, type} = await ensureDocumentIdAndType(\n          documentStore,\n          typeof params.id === 'string' ? params.id : undefined,\n          typeof params.type === 'string' ? params.type : undefined,\n        )\n\n        if (cancelled) return\n\n        const panes = await resolveIntent({\n          intent,\n          params: {...params, id, type},\n          payload,\n          rootPaneNode,\n          structureContext,\n        })\n\n        if (cancelled) return\n\n        navigate({panes}, {replace: true})\n      }\n\n      effect().catch(setError)\n\n      return () => {\n        cancelled = true\n      }\n    }\n  }, [documentStore, maybeIntent, navigate, rootPaneNode, structureContext])\n\n  return null\n})\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {Box, Button, Card, Code, Container, Heading, Label, Stack, Text} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport styled from 'styled-components'\nimport {SyncIcon} from '@sanity/icons'\nimport {SerializeError} from '../../structureBuilder'\nimport {PaneResolutionError} from '../../structureResolvers'\n\nconst PathSegment = styled.span`\n  &:not(:last-child)::after {\n    content: ' ➝ ';\n    opacity: 0.5;\n  }\n`\n\nfunction formatStack(stack: string) {\n  return (\n    stack\n      // Prettify builder functions\n      .replace(/\\(\\.\\.\\.\\)\\./g, '(...)\\n  .')\n      // Remove webpack cruft from function names\n      .replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, '')\n      // Remove default export postfix from function names\n      .replace(/___default\\./g, '.')\n      // Replace full host path, leave only path to JS-file\n      .replace(new RegExp(` \\\\(https?:\\\\/\\\\/${window.location.host}`, 'g'), ' (')\n  )\n}\n\ninterface StructureErrorProps {\n  error: unknown\n}\n\nexport function StructureError({error}: StructureErrorProps) {\n  if (!(error instanceof PaneResolutionError)) {\n    throw error\n  }\n  const {cause} = error\n\n  // Serialize errors are well-formatted and should be readable, in these cases a stack trace is\n  // usually not helpful. Build errors in dev (with HMR) usually also contains a bunch of garbage\n  // instead of an actual error message, so make sure we show the message in these cases as well\n  const stack = cause?.stack || error.stack\n  const showStack =\n    stack && !(cause instanceof SerializeError) && !error.message.includes('Module build failed:')\n\n  const path = cause instanceof SerializeError ? cause.path : []\n  const helpId = (cause instanceof SerializeError && cause.helpId) || error.helpId\n\n  const handleReload = useCallback(() => {\n    window.location.reload()\n  }, [])\n\n  return (\n    <Card height=\"fill\" overflow=\"auto\" padding={4} sizing=\"border\" tone=\"critical\">\n      <Container>\n        <Heading as=\"h2\">Encountered an error while reading structure</Heading>\n\n        <Card marginTop={4} padding={4} radius={2} overflow=\"auto\" shadow={1} tone=\"inherit\">\n          {path.length > 0 && (\n            <Stack space={2}>\n              <Label>Structure path</Label>\n              <Code>\n                {/* TODO: it seems like the path is off by one and includes */}\n                {/* `root` twice  */}\n                {path.slice(1).map((segment, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <PathSegment key={`${segment}-${i}`}>{segment}</PathSegment>\n                ))}\n              </Code>\n            </Stack>\n          )}\n\n          <Stack marginTop={4} space={2}>\n            <Label>Error</Label>\n            <Code>{showStack ? formatStack(stack) : error.message}</Code>\n          </Stack>\n\n          {helpId && (\n            <Box marginTop={4}>\n              <Text>\n                <a href={generateHelpUrl(helpId)} rel=\"noopener noreferrer\" target=\"_blank\">\n                  View documentation\n                </a>\n              </Text>\n            </Box>\n          )}\n\n          <Box marginTop={4}>\n            <Button text=\"Reload\" icon={SyncIcon} tone=\"primary\" onClick={handleReload} />\n          </Box>\n        </Card>\n      </Container>\n    </Card>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport React from 'react'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {isRecord} from 'sanity'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title=\"Unknown pane type\" />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              Structure item of type <code>{type}</code> is not a known entity.\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              Structure item is missing required <code>type</code> property.\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {Observable, of, merge} from 'rxjs'\nimport {mapTo, delay} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<string> {\n  const thresholds = [\n    {ms: 300, message: 'Loading…'},\n    {ms: 5000, message: 'Still loading…'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(...thresholds.map(({ms, message}) => src.pipe(mapTo(message), delay(ms))))\n}\n","import {Box, CardTone, Flex, Spinner, Text, _raf2} from '@sanity/ui'\nimport React, {memo, useMemo, useState, useEffect} from 'react'\nimport {Observable} from 'rxjs'\nimport styled from 'styled-components'\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {getWaitMessages} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<string>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE = 'Loading…'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return DEFAULT_MESSAGE\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe === 'function') return undefined\n\n    const sub = resolvedMessage.subscribe(setCurrentMessage)\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <Spinner muted />\n\n      {(title || currentMessage) && (\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            {title || currentMessage}\n          </Text>\n        </Box>\n      )}\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'LoadingPane'\n","import React, {memo, lazy, Suspense} from 'react'\nimport {isEqual} from 'lodash'\nimport {PaneNode} from '../types'\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {UnknownPane} from './unknown'\nimport {LoadingPane} from './loading'\n\ninterface DeskToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined>\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document')),\n  documentList: lazy(() => import('./documentList')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const DeskToolPane = memo(\n  function DeskToolPane(props: DeskToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next},\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  },\n)\n","import React from 'react'\nimport {Box, CardTone} from '@sanity/ui'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport React, {memo, useEffect, useRef} from 'react'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentOperationEvent} from 'sanity'\nimport {usePaneRouter} from '../../components'\n\nfunction getOpErrorTitle(op: string): string {\n  if (op === 'delete') {\n    return `An error occurred while attempting to delete this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  if (op === 'unpublish') {\n    return `An error occurred while attempting to unpublish this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  return `An error occurred during ${op}`\n}\n\nfunction getOpSuccessTitle(op: string): string {\n  if (op === 'publish') {\n    return `The document was published`\n  }\n  if (op === 'unpublish') {\n    return `The document was unpublished. A draft has been created from the latest published version.`\n  }\n  if (op === 'discardChanges') {\n    return `All changes since last publish has now been discarded. The discarded draft can still be recovered from history`\n  }\n  if (op === 'delete') {\n    return `The document was successfully deleted`\n  }\n  return `Successfully performed ${op} on document`\n}\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType} = useDocumentPane()\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: getOpErrorTitle(event.op),\n        description: (\n          <details>\n            <summary>Details</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: getOpSuccessTitle(event.op),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast])\n\n  return null\n})\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useSettingsStore} from 'sanity'\n\n/**\n * @internal\n */\nexport function useDeskToolSetting<ValueType>(\n  namespace: string | null,\n  key: string,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const settingsStore = useSettingsStore()\n  const [value, setValue] = useState<ValueType | undefined>(defaultValue)\n\n  const deskToolSettings = useMemo(() => settingsStore.forNamespace('desk-tool'), [settingsStore])\n\n  const settings = useMemo(() => {\n    if (namespace) {\n      return deskToolSettings.forNamespace(namespace).forKey(key)\n    }\n\n    return deskToolSettings.forKey(key)\n  }, [deskToolSettings, namespace, key])\n\n  useEffect(() => {\n    const sub = settings.listen(defaultValue).subscribe({\n      next: setValue as any,\n    })\n\n    return () => sub?.unsubscribe()\n  }, [defaultValue, key, namespace, settings])\n\n  const set = useCallback(\n    (newValue: ValueType) => {\n      setValue(newValue)\n      settings.set(newValue as any)\n    },\n    [settings],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'Parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'Raw JSON'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {SanityDocumentLike} from '@sanity/types'\nimport HLRU from 'hashlru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = HLRU(1000)\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport React, {useCallback} from 'react'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder=\"Search\"\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {SanityDocument} from '@sanity/types'\nimport {Card, Code, Dialog, Flex, Tab, TabList, TabPanel} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport JSONInspector from '@rexxars/react-json-inspector'\nimport {DocTitle} from '../../../components'\nimport {useDeskToolSetting} from '../../../useDeskToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useDeskToolSetting(\n    'desk-tool',\n    `inspect-view-preferred-view-mode-${paneKey}`,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  return (\n    <Dialog\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <>\n            Inspecting{' '}\n            <em>\n              <DocTitle document={value} />\n            </em>\n          </>\n        ) : (\n          <em>No value</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      width={3}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card padding={3} shadow={1} style={{position: 'sticky', bottom: 0, zIndex: 3}}>\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={VIEW_MODE_PARSED.title}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={VIEW_MODE_RAW.title}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JSONInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import React, {useCallback} from 'react'\nimport {Button, Card, Container, Flex, Text} from '@sanity/ui'\nimport {ReadOnlyIcon} from '@sanity/icons'\nimport styled from 'styled-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentOperation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\ninterface DeletedDocumentBannerProps {\n  revisionId?: string | null\n}\n\nexport function DeletedDocumentBanner({revisionId}: DeletedDocumentBannerProps) {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n  const handleRestore = useCallback(() => {\n    if (revisionId) {\n      restore.execute(revisionId)\n      navigateIntent('edit', {id: documentId, type: documentType})\n    }\n  }, [documentId, documentType, navigateIntent, restore, revisionId])\n\n  return (\n    <Root data-testid=\"deleted-document-banner\" shadow={1} tone=\"transparent\">\n      <Container paddingX={4} paddingY={revisionId ? 2 : 3} sizing=\"border\" width={1}>\n        <Flex align=\"center\">\n          <Text size={1}>\n            <ReadOnlyIcon />\n          </Text>\n\n          <Flex align=\"center\" gap={2} flex={1} marginLeft={3}>\n            <Text size={1}>This document has been deleted.</Text>\n            {revisionId && (\n              <Button\n                fontSize={1}\n                padding={2}\n                mode=\"bleed\"\n                tone=\"primary\"\n                onClick={handleRestore}\n                text=\"Restore most recent version\"\n              />\n            )}\n          </Flex>\n        </Flex>\n      </Container>\n    </Root>\n  )\n}\n","import {Box, Button, Card, Container, Flex, Text} from '@sanity/ui'\nimport {WarningOutlineIcon, SyncIcon, CloseIcon} from '@sanity/icons'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {KeyedSegment, Reference} from '@sanity/types'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {concat, Observable, of} from 'rxjs'\nimport {useMemoObservable} from 'react-rx'\nimport {RouterPaneGroup} from '../../../types'\nimport {usePaneRouter} from '../../../components'\nimport {DocumentAvailability, useDocumentPreviewStore, getPublishedId} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\nconst TextOneLine = styled(Text)`\n  & > * {\n    overflow: hidden;\n    overflow: clip;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n`\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {draft: DocumentAvailability; published: DocumentAvailability}\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfo = useMemoObservable(\n    (): Observable<ParentReferenceInfo> => {\n      const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n      // short-circuit: this document pane is not a child reference pane\n      if (!parentId || !parentRefPathSegment || !parentRefPath) {\n        return of({loading: false})\n      }\n\n      const publishedId = getPublishedId(parentId)\n      const path = pathFromString(parentRefPathSegment)\n\n      // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n      const keyedSegmentIndex = path.findIndex(\n        (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n      )\n\n      return concat(\n        // emit a loading state instantly\n        of({loading: true}),\n        // then emit the values from watching the published ID's path\n        documentPreviewStore\n          .unstable_observePathsDocumentPair(\n            publishedId,\n            (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          )\n          .pipe(\n            // this debounce time is needed to prevent flashing banners due to\n            // the router state updating faster than the content-lake state. we\n            // debounce to wait for more emissions because the value pulled\n            // initially could be stale.\n            debounceTime(750),\n            map(\n              ({draft, published}): ParentReferenceInfo => ({\n                loading: false,\n                result: {\n                  availability: {\n                    draft: draft.availability,\n                    published: published.availability,\n                  },\n                  refValue: pathGet<Reference>(draft.snapshot || published.snapshot, parentRefPath)\n                    ?._ref,\n                },\n              }),\n            ),\n          ),\n      )\n    },\n    [documentPreviewStore, parentId, parentRefPath],\n    {loading: true},\n  )\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Root shadow={1} tone=\"caution\" data-testid=\"reference-changed-banner\">\n      <Container paddingX={4} paddingY={2} sizing=\"border\" width={1}>\n        <Flex align=\"center\">\n          <Text size={1}>\n            <WarningOutlineIcon />\n          </Text>\n\n          {referenceInfo.result?.refValue ? (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has changed since you opened it.\" size={1}>\n                  This reference has changed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  onClick={handleReloadReference}\n                  icon={SyncIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Reload reference\"\n                />\n              </Box>\n            </>\n          ) : (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has been removed since you opened it.\" size={1}>\n                  This reference has been removed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  as={BackLink}\n                  icon={CloseIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Close reference\"\n                />\n              </Box>\n            </>\n          )}\n        </Flex>\n      </Container>\n    </Root>\n  )\n})\n\nReferenceChangedBanner.displayName = 'ReferenceChangedBanner'\n","import React from 'react'\nimport {Box, Card, Container, Flex, Text} from '@sanity/ui'\nimport {ReadOnlyIcon} from '@sanity/icons'\nimport styled from 'styled-components'\nimport {useCurrentUser} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\ninterface PermissionCheckBannerProps {\n  granted: boolean\n  requiredPermission: string\n}\n\nexport function PermissionCheckBanner({granted, requiredPermission}: PermissionCheckBannerProps) {\n  const currentUser = useCurrentUser()\n  const plural = currentUser?.roles?.length !== 1\n\n  const roles = join(\n    currentUser?.roles?.map((r) => <code key={r.name}>{r.title}</code>) || [],\n    ', ',\n  )\n\n  if (granted) return null\n\n  return (\n    <Root data-testid=\"permission-check-banner\" shadow={1} tone=\"transparent\">\n      <Container paddingX={4} paddingY={3} sizing=\"border\" width={1}>\n        <Flex align=\"flex-start\">\n          <Text size={1}>\n            <ReadOnlyIcon />\n          </Text>\n\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              Your role{plural && 's'} {roles} {plural ? 'do' : 'does'} not have permissions to{' '}\n              {requiredPermission} this document.\n            </Text>\n          </Box>\n        </Flex>\n      </Container>\n    </Root>\n  )\n}\n\nfunction join<T, S>(array: Array<T>, sep: S): Array<T | S> | null {\n  return array.reduce((result: Array<T | S> | null, item: T | S) => {\n    if (result === null) {\n      return [item]\n    }\n\n    return result.concat([sep, item])\n  }, null)\n}\n","import {useEffect, useRef} from 'react'\nimport {ToastParams, useToast} from '@sanity/ui'\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  const wasEnabled = usePrevious(params.enabled)\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (!wasEnabled && params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    if (wasEnabled && !params.enabled) {\n      toast.push({\n        ...params,\n        // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n        duration: 0.01,\n      })\n    }\n  }, [params, toast, wasEnabled])\n}\n","/* eslint-disable no-nested-ternary */\n\nimport {Box, Container, Flex, Spinner, Text, focusFirstDescendant} from '@sanity/ui'\nimport React, {forwardRef, useEffect, useMemo, useRef, type Ref, useCallback, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Delay} from '../../../../components/Delay'\nimport {useConditionalToast} from './useConditionalToast'\nimport {\n  DocumentMutationEvent,\n  DocumentRebaseEvent,\n  FormBuilder,\n  PatchMsg,\n  PresenceOverlay,\n  createPatchChannel,\n  fromMutationPatches,\n  useDocumentPresence,\n  useDocumentStore,\n} from 'sanity'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: React.FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n  } = useDocumentPane()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const patchChannel = useMemo(() => createPatchChannel(), [])\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n\n  useConditionalToast({\n    id: `sync-lock-${documentId}`,\n    status: 'warning',\n    enabled: isLocked,\n    title: `Syncing document…`,\n    description: `Please hold tight while the document is synced. This usually happens right after the document has been published, and it shouldn't take more than a few seconds`,\n  })\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel])\n\n  const hasRev = Boolean(value?._rev)\n  useEffect(() => {\n    if (hasRev) {\n      // this is a workaround for an issue that caused the document pushed to withDocument to get\n      // stuck at the first initial value.\n      // This effect is triggered only when the document goes from not having a revision, to getting one\n      // so it will kick in as soon as the document is received from the backend\n      patchChannel.publish({\n        type: 'mutation',\n        patches: [],\n        snapshot: value,\n      })\n    }\n    // React to changes in hasRev only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (ready && !formState?.focusPath.length && formRef) {\n      focusFirstDescendant(formRef)\n    }\n    // We only want to run it on first mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: React.ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={setRef}>\n          {ready ? (\n            formState === null ? (\n              <Box padding={2}>\n                <Text>This form is hidden</Text>\n              </Box>\n            ) : (\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focusPath={formState.focusPath}\n                changed={formState.changed}\n                focused={formState.focused}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                presence={presence}\n                readOnly={formState.readOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={formState.value}\n              />\n            )\n          ) : (\n            <Delay ms={300}>\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    Loading document\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import React, {useCallback} from 'react'\nimport {Tab, TabList} from '@sanity/ui'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {usePaneRouter} from '../../../../components'\n\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          key={view.id}\n          label={<>{view.title}</>}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : view.id ?? null}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: React.ComponentType | React.ReactNode\n  id: string\n  isActive: boolean\n  label: React.ReactNode\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {isActive, tabPanelId, viewId, ...rest} = props\n  const {ready} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready}\n      fontSize={1}\n      selected={isActive}\n      onClick={handleClick}\n    />\n  )\n}\n","import React, {ReactElement} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport function DocumentHeaderTitle(): ReactElement {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState === 'connected'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState !== 'connected') {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return <>New {schemaType?.title || schemaType?.name}</>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Button, Flex, Text, Tooltip} from '@sanity/ui'\nimport React, {createElement, memo, forwardRef, useMemo} from 'react'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {useDeskTool} from '../../../../useDeskTool'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useFieldActions, useTimelineSelector} from 'sanity'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DocumentPanelHeaderProps {}\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: React.ForwardedRef<HTMLDivElement>,\n  ) {\n    const {\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      menuItems,\n      menuItemGroups,\n      schemaType,\n      timelineStore,\n      ready,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useDeskTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    // Subscribe to external timeline state changes\n    const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button) do the same thing and shouldn't be shown at the same time)\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !features.backButton\n\n    return (\n      <PaneHeader\n        ref={ref}\n        loading={!ready}\n        title={<DocumentHeaderTitle />}\n        tabs={showTabs && <DocumentHeaderTabs />}\n        tabIndex={tabIndex}\n        backButton={\n          features.backButton &&\n          index > 0 && (\n            <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" padding={2} />\n          )\n        }\n        subActions={<TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />}\n        actions={\n          <Flex align=\"center\" gap={1}>\n            {unstable_languageFilter.length > 0 && (\n              <>\n                {unstable_languageFilter.map((languageFilterComponent, idx) => {\n                  return createElement(languageFilterComponent, {\n                    // eslint-disable-next-line react/no-array-index-key\n                    key: `language-filter-${idx}`,\n                    schemaType,\n                  })\n                })}\n              </>\n            )}\n\n            {menuButtonNodes.map((item) => (\n              <PaneHeaderActionButton key={item.key} node={item} />\n            ))}\n\n            <PaneContextMenuButton nodes={contextMenuNodes} key=\"context-menu\" />\n\n            {showSplitPaneButton && (\n              <Tooltip\n                content={\n                  <Text size={1} style={{whiteSpace: 'nowrap'}}>\n                    Split pane right\n                  </Text>\n                }\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Split pane right\"\n                  icon={SplitVerticalIcon}\n                  key=\"split-pane-button\"\n                  mode=\"bleed\"\n                  onClick={onPaneSplit}\n                />\n              </Tooltip>\n            )}\n\n            {showSplitPaneCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                onClick={onPaneClose}\n                title=\"Close split pane\"\n              />\n            )}\n\n            {showPaneGroupCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                title=\"Close pane group\"\n                as={BackLink}\n              />\n            )}\n          </Flex>\n        }\n      />\n    )\n  }),\n)\n","import {\n  BoundaryElementProvider,\n  Flex,\n  PortalProvider,\n  usePortal,\n  useElementRect,\n  Box,\n} from '@sanity/ui'\nimport React, {createElement, useEffect, useMemo, useRef, useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {PaneContent, usePane, usePaneLayout} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {DeletedDocumentBanner} from './DeletedDocumentBanner'\nimport {ReferenceChangedBanner} from './ReferenceChangedBanner'\nimport {PermissionCheckBanner} from './PermissionCheckBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelHeader} from './header'\nimport {ScrollContainer, useTimelineSelector, VirtualizerScrollInstanceProvider} from 'sanity'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  rootElement: HTMLDivElement | null\n  isInspectOpen: boolean\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {footerHeight, isInspectOpen, rootElement, setDocumentPanelPortalElement} = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n    isDeleting,\n    isDeleted,\n    timelineStore,\n    formState,\n  } = useDocumentPane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useDeskTool()\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n  const headerRect = useElementRect(headerElement)\n  const portalRef = useRef<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const selectedGroup = useMemo(() => {\n    if (!formState) return undefined\n\n    return formState.groups.find((group) => group.selected)\n  }, [formState])\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? portalRef.current || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerRect?.height || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerRect])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(\n    () =>\n      activeView.type === 'component' &&\n      activeView.component &&\n      createElement(activeView.component, {\n        document: {\n          draft: editState?.draft || null,\n          displayed: displayed || value,\n          historical: displayed,\n          published: editState?.published || null,\n        },\n        documentId,\n        options: activeView.options,\n        schemaType,\n      }),\n    [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value],\n  )\n\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n\n  return (\n    <>\n      <DocumentPanelHeader ref={setHeaderElement} />\n\n      <PaneContent>\n        <Flex height=\"fill\">\n          {(features.resizablePanes || !showInspector) && (\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider\n                element={portalElement}\n                __unstable_elements={{documentScrollElement: documentScrollElement}}\n              >\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    {activeView.type === 'form' && !isPermissionsLoading && ready && (\n                      <>\n                        <PermissionCheckBanner\n                          granted={Boolean(permissions?.granted)}\n                          requiredPermission={requiredPermission}\n                        />\n                        {!isDeleting && isDeleted && (\n                          <DeletedDocumentBanner revisionId={lastNonDeletedRevId} />\n                        )}\n                        <ReferenceChangedBanner />\n                      </>\n                    )}\n\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                      // Note: this is to make sure the scroll container is changed\n                      // when the selected group changes which causes virtualization\n                      // to re-render and re-measure the scroll container\n                      key={`${selectedGroup?.name}-${documentId}}`}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        key={documentId + (ready ? '_ready' : '_pending')}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={portalRef} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n          )}\n\n          {showInspector && (\n            <BoundaryElementProvider element={rootElement}>\n              <DocumentInspectorPanel\n                documentId={documentId}\n                documentType={schemaType.name}\n                flex={1}\n              />\n            </BoundaryElementProvider>\n          )}\n        </Flex>\n      </PaneContent>\n    </>\n  )\n}\n","import {DialogProps, Placement} from '@sanity/ui'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Popover,\n  Text,\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionConfirmDialogProps} from 'sanity'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onCancel()\n  }, [isTopLayer, onCancel])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return (\n    <Flex direction=\"column\" ref={setElement} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || 'Cancel'}\n          />\n          <Button\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || 'Confirm'}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {Box, Dialog} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\nimport {DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {Popover, useClickOutside, useGlobalKeyDown, useLayer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionPopoverDialogProps} from 'sanity'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onClose()\n  }, [isTopLayer, onClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return <div ref={setElement}>{content}</div>\n}\n","import {Box, Dialog, usePortal, PortalProvider} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\nimport {DocumentActionDialogProps} from 'sanity'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: React.ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={2}\n    >\n      <Box padding={4}>\n        {unknownModal.content || (\n          <>\n            Unexpected modal type (<code>{unknownModal.type}</code>)\n          </>\n        )}\n      </Box>\n    </Dialog>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Flex,\n  Menu,\n  MenuButton,\n  MenuItem,\n  PopoverProps,\n  Text,\n  Tooltip,\n} from '@sanity/ui'\nimport React, {\n  createElement,\n  isValidElement,\n  useCallback,\n  useRef,\n  useState,\n  useMemo,\n  useId,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription, Hotkeys, LegacyLayerProvider} from 'sanity'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const [actionIndex, setActionIndex] = useState(-1)\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const currentAction = actionStates[actionIndex]\n\n  return (\n    <>\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <Button\n            data-testid=\"action-menu-button\"\n            aria-label=\"Open document actions\"\n            disabled={disabled}\n            icon={ChevronDownIcon}\n            mode=\"ghost\"\n            ref={buttonRef}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n    </>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nfunction ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const tooltipContent = actionState.title && (\n    <Box padding={2}>\n      <Text size={1}>{actionState.title}</Text>\n    </Box>\n  )\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      onClick={handleClick}\n      padding={0}\n      tone={actionState.tone}\n    >\n      <Tooltip\n        content={tooltipContent}\n        disabled={!tooltipContent}\n        fallbackPlacements={['left', 'bottom']}\n        placement=\"top\"\n        portal\n      >\n        <Flex align=\"center\" paddingX={3}>\n          <Flex flex={1} paddingY={3}>\n            {actionState.icon && (\n              <Box marginRight={3}>\n                <Text>\n                  {isValidElement(actionState.icon) && actionState.icon}\n                  {isValidElementType(actionState.icon) && createElement(actionState.icon)}\n                </Text>\n              </Box>\n            )}\n\n            <Text>{actionState.label}</Text>\n          </Flex>\n\n          {actionState.shortcut && (\n            <Box marginLeft={3}>\n              <Hotkeys\n                keys={String(actionState.shortcut)\n                  .split('+')\n                  .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))}\n              />\n            </Box>\n          )}\n        </Flex>\n      </Tooltip>\n    </MenuItem>\n  )\n}\n","import {Box, Flex, Tooltip, Stack, Button, LayerProvider, Text} from '@sanity/ui'\nimport React, {memo, useMemo, useState} from 'react'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription, Hotkeys, useTimelineSelector} from 'sanity'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nfunction DocumentStatusBarActionsInner(props: DocumentStatusBarActionsInnerProps) {\n  const {disabled, showMenu, states} = props\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex padding={2} style={{maxWidth: 300}} align=\"center\">\n        <Text size={1}>{firstActionState.title}</Text>\n        {firstActionState.shortcut && (\n          <Box marginLeft={firstActionState.title ? 2 : 0}>\n            <Hotkeys\n              keys={String(firstActionState.shortcut)\n                .split('+')\n                .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n            />\n          </Box>\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  return (\n    <Flex>\n      {firstActionState && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} portal placement=\"top\">\n            <Stack flex={1}>\n              <Button\n                data-testid={`action-${firstActionState.label}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n\n      {showMenu && menuActionStates.length > 0 && (\n        <Box marginLeft={1}>\n          <ActionMenuButton actionStates={menuActionStates} disabled={disabled} />\n        </Box>\n      )}\n\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n}\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  if (!actions || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      // @ts-expect-error TODO: fix the document actions\n      actionProps={editState}\n    >\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected'}\n          // isMenuOpen={isMenuOpen}\n          // onMenuOpen={handleMenuOpen}\n          // onMenuClose={handleMenuClose}\n          showMenu={actions.length > 1}\n          states={states}\n          // Use document ID as key to make sure that the actions state is reset when the document changes\n          key={documentId}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {connectionState, editState, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n  const revision = revTime?.id || ''\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n  const historyActions = useMemo(() => [HistoryRestoreAction], [])\n\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps as any}>\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected' || Boolean(disabled)}\n          showMenu={false}\n          states={states}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n","import {Badge, BadgeTone, Box, Inline, Text, Tooltip} from '@sanity/ui'\nimport React from 'react'\nimport {RenderBadgeCollectionState} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadgeDescription} from 'sanity'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nfunction DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={\n            badge.title && (\n              <Box padding={2}>\n                <Text size={1}>{badge.title}</Text>\n              </Box>\n            )\n          }\n          disabled={!badge.title}\n          key={String(index)}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n}\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState as any}>\n      {({states}) => <DocumentBadgesInner states={states} />}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {Box, Button, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {PlayIcon, PublishIcon} from '@sanity/icons'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useTimeAgo} from 'sanity'\n\ninterface PublishStatusProps {\n  collapsed?: boolean\n  disabled: boolean\n  lastPublished?: string\n  lastUpdated?: string\n  liveEdit: boolean\n}\n\nconst Root = styled(Flex)`\n  cursor: default;\n`\n\nexport function PublishStatus(props: PublishStatusProps) {\n  const {collapsed, disabled, lastPublished, lastUpdated, liveEdit} = props\n\n  // Label with abbreviations and suffix\n  const lastPublishedTimeAgo = useTimeAgo(lastPublished || '', {minimal: true, agoSuffix: true})\n  // Label with abbreviation and no suffix\n  const lastPublishedTime = useTimeAgo(lastPublished || '', {minimal: true})\n\n  // Label with abbreviations and suffix\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n  // Label with abbreviation and no suffix\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n\n  // Accessible labels without abbreviations or suffixes\n  const a11yUpdatedAgo = useTimeAgo(lastUpdated || '', {minimal: false, agoSuffix: true})\n  const a11yPublishedAgo = useTimeAgo(lastPublished || '', {minimal: false, agoSuffix: true})\n  const a11yLabel = liveEdit\n    ? `Last updated ${a11yUpdatedAgo}`\n    : `Last published ${a11yPublishedAgo}`\n\n  return (\n    <Root align=\"center\" data-ui=\"SessionLayout\" sizing=\"border\">\n      <Tooltip\n        placement=\"top\"\n        portal\n        content={\n          <Stack padding={3} space={3}>\n            <Text size={1}>\n              {liveEdit ? (\n                <>\n                  Last updated{' '}\n                  <abbr aria-label={lastUpdated ? a11yUpdatedAgo : a11yPublishedAgo}>\n                    {lastUpdated ? lastUpdatedTimeAgo : lastPublishedTimeAgo}\n                  </abbr>\n                </>\n              ) : (\n                <>\n                  Last published <abbr aria-label={a11yPublishedAgo}>{lastPublishedTimeAgo}</abbr>\n                </>\n              )}\n            </Text>\n          </Stack>\n        }\n      >\n        <Button\n          mode=\"bleed\"\n          tone={liveEdit ? 'critical' : 'positive'}\n          tabIndex={-1}\n          disabled={disabled}\n          aria-label={a11yLabel}\n        >\n          <Flex align=\"center\">\n            <Box marginRight={collapsed ? 0 : 3}>\n              <Text size={2} aria-hidden=\"true\">\n                {liveEdit ? <PlayIcon /> : <PublishIcon />}\n              </Text>\n            </Box>\n            {!collapsed && (\n              <Text size={1} weight=\"medium\">\n                {liveEdit ? (\n                  <abbr aria-label={a11yLabel}>\n                    {lastUpdated ? lastUpdatedTime : lastPublishedTime}\n                  </abbr>\n                ) : (\n                  <abbr aria-label={a11yLabel}>{lastPublishedTime}</abbr>\n                )}\n              </Text>\n            )}\n          </Flex>\n        </Button>\n      </Tooltip>\n    </Root>\n  )\n}\n","import React, {ComponentProps} from 'react'\nimport {motion} from 'framer-motion'\nimport styled, {keyframes} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\nconst Edit = (props: MotionPathProps) => (\n  <motion.path d=\"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\nconst edit = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  changes: {\n    pathLength: 1,\n    transition: {\n      duration: 0.4,\n      delay: 0.5,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n        <Edit variants={edit} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import React, {useMemo} from 'react'\nimport {Box, Button, ButtonProps, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\nimport {useTimeAgo} from 'sanity'\n\ninterface ReviewChangesButtonProps extends React.HTMLProps<HTMLButtonElement> {\n  status?: 'changes' | 'saved' | 'syncing'\n  lastUpdated?: string\n  collapsed?: boolean\n}\n\nconst ReviewButton = React.forwardRef(function ReviewButton(\n  props: ReviewChangesButtonProps & ButtonProps,\n  ref: React.ForwardedRef<HTMLButtonElement>,\n) {\n  const {collapsed, status, lastUpdated, ...rest} = props\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n  const a11yUpdatedAgo = useTimeAgo(lastUpdated || '', {minimal: false, agoSuffix: true})\n\n  const buttonProps: ButtonProps = useMemo(() => {\n    if (status === 'syncing') {\n      return {\n        text: 'Saving...',\n        tone: undefined,\n      }\n    }\n    if (status === 'changes') {\n      return {\n        text: lastUpdatedTime,\n        tone: 'caution',\n      }\n    }\n    if (status === 'saved') {\n      return {\n        text: 'Saved!',\n        tone: 'positive',\n      }\n    }\n\n    return {}\n  }, [status, lastUpdatedTime])\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <Tooltip\n      placement=\"top\"\n      portal\n      disabled={status !== 'changes'}\n      content={\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            Review changes\n          </Text>\n          <Text size={1} muted>\n            Changes saved <abbr aria-label={a11yUpdatedAgo}>{lastUpdatedTimeAgo}</abbr>\n          </Text>\n        </Stack>\n      }\n    >\n      <Button\n        mode=\"bleed\"\n        justify=\"flex-start\"\n        tone={buttonProps?.tone}\n        {...rest}\n        data-testid=\"review-changes-button\"\n        ref={ref}\n        aria-label=\"Review changes\"\n      >\n        <Flex align=\"center\">\n          <Box marginRight={collapsed ? 0 : 3} aria-hidden=\"true\">\n            <Text>\n              <AnimatedStatusIcon status={status} />\n            </Text>\n          </Box>\n          {!collapsed && (\n            <Text size={1} weight=\"medium\">\n              {buttonProps?.text}\n            </Text>\n          )}\n        </Flex>\n      </Button>\n    </Tooltip>\n  )\n})\n\nexport const ReviewChangesButton = React.memo(ReviewButton)\n","import {Box, Flex, useElementRect} from '@sanity/ui'\nimport React, {useEffect, useMemo, useState, memo, useLayoutEffect} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadges} from './DocumentBadges'\nimport {PublishStatus} from './PublishStatus'\nimport {ReviewChangesButton} from './ReviewChangesButton'\nimport {useSyncState, useTimelineSelector} from 'sanity'\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport const DocumentSparkline = memo(function DocumentSparkline() {\n  const {\n    changesOpen,\n    documentId,\n    documentType,\n    editState,\n    onHistoryClose,\n    onHistoryOpen,\n    timelineStore,\n    value,\n  } = useDocumentPane()\n  const syncState = useSyncState(documentId, documentType)\n\n  const lastUpdated = value?._updatedAt\n  const lastPublished = editState?.published?._updatedAt\n  const liveEdit = Boolean(editState?.liveEdit)\n  const published = Boolean(editState?.published)\n  const changed = Boolean(editState?.draft)\n\n  const [rootFlexElement, setRootFlexElement] = useState<HTMLDivElement | null>(null)\n  const rootFlexRect = useElementRect(rootFlexElement)\n  const collapsed = !rootFlexRect || rootFlexRect?.width < 300\n\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n\n  // Subscribe to TimelineController changes and store internal state.\n  const showingRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  const reviewButton = useMemo(\n    () => (\n      <ReviewChangesButton\n        lastUpdated={lastUpdated}\n        status={status || (changed ? 'changes' : undefined)}\n        onClick={changesOpen ? onHistoryClose : onHistoryOpen}\n        disabled={showingRevision}\n        selected={changesOpen}\n        collapsed={collapsed}\n      />\n    ),\n    [\n      changed,\n      changesOpen,\n      onHistoryClose,\n      onHistoryOpen,\n      lastUpdated,\n      showingRevision,\n      status,\n      collapsed,\n    ],\n  )\n\n  const publishStatus = useMemo(\n    () =>\n      (liveEdit || published) && (\n        <Box marginRight={1}>\n          <PublishStatus\n            disabled={showingRevision}\n            lastPublished={lastPublished}\n            lastUpdated={lastUpdated}\n            liveEdit={liveEdit}\n            collapsed={collapsed}\n          />\n        </Box>\n      ),\n    [collapsed, lastPublished, lastUpdated, liveEdit, published, showingRevision],\n  )\n\n  return (\n    <Flex align=\"center\" data-ui=\"DocumentSparkline\" ref={setRootFlexElement}>\n      {publishStatus}\n\n      <Flex align=\"center\" flex={1}>\n        {reviewButton}\n        {!collapsed && (\n          <Box marginLeft={3}>\n            <DocumentBadges />\n          </Box>\n        )}\n      </Flex>\n    </Flex>\n  )\n})\n","import React, {useMemo} from 'react'\nimport styled from 'styled-components'\nimport {Box, Flex} from '@sanity/ui'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentSparkline} from './sparkline/DocumentSparkline'\nimport {useTimelineSelector} from 'sanity'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: React.Ref<HTMLDivElement>\n}\n\nconst DocumentActionsBox = styled(Box)`\n  min-width: 10em;\n  max-width: 16em;\n`\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef} = props\n  const {badges, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const showingRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n\n  return useMemo(\n    () => (\n      <Box paddingLeft={2} paddingRight={[2, 3]} paddingY={2}>\n        <Flex align=\"center\">\n          <Box flex={[1, 2]}>{badges && <DocumentSparkline />}</Box>\n\n          <DocumentActionsBox flex={1} marginLeft={[1, 3]} ref={actionsBoxRef}>\n            {showingRevision ? <HistoryStatusBarActions /> : <DocumentStatusBarActions />}\n          </DocumentActionsBox>\n        </Flex>\n      </Box>\n    ),\n    [actionsBoxRef, badges, showingRevision],\n  )\n}\n","import isHotkey from 'is-hotkey'\nimport React, {ElementType, createElement, useCallback, useMemo, useState} from 'react'\nimport {ActionStateDialog} from '../statusBar'\nimport {RenderActionCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentActionDescription, DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: React.Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nfunction KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return createElement(\n    as,\n    {\n      id,\n      onKeyDown: handleKeyDown,\n      tabIndex: -1,\n      ...rest,\n      ref: rootRef,\n    },\n    [\n      children,\n      activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      ),\n    ],\n  )\n}\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: React.Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = React.memo(\n  (props: DocumentActionShortcutsProps & Omit<React.HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {({states}) => (\n          <KeyboardShortcutResponder\n            {...rest}\n            activeIndex={activeIndex}\n            actionsBoxElement={actionsBoxElement}\n            as={as}\n            onActionStart={onActionStart}\n            states={states}\n          >\n            {children}\n          </KeyboardShortcutResponder>\n        )}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'DocumentActionShortcuts'\n","import {\n  Card,\n  Code,\n  DialogProvider,\n  DialogProviderProps,\n  Flex,\n  PortalProvider,\n  Stack,\n  Text,\n  useElementRect,\n} from '@sanity/ui'\nimport React, {memo, useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {Path} from '@sanity/types'\nimport {DocumentPaneNode} from '../../types'\nimport {Pane, PaneFooter, usePaneRouter} from '../../components'\nimport {usePaneLayout} from '../../components/pane/usePaneLayout'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../constants'\nimport {DocumentOperationResults} from './DocumentOperationResults'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {DocumentPanel} from './documentPanel'\nimport {DocumentActionShortcuts} from './keyboardShortcuts'\nimport {DocumentStatusBar} from './statusBar'\nimport {DocumentPaneProviderProps} from './types'\nimport {useDocumentPane} from './useDocumentPane'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from './constants'\nimport {\n  ChangeConnectorRoot,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  isDev,\n  useDocumentType,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useZIndex,\n} from 'sanity'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <DocumentPaneInner {...props} />\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n              ? 'selected'\n              : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  if (options.type === '*' && !isLoaded) {\n    return <LoadingPane flex={2.5} minWidth={320} paneKey={paneKey} title=\"Loading document…\" />\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={<>The document was not found</>}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            The document type is not defined, and a document with the <code>{options.id}</code>{' '}\n            identifier could not be found.\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProvider\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <InnerDocumentPane />\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProvider>\n  )\n}\n\nfunction usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n\nfunction InnerDocumentPane() {\n  const {\n    changesOpen,\n    documentType,\n    inspector,\n    inspectOpen,\n    onFocus,\n    onPathOpen,\n    onHistoryOpen,\n    onKeyUp,\n    paneKey,\n    schemaType,\n    value,\n  } = useDocumentPane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const zOffsets = useZIndex()\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n  const footerRect = useElementRect(footerElement)\n  const footerH = footerRect?.height\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  if (!schemaType) {\n    return (\n      <ErrorPane\n        currentMinWidth={currentMinWidth}\n        flex={2.5}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        title={\n          <>\n            Unknown document type: <code>{documentType}</code>\n          </>\n        }\n        tone=\"caution\"\n      >\n        <Stack space={4}>\n          {documentType && (\n            <Text as=\"p\">\n              This document has the schema type <code>{documentType}</code>, which is not defined as\n              a type in the local content studio schema.\n            </Text>\n          )}\n\n          {!documentType && (\n            <Text as=\"p\">\n              This document does not exist, and no schema type was specified for it.\n            </Text>\n          )}\n\n          {isDev && value && (\n            <>\n              <Text as=\"p\">Here is the JSON representation of the document:</Text>\n              <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n                <Code language=\"json\" size={[1, 1, 2]}>\n                  {JSON.stringify(value, null, 2)}\n                </Code>\n              </Card>\n            </>\n          )}\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentActionShortcuts\n      actionsBoxElement={actionsBoxElement}\n      as={Pane}\n      currentMinWidth={currentMinWidth}\n      data-testid=\"document-pane\"\n      flex={2.5}\n      id={paneKey}\n      minWidth={minWidth}\n      onKeyUp={onKeyUp}\n      rootRef={setRootElement}\n    >\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n          <StyledChangeConnectorRoot\n            data-testid=\"change-connector-root\"\n            isReviewChangesOpen={changesOpen}\n            onOpenReviewChanges={onHistoryOpen}\n            onSetFocus={onConnectorSetFocus}\n          >\n            <DocumentPanel\n              footerHeight={footerH || null}\n              isInspectOpen={inspectOpen}\n              rootElement={rootElement}\n              setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n            />\n          </StyledChangeConnectorRoot>\n        </Flex>\n      </DialogProvider>\n\n      {/* These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane. */}\n      {/* The portal element comes from `DocumentPanel`. */}\n      <PortalProvider\n        __unstable_elements={{[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}}\n      >\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <PaneFooter ref={setFooterElement}>\n            <DocumentStatusBar actionsBoxRef={setActionsBoxElement} />\n          </PaneFooter>\n        </DialogProvider>\n      </PortalProvider>\n\n      <DocumentOperationResults />\n    </DocumentActionShortcuts>\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Stack, Text} from '@sanity/ui'\nimport React from 'react'\n\nexport function NoDocumentTypesScreen() {\n  return (\n    <Card height=\"fill\">\n      <Flex align=\"center\" height=\"fill\" justify=\"center\" padding={4} sizing=\"border\">\n        <Container width={0}>\n          <Card padding={4} radius={2} shadow={1} tone=\"caution\">\n            <Flex>\n              <Box>\n                <Text size={1}>\n                  <WarningOutlineIcon />\n                </Text>\n              </Box>\n              <Stack flex={1} marginLeft={3} space={3}>\n                <Text as=\"h1\" size={1} weight=\"bold\">\n                  No document types\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  Please define at least one document type in your schema.\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  <a\n                    href=\"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Learn how to add a document type &rarr;\n                  </a>\n                </Text>\n              </Stack>\n            </Flex>\n          </Card>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import React, {useEffect} from 'react'\nimport {ObjectSchemaType} from '@sanity/types'\nimport {Panes} from '../../structureResolvers'\nimport {useDeskTool} from '../../useDeskTool'\nimport {LOADING_PANE} from '../../constants'\nimport {DocumentPaneNode} from '../../types'\nimport {useEditState, useSchema, unstable_useValuePreview as useValuePreview} from 'sanity'\n\ninterface DeskTitleProps {\n  resolvedPanes: Panes['resolvedPanes']\n}\n\nconst DocumentTitle = (props: {documentId: string; documentType: string}) => {\n  const {documentId, documentType} = props\n  const editState = useEditState(documentId, documentType)\n  const schema = useSchema()\n  const isNewDocument = !editState?.published && !editState?.draft\n  const documentValue = editState?.draft || editState?.published\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const {value, isLoading: previewValueIsLoading} = useValuePreview({\n    enabled: true,\n    schemaType,\n    value: documentValue,\n  })\n\n  const documentTitle = isNewDocument\n    ? `New ${schemaType?.title || schemaType?.name}`\n    : value?.title || 'Untitled'\n\n  const settled = editState.ready && !previewValueIsLoading\n  const newTitle = useConstructDocumentTitle(documentTitle)\n  useEffect(() => {\n    if (!settled) return\n    // Set the title as the document title\n    document.title = newTitle\n  }, [documentTitle, settled, newTitle])\n\n  return null\n}\n\nconst PassthroughTitle = (props: {title?: string}) => {\n  const {title} = props\n  const newTitle = useConstructDocumentTitle(title)\n  useEffect(() => {\n    // Set the title as the document title\n    document.title = newTitle\n  }, [newTitle, title])\n  return null\n}\n\nexport const DeskTitle = (props: DeskTitleProps) => {\n  const {resolvedPanes} = props\n\n  if (!resolvedPanes?.length) return null\n\n  const lastPane = resolvedPanes[resolvedPanes.length - 1]\n\n  // If the last pane is loading, display the desk tool title only\n  if (isLoadingPane(lastPane)) {\n    return <PassthroughTitle />\n  }\n\n  // If the last pane is a document\n  if (isDocumentPane(lastPane)) {\n    // Passthrough the document pane's title, which may be defined in structure builder\n    if (lastPane?.title) {\n      return <PassthroughTitle title={lastPane.title} />\n    }\n\n    // Otherwise, display a `document.title` containing the resolved Sanity document title\n    return <DocumentTitle documentId={lastPane.options.id} documentType={lastPane.options.type} />\n  }\n\n  // Otherwise, display the last pane's title (if present)\n  return <PassthroughTitle title={lastPane?.title} />\n}\n\n/**\n * Construct a pipe delimited title containing `activeTitle` (if applicable) and the base desk title.\n *\n * @param activeTitle - Title of the first segment\n *\n * @returns A pipe delimited title in the format `${activeTitle} | %BASE_DESK_TITLE%`\n * or simply `%BASE_DESK_TITLE` if `activeTitle` is undefined.\n */\nfunction useConstructDocumentTitle(activeTitle?: string) {\n  const deskToolBaseTitle = useDeskTool().structureContext.title\n  return [activeTitle, deskToolBaseTitle].filter((title) => title).join(' | ')\n}\n\n// Type guards\nfunction isDocumentPane(pane: Panes['resolvedPanes'][number]): pane is DocumentPaneNode {\n  return pane !== LOADING_PANE && pane.type === 'document'\n}\n\nfunction isLoadingPane(pane: Panes['resolvedPanes'][number]): pane is typeof LOADING_PANE {\n  return pane === LOADING_PANE\n}\n","import {PortalProvider, useTheme, useToast} from '@sanity/ui'\nimport React, {memo, Fragment, useState, useEffect, useCallback} from 'react'\nimport styled from 'styled-components'\nimport isHotkey from 'is-hotkey'\nimport {LOADING_PANE} from '../../constants'\nimport {LoadingPane, DeskToolPane} from '../../panes'\nimport {useResolvedPanes} from '../../structureResolvers'\nimport {PaneNode} from '../../types'\nimport {PaneLayout} from '../pane'\nimport {useDeskTool} from '../../useDeskTool'\nimport {NoDocumentTypesScreen} from './NoDocumentTypesScreen'\nimport {DeskTitle} from './DeskTitle'\nimport {useSchema, _isCustomDocumentTypeDefinition} from 'sanity'\nimport {useRouterState} from 'sanity/router'\n\ninterface DeskToolProps {\n  onPaneChange: (panes: Array<PaneNode | typeof LOADING_PANE>) => void\n}\n\nconst StyledPaneLayout = styled(PaneLayout)`\n  min-height: 100%;\n  min-width: 320px;\n`\n\nconst isSaveHotkey = isHotkey('mod+s')\n\n/**\n * @internal\n */\nexport const DeskTool = memo(function DeskTool({onPaneChange}: DeskToolProps) {\n  const {push: pushToast} = useToast()\n  const schema = useSchema()\n  const {layoutCollapsed, setLayoutCollapsed} = useDeskTool()\n  const {paneDataItems, resolvedPanes} = useResolvedPanes()\n  // Intent resolving is processed by the sibling `<IntentResolver />` but it doesn't have a UI for indicating progress.\n  // We handle that here, so if there are only 1 pane (the root structure), and there's an intent state in the router, we need to show a placeholder LoadingPane until\n  // the structure is resolved and we know what panes to load/display\n  const isResolvingIntent = useRouterState(\n    useCallback((routerState) => typeof routerState.intent === 'string', []),\n  )\n  const {\n    sanity: {media},\n  } = useTheme()\n\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n\n  const handleRootCollapse = useCallback(() => setLayoutCollapsed(true), [setLayoutCollapsed])\n  const handleRootExpand = useCallback(() => setLayoutCollapsed(false), [setLayoutCollapsed])\n\n  useEffect(() => {\n    // we check for length before emitting here to skip the initial empty array\n    // state from the `useResolvedPanes` hook. there should always be a root\n    // pane emitted on subsequent emissions\n    if (resolvedPanes.length) {\n      onPaneChange(resolvedPanes)\n    }\n  }, [onPaneChange, resolvedPanes])\n\n  useEffect(() => {\n    const handleGlobalKeyDown = (event: KeyboardEvent) => {\n      // Prevent `Cmd+S`\n      if (isSaveHotkey(event)) {\n        event.preventDefault()\n\n        pushToast({\n          closable: true,\n          id: 'auto-save-message',\n          status: 'info',\n          title: 'Your work is automatically saved!',\n          duration: 4000,\n        })\n      }\n    }\n\n    window.addEventListener('keydown', handleGlobalKeyDown)\n    return () => window.removeEventListener('keydown', handleGlobalKeyDown)\n  }, [pushToast])\n\n  const hasDefinedDocumentTypes = schema._original?.types.some(_isCustomDocumentTypeDefinition)\n\n  if (!hasDefinedDocumentTypes) {\n    return <NoDocumentTypesScreen />\n  }\n\n  return (\n    <PortalProvider element={portalElement || null}>\n      <StyledPaneLayout\n        flex={1}\n        height={layoutCollapsed ? undefined : 'fill'}\n        minWidth={media[1]}\n        onCollapse={handleRootCollapse}\n        onExpand={handleRootExpand}\n      >\n        {paneDataItems.map(\n          ({\n            active,\n            childItemId,\n            groupIndex,\n            itemId,\n            key: paneKey,\n            pane,\n            index: paneIndex,\n            params: paneParams,\n            path,\n            payload,\n            siblingIndex,\n            selected,\n          }) => (\n            <Fragment key={`${pane === LOADING_PANE ? 'loading' : pane.type}-${paneIndex}`}>\n              {pane === LOADING_PANE ? (\n                <LoadingPane paneKey={paneKey} path={path} selected={selected} />\n              ) : (\n                <DeskToolPane\n                  active={active}\n                  groupIndex={groupIndex}\n                  index={paneIndex}\n                  pane={pane}\n                  childItemId={childItemId}\n                  itemId={itemId}\n                  paneKey={paneKey}\n                  params={paneParams}\n                  payload={payload}\n                  path={path}\n                  selected={selected}\n                  siblingIndex={siblingIndex}\n                />\n              )}\n            </Fragment>\n          ),\n        )}\n        {/* If there's just 1 pane (the root), or less, and we're resolving an intent then it's necessary to show */}\n        {/* a loading indicator as the intent resolving is async, could take a while and can also be interrupted/redirected */}\n        {paneDataItems.length <= 1 && isResolvingIntent && (\n          <LoadingPane paneKey=\"intent-resolver\" />\n        )}\n      </StyledPaneLayout>\n      <DeskTitle resolvedPanes={resolvedPanes} />\n      <div data-portal=\"\" ref={setPortalElement} />\n    </PortalProvider>\n  )\n})\n","import React, {useEffect, useState} from 'react'\nimport {ErrorBoundary} from '@sanity/ui'\nimport {DeskToolOptions} from '../../types'\nimport {DeskToolProvider} from '../../DeskToolProvider'\nimport {setActivePanes} from '../../getIntentState'\nimport {IntentResolver} from './intentResolver'\nimport {StructureError} from './StructureError'\nimport {DeskTool} from './DeskTool'\nimport {SourceProvider, useWorkspace, Tool} from 'sanity'\n\ninterface DeskToolBoundaryProps {\n  tool: Tool<DeskToolOptions>\n}\n\nexport function DeskToolBoundary({tool: {options}}: DeskToolBoundaryProps) {\n  const {unstable_sources: sources} = useWorkspace()\n  const [firstSource] = sources\n  const {source, defaultDocumentNode, structure} = options || {}\n\n  // Set active panes to blank on mount and unmount\n  useEffect(() => {\n    setActivePanes([])\n    return () => setActivePanes([])\n  }, [])\n\n  const [{error}, setError] = useState<{error: unknown}>({error: null})\n  // this re-throws if the error it catches is not a PaneResolutionError\n  if (error) return <StructureError error={error} />\n\n  return (\n    <ErrorBoundary onCatch={setError}>\n      <SourceProvider name={source || firstSource.name}>\n        <DeskToolProvider defaultDocumentNode={defaultDocumentNode} structure={structure}>\n          <DeskTool onPaneChange={setActivePanes} />\n          <IntentResolver />\n        </DeskToolProvider>\n      </SourceProvider>\n    </ErrorBoundary>\n  )\n}\n"],"names":["RenderActionCollectionState","props","actions","children","actionProps","onActionComplete","jsx","GetHookCollectionState","onReset","hooks","args","RenderBadgeCollectionState","badges","badgeProps","rest","emptyArray","PaneRouterProvider","flatIndex","index","params","payload","siblingIndex","navigate","navigateIntent","resolvePathFromState","useRouter","routerState","useRouterState","panes","expand","usePaneLayout","routerPaneGroups","useMemo","lastPane","length","groupIndex","createNextRouterState","useCallback","modifier","currentGroup","currentItem","nextGroup","nextPanes","slice","nextRouterState","modifyCurrentGroup","setTimeout","createPathWithParams","nextParams","siblings","item","setPayload","nextPayload","setParams","handleEditReference","_ref","id","parentRefPath","type","template","pathToString","toString","ctx","hasGroupSiblings","groupLength","routerPanesState","ChildLink","BackLink","ReferenceChildLink","ParameterizedLink","replaceCurrent","opts","arguments","undefined","closeCurrent","filter","sibling","closeCurrentAndAfter","expandLast","element","replace","duplicateCurrent","options","duplicatedItem","setView","viewId","restParams","omit","view","PaneRouterContext","Provider","value","_calcPaneResize","cache","left","right","deltaX","_a","_b","sum","flex","width","leftMinWidth","minWidth","PANE_DEFAULT_MIN_WIDTH","rightMinWidth","leftMaxWidth","Math","min","maxWidth","Infinity","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","rootElement","el","path","e","parentElement","Array","from","childNodes","indexOf","unshift","EMPTY_PATH","_sortElements","elements","map","WeakMap","set","_sortByElementPath","a","b","get","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","expandedElement","resizeDataMap","Map","resizing","collapse","add","_notifyObservers","delete","mount","original","push","idx","splice","resize","leftElement","_c","_d","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","currentMinWidth","currentMaxWidth","setRootElement","nextRootElement","setRootWidth","nextRootWidth","subscribe","observer","_elements","dataMap","lastElement","collapsedWidth","PANE_COLLAPSED_WIDTH","remaingWidth","isLast","userCollapsed","has","sizeCollapsed","collapsed","resizeData","data","PaneLayout","onCollapse","onExpand","restProps","controller","useState","rootRect","useElementRect","state","setState","useEffect","paneLayout","PaneLayoutContext","Root","ref","DocumentInspectorPanel","documentId","documentType","usePane","closeInspector","inspector","useDocumentPane","features","useDeskTool","handleClose","name","createElement","component","onClose","resizablePanes","Resizable","as","DOCUMENT_INSPECTOR_MAX_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","Box","PaneResolutionError","Error","constructor","message","context","helpId","cause","_ref2","__publicField","randomIdCache","assignId","obj","cachedValue","nanoid","bindCache","memoBind","methodKey","boundMethods","bound","method","concat","bind","isPromise","thing","then","isSerializable","isRecord","serialize","rethrowWithPaneResolutionErrors","next","unresolvedPane","wrapWithPublishReplay","pipe","publishReplay","refCount","createPaneResolver","middleware","resolvePane","isObservable","switchMap","result","observableOf","resolveIntent","resolvedPaneCache","memoize","nextFn","key","join","cachedResolvedPane","fallbackEditorPanes","traverse","_ref3","currentId","intent","parent","levelIndex","structureContext","targetId","schemaTypeName","otherParams","splitIndex","resolvedPane","firstValueFrom","depthIndex","canHandleIntent","call","pane","child","items","Promise","all","nextLevelIndex","resolve","_id","flat","matchingPanes","rootPaneNode","closestPaneToRoot","fallbackEditorChild","nodeId","resolveDocumentNode","defaultDocumentBuilder","schemaType","initialValueTemplate","hashContext","stringify","parentId","serializeOptionsIndex","serializeOptions","serializeOptionsPath","hashResolvedPaneMeta","meta","normalized","routerPaneSibling","paneNode","JSON","resolvePaneTree","_ref4","flattenedRouterPanes","current","resolvedPaneMeta","loadingPanes","restIndex","loadingPanePath","_","currentIndex","loadingPane","of","nextStream","startsWith","nextResolvedPanes","console","warn","generateHelpUrl","createResolvedPaneNodeStream","_ref5","routerPanesStream","initialCacheState","cacheKeysByFlatIndex","NEVER","resolvedPanes$","rawRouterPanes","routerPanes","flatMap","routerPaneGroup","startWith","pairwise","_ref6","prev","curr","prevValue","currValue","isEqual","default","diffIndex","scan","acc","beforeDiffIndex","afterDiffIndex","keysToKeep","keySet","keysToDelete","cacheKeySet","_ref7","nextPane","prevPane","distinctUntilChanged","nextValue","useRouterPanesStream","routerStateSubject","ReplaySubject","routerPanes$","asObservable","_routerState","useResolvedPanes","error","setError","setData","paneDataItems","resolvedPanes","reduce","groupsLen","itemId","paneDataItem","active","childItemId","LOADING_PANE","selected","subscription","unsubscribe","ensureDocumentIdAndType","documentStore","uuid","resolvedType","resolveTypeForDocument","EMPTY_RECORD","IntentResolver","memo","IntentResolver2","maybeIntent","intentName","useDocumentStore","cancelled","effect","catch","PathSegment","styled","span","__template","formatStack","stack","RegExp","location","host","StructureError","_ref8","showStack","SerializeError","includes","handleReload","window","reload","Card","height","overflow","padding","sizing","tone","Container","Heading","jsxs","marginTop","radius","shadow","Stack","space","Label","Code","segment","Text","href","rel","target","Button","text","icon","SyncIcon","onClick","UnknownPane","isSelected","paneKey","Pane","PaneHeader","title","PaneContent","muted","getWaitMessages","thresholds","ms","isDev","src","merge","_ref9","mapTo","delay","DEFAULT_MESSAGE","Content","Flex","LoadingPane","messageProp","resolvedMessage","split","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","content","align","direction","justify","Spinner","size","displayName","paneMap","lazy","require","document","documentList","list","DeskToolPane","PaneComponent","Suspense","fallback","isActive","_ref10","_ref11","prevParams","prevPayload","keys","Object","ErrorPane","paddingX","paddingY","getOpErrorTitle","op","getOpSuccessTitle","IGNORE_OPS","DocumentOperationResults","DocumentOperationResults2","pushToast","useToast","event","useDocumentOperationEvent","prevEvent","useRef","paneRouter","usePaneRouter","cleanupId","closable","duration","status","description","clearTimeout","useDeskToolSetting","namespace","defaultValue","settingsStore","useSettingsStore","setValue","deskToolSettings","forNamespace","settings","forKey","listen","newValue","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","HLRU","isExpanded","keyPath","cached","isArray","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","selectAll","keyCode","metaKey","ctrlKey","preventDefault","isDocumentLike","isString","_type","JSONInspectorWrapper","div","_ref12","theme","color","fonts","sanity","css","code","family","sizes","fontSize","lineHeight","rem","syntax","property","constant","string","boolean","number","Search","onChange","query","handleChange","TextInput","SearchIcon","placeholder","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","find","mode","setParsedViewMode","setRawViewMode","Dialog","header","Fragment","DocTitle","onClickOutside","style","position","bottom","zIndex","TabList","Tab","label","TabPanel","outline","JSONInspector","search","language","tabIndex","onKeyDown","onDoubleClick","onFocus","DeletedDocumentBanner","_ref13","revisionId","restore","useDocumentOperation","handleRestore","execute","ReadOnlyIcon","gap","marginLeft","TextOneLine","ReferenceChangedBanner","_e","_f","documentPreviewStore","useDocumentPreviewStore","routerReferenceId","parentGroup","parentSibling","hasHistoryOpen","Boolean","rev","pathFromString","referenceInfo","useMemoObservable","parentRefPathSegment","loading","publishedId","getPublishedId","keyedSegmentIndex","findIndex","p","unstable_observePathsDocumentPair","debounceTime","_ref14","draft","published","availability","refValue","pathGet","snapshot","handleReloadReference","shouldHide","available","WarningOutlineIcon","CloseIcon","PermissionCheckBanner","_ref15","granted","requiredPermission","currentUser","useCurrentUser","plural","roles","r","array","sep","usePrevious","LONG_ENOUGH_BUT_NOT_TOO_LONG","useConditionalToast","toast","wasEnabled","enabled","ev","FormView","forwardRef","hidden","margins","collapsedFieldSets","collapsedPaths","displayed","editState","fieldActions","validation","ready","formState","onBlur","onSetCollapsedPath","onPathOpen","onSetCollapsedFieldSet","onSetActiveFieldGroup","presence","useDocumentPresence","patchChannel","createPatchChannel","isLocked","transactionSyncLock","pair","documentEvents","tap","publish","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","formRef","setFormRef","focusPath","focusFirstDescendant","setRef","node","paddingTop","paddingBottom","PresenceOverlay","onSubmit","FormBuilder","__internal_fieldActions","__internal_patchChannel","changed","focused","groups","members","onFieldGroupSelect","onPathBlur","onPathFocus","onSetFieldSetCollapsed","onSetPathCollapsed","readOnly","Delay","mutations","mut","patch","fromMutationPatches","origin","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","DocumentHeaderTab","handleClick","disabled","DocumentHeaderTitle","connectionState","documentValue","subscribed","useValuePreview","DocumentPanelHeader","DocumentPanelHeader2","_props","onMenuAction","onPaneClose","onPaneSplit","menuItems","menuItemGroups","timelineStore","unstable_languageFilter","useFieldActions","menuNodes","resolveMenuNodes","actionHandler","menuButtonNodes","isMenuNodeButton","contextMenuNodes","isNotMenuNodeButton","showTabs","useTimelineSelector","revTime","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","backButton","tabs","ArrowLeftIcon","subActions","TimelineMenu","chunk","placement","languageFilterComponent","PaneHeaderActionButton","PaneContextMenuButton","nodes","Tooltip","whiteSpace","portal","SplitVerticalIcon","DocumentBox","Scroller","ScrollContainer","_ref16","$disabled","DocumentPanel","footerHeight","isInspectOpen","setDocumentPanelPortalElement","permissions","isPermissionsLoading","isDeleting","isDeleted","layoutCollapsed","parentPortal","usePortal","headerElement","setHeaderElement","headerRect","portalRef","documentScrollElement","setDocumentScrollElement","formContainerElement","_createdAt","selectedGroup","group","activeView","portalElement","splitPanes","formViewHidden","activeViewNode","historical","lastNonDeletedRevId","scrollTo","inspectDialog","showInspector","PortalProvider","__unstable_elements","BoundaryElementProvider","VirtualizerScrollInstanceProvider","scrollElement","containerElement","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","Popover","ConfirmDialogContent","fallbackPlacements","open","preventOverflow","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","isTopLayer","useLayer","setElement","handleClickOutside","handleGlobalKeyDown","useClickOutside","useGlobalKeyDown","borderTop","Grid","columns","ModalDialog","dialogId","useId","footer","LegacyLayerProvider","zOffset","__unstable_hideCloseButton","showCloseButton","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","DOCUMENT_PANEL_PORTAL_ELEMENT","ActionStateDialog","modalId","unknownModal","ActionMenuButton","actionStates","idPrefix","buttonRef","actionIndex","setActionIndex","setReferenceElement","handleAction","popoverProps","currentAction","MenuButton","button","ChevronDownIcon","menu","Menu","actionState","ActionMenuListItem","onAction","popover","onHandle","tooltipContent","MenuItem","marginRight","isValidElement","isValidElementType","shortcut","Hotkeys","String","s","toUpperCase","DocumentStatusBarActionsInner","showMenu","states","firstActionState","menuActionStates","buttonElement","setButtonElement","toLowerCase","LayerProvider","DocumentStatusBarActions","DocumentStatusBarActions2","_ref17","HistoryStatusBarActions","HistoryStatusBarActions2","revision","historyActions","HistoryRestoreAction","_ref18","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","_ref19","Inline","badge","Badge","DocumentBadges","_ref20","PublishStatus","lastPublished","lastUpdated","liveEdit","lastPublishedTimeAgo","useTimeAgo","minimal","agoSuffix","lastPublishedTime","lastUpdatedTimeAgo","lastUpdatedTime","a11yUpdatedAgo","a11yPublishedAgo","a11yLabel","PlayIcon","PublishIcon","weight","StyledMotionPath","motion","Circle","circle","fill","cx","cy","strokeWidth","Arrows","d","Checkmark","Edit","rotateAnimation","keyframes","RotateGroup","g","root","syncing","scale","transition","saved","changes","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","edit","AnimatedStatusIcon","viewBox","stroke","variants","initial","animate","ReviewButton","React","buttonProps","ReviewChangesButton","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentSparkline","DocumentSparkline2","changesOpen","onHistoryClose","onHistoryOpen","syncState","useSyncState","_updatedAt","rootFlexElement","setRootFlexElement","rootFlexRect","setStatus","showingRevision","onOlderRevision","isSyncing","timerId","useLayoutEffect","reviewButton","publishStatus","DocumentActionsBox","DocumentStatusBar","actionsBoxRef","paddingLeft","paddingRight","KeyboardShortcutResponder","actionsBoxElement","activeIndex","onActionStart","rootRef","activeAction","handleKeyDown","matchingStates","isHotkey","matchingState","DocumentActionShortcuts","setActiveIndex","onComplete","_ref21","DIALOG_PROVIDER_POSITION","StyledChangeConnectorRoot","ChangeConnectorRoot","DocumentPane","parentSourceName","useSource","SourceProvider","source","DocumentPaneInner","resolveNewDocumentOptions","usePaneOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","providerProps","mergeDocumentType","childParams","routerPanesStateLength","activePath","DocumentPaneProvider","ReferenceInputOptionsProvider","EditReferenceLinkComponent","onEditReference","initialValueTemplateItems","InnerDocumentPane","templates","useTemplates","templateName","t","inspectOpen","onKeyUp","zOffsets","useZIndex","footerElement","setFooterElement","setActionsBoxElement","documentPanelPortalElement","footerRect","footerH","onConnectorSetFocus","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_PANEL_MIN_WIDTH","DialogProvider","isReviewChangesOpen","onOpenReviewChanges","onSetFocus","PaneFooter","NoDocumentTypesScreen","DocumentTitle","useEditState","schema","useSchema","isNewDocument","isLoading","previewValueIsLoading","documentTitle","settled","newTitle","useConstructDocumentTitle","PassthroughTitle","DeskTitle","isLoadingPane","isDocumentPane","activeTitle","deskToolBaseTitle","StyledPaneLayout","isSaveHotkey","DeskTool","DeskTool2","_ref22","onPaneChange","setLayoutCollapsed","isResolvingIntent","media","useTheme","setPortalElement","handleRootCollapse","handleRootExpand","addEventListener","removeEventListener","hasDefinedDocumentTypes","_original","types","some","_isCustomDocumentTypeDefinition","_ref23","paneIndex","paneParams","DeskToolBoundary","tool","_ref24","unstable_sources","sources","useWorkspace","firstSource","defaultDocumentNode","structure","setActivePanes","ErrorBoundary","onCatch","DeskToolProvider"],"mappings":"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"}