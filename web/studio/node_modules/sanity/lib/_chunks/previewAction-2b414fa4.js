'use strict';

var path = require('path');
var previewServer = require('./previewServer-e5d785d0.js');
require('chalk');
require('vite');
require('@vitejs/plugin-react');
require('read-pkg-up');
require('debug');
require('resolve-from');
require('./runtime-45c735c0.js');
require('fs');
require('connect-history-api-fallback');
require('fs/promises');
require('@sanity/cli');
var servers = require('./servers-d0f8a2e6.js');
function _interopDefaultCompat(e) {
  return e && typeof e === 'object' && 'default' in e ? e : {
    default: e
  };
}
var path__default = /*#__PURE__*/_interopDefaultCompat(path);
async function startSanityPreviewServer(args, context) {
  const flags = args.extOptions;
  const {
    workDir,
    cliConfig
  } = context;
  const defaultRootDir = path__default.default.resolve(path__default.default.join(workDir, "dist"));
  const rootDir = path__default.default.resolve(args.argsWithoutOptions[0] || defaultRootDir);
  const config = getPreviewServerConfig({
    flags,
    workDir,
    cliConfig,
    rootDir
  });
  try {
    await previewServer.startPreviewServer(config);
  } catch (err) {
    servers.gracefulServerDeath("preview", config.httpHost, config.httpPort, err);
  }
}
function getPreviewServerConfig(_ref) {
  let {
    flags,
    workDir,
    cliConfig,
    rootDir
  } = _ref;
  const baseConfig = servers.getSharedServerConfig({
    flags,
    workDir,
    cliConfig
  });
  return {
    ...baseConfig,
    root: rootDir
  };
}
exports.default = startSanityPreviewServer;
//# sourceMappingURL=previewAction-2b414fa4.js.map
